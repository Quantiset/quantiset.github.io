(self["webpackChunkGUI"] = self["webpackChunkGUI"] || []).push([["vendors-node_modules_core-js_fn_array_includes_js-node_modules_intl_index_js-node_modules_abl-bc6f29"],{

/***/ "./node_modules/core-js/fn/array/includes.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/array/includes.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.array.includes */ "./node_modules/core-js/modules/es7.array.includes.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/modules/_core.js").Array.includes;

/***/ }),

/***/ "./node_modules/core-js/modules/_a-function.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_a-function.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

/***/ }),

/***/ "./node_modules/core-js/modules/_add-to-unscopables.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_add-to-unscopables.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/modules/_wks.js")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

/***/ }),

/***/ "./node_modules/core-js/modules/_an-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_an-object.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

/***/ }),

/***/ "./node_modules/core-js/modules/_array-includes.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-includes.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
      // Array#indexOf ignores holes, Array#includes - not
    } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    }
    return !IS_INCLUDES && -1;
  };
};

/***/ }),

/***/ "./node_modules/core-js/modules/_cof.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_cof.js ***!
  \**********************************************/
/***/ ((module) => {

var toString = {}.toString;
module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

/***/ }),

/***/ "./node_modules/core-js/modules/_core.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_core.js ***!
  \***********************************************/
/***/ ((module) => {

var core = module.exports = {
  version: '2.5.7'
};
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

/***/ }),

/***/ "./node_modules/core-js/modules/_ctx.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_ctx.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1:
      return function (a) {
        return fn.call(that, a);
      };
    case 2:
      return function (a, b) {
        return fn.call(that, a, b);
      };
    case 3:
      return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
  }
  return function /* ...args */
  () {
    return fn.apply(that, arguments);
  };
};

/***/ }),

/***/ "./node_modules/core-js/modules/_defined.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_defined.js ***!
  \**************************************************/
/***/ ((module) => {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

/***/ }),

/***/ "./node_modules/core-js/modules/_descriptors.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_descriptors.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', {
    get: function get() {
      return 7;
    }
  }).a != 7;
});

/***/ }),

/***/ "./node_modules/core-js/modules/_dom-create.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_dom-create.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
var document = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").document);
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

/***/ }),

/***/ "./node_modules/core-js/modules/_export.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_export.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/modules/_redefine.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/modules/_ctx.js");
var PROTOTYPE = 'prototype';
var $export = function $export(type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1; // forced
$export.G = 2; // global
$export.S = 4; // static
$export.P = 8; // proto
$export.B = 16; // bind
$export.W = 32; // wrap
$export.U = 64; // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

/***/ }),

/***/ "./node_modules/core-js/modules/_fails.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_fails.js ***!
  \************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

/***/ }),

/***/ "./node_modules/core-js/modules/_global.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_global.js ***!
  \*************************************************/
/***/ ((module) => {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self
// eslint-disable-next-line no-new-func
: Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

/***/ }),

/***/ "./node_modules/core-js/modules/_has.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_has.js ***!
  \**********************************************/
/***/ ((module) => {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

/***/ }),

/***/ "./node_modules/core-js/modules/_hide.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_hide.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

/***/ }),

/***/ "./node_modules/core-js/modules/_ie8-dom-define.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_ie8-dom-define.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/modules/_dom-create.js")('div'), 'a', {
    get: function get() {
      return 7;
    }
  }).a != 7;
});

/***/ }),

/***/ "./node_modules/core-js/modules/_iobject.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_iobject.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

/***/ }),

/***/ "./node_modules/core-js/modules/_is-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-object.js ***!
  \****************************************************/
/***/ ((module) => {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

/***/ }),

/***/ "./node_modules/core-js/modules/_library.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_library.js ***!
  \**************************************************/
/***/ ((module) => {

module.exports = false;

/***/ }),

/***/ "./node_modules/core-js/modules/_object-dp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dp.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/modules/_to-primitive.js");
var dP = Object.defineProperty;
exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) {/* empty */}
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

/***/ }),

/***/ "./node_modules/core-js/modules/_property-desc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_property-desc.js ***!
  \********************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

/***/ }),

/***/ "./node_modules/core-js/modules/_redefine.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/modules/_has.js");
var SRC = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js")('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);
(__webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js").inspectSource) = function (it) {
  return $toString.call(it);
};
(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

/***/ }),

/***/ "./node_modules/core-js/modules/_shared.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_shared.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});

/***/ }),

/***/ "./node_modules/core-js/modules/_to-absolute-index.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_to-absolute-index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

/***/ }),

/***/ "./node_modules/core-js/modules/_to-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-integer.js ***!
  \*****************************************************/
/***/ ((module) => {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

/***/ }),

/***/ "./node_modules/core-js/modules/_to-iobject.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-iobject.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};

/***/ }),

/***/ "./node_modules/core-js/modules/_to-length.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-length.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

/***/ }),

/***/ "./node_modules/core-js/modules/_to-primitive.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_to-primitive.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),

/***/ "./node_modules/core-js/modules/_uid.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_uid.js ***!
  \**********************************************/
/***/ ((module) => {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

/***/ }),

/***/ "./node_modules/core-js/modules/_wks.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_wks.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/modules/_uid.js");
var Symbol = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/modules/_global.js").Symbol);
var USE_SYMBOL = typeof Symbol == 'function';
var $exports = module.exports = function (name) {
  return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};
$exports.store = store;

/***/ }),

/***/ "./node_modules/core-js/modules/es7.array.includes.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.includes.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/modules/_export.js");
var $includes = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/modules/_array-includes.js")(true);
$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/modules/_add-to-unscopables.js")('includes');

/***/ }),

/***/ "./node_modules/intl/index.js":
/*!************************************!*\
  !*** ./node_modules/intl/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Expose `IntlPolyfill` as global to add locale data into runtime later on.
__webpack_require__.g.IntlPolyfill = __webpack_require__(/*! ./lib/core.js */ "./node_modules/intl/lib/core.js");

// Require all locale data for `Intl`. This module will be
// ignored when bundling for the browser with Browserify/Webpack.
__webpack_require__(/*! ./locale-data/complete.js */ "?2dd4");

// hack to export the polyfill as global Intl if needed
if (!__webpack_require__.g.Intl) {
  __webpack_require__.g.Intl = __webpack_require__.g.IntlPolyfill;
  __webpack_require__.g.IntlPolyfill.__applyLocaleSensitivePrototypes();
}

// providing an idiomatic api for the nodejs version of this module
module.exports = __webpack_require__.g.IntlPolyfill;

/***/ }),

/***/ "./node_modules/intl/lib/core.js":
/*!***************************************!*\
  !*** ./node_modules/intl/lib/core.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
var jsx = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7;
  return function createRawReactElement(type, props, key, children) {
    var defaultProps = type && type.defaultProps;
    var childrenLength = arguments.length - 3;
    if (!props && childrenLength !== 0) {
      props = {};
    }
    if (props && defaultProps) {
      for (var propName in defaultProps) {
        if (props[propName] === void 0) {
          props[propName] = defaultProps[propName];
        }
      }
    } else if (!props) {
      props = defaultProps || {};
    }
    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = Array(childrenLength);
      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 3];
      }
      props.children = childArray;
    }
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key === undefined ? null : '' + key,
      ref: null,
      props: props,
      _owner: null
    };
  };
}();
var asyncToGenerator = function asyncToGenerator(fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new Promise(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }
        if (info.done) {
          resolve(value);
        } else {
          return Promise.resolve(value).then(function (value) {
            return step("next", value);
          }, function (err) {
            return step("throw", err);
          });
        }
      }
      return step("next");
    });
  };
};
var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var defineEnumerableProperties = function defineEnumerableProperties(obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ("value" in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }
  return obj;
};
var defaults = function defaults(obj, _defaults) {
  var keys = Object.getOwnPropertyNames(_defaults);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = Object.getOwnPropertyDescriptor(_defaults, key);
    if (value && value.configurable && obj[key] === undefined) {
      Object.defineProperty(obj, key, value);
    }
  }
  return obj;
};
var defineProperty$1 = function defineProperty$1(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
};
var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);
  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);
    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;
    if (getter === undefined) {
      return undefined;
    }
    return getter.call(receiver);
  }
};
var inherits = function inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};
var _instanceof = function _instanceof(left, right) {
  if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
    return right[Symbol.hasInstance](left);
  } else {
    return left instanceof right;
  }
};
var interopRequireDefault = function interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
};
var interopRequireWildcard = function interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};
    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }
    newObj.default = obj;
    return newObj;
  }
};
var newArrowCheck = function newArrowCheck(innerThis, boundThis) {
  if (innerThis !== boundThis) {
    throw new TypeError("Cannot instantiate an arrow function");
  }
};
var objectDestructuringEmpty = function objectDestructuringEmpty(obj) {
  if (obj == null) throw new TypeError("Cannot destructure undefined");
};
var objectWithoutProperties = function objectWithoutProperties(obj, keys) {
  var target = {};
  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }
  return target;
};
var possibleConstructorReturn = function possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};
var selfGlobal = typeof __webpack_require__.g === "undefined" ? self : __webpack_require__.g;
var set = function set(object, property, value, receiver) {
  var desc = Object.getOwnPropertyDescriptor(object, property);
  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);
    if (parent !== null) {
      set(parent, property, value, receiver);
    }
  } else if ("value" in desc && desc.writable) {
    desc.value = value;
  } else {
    var setter = desc.set;
    if (setter !== undefined) {
      setter.call(receiver, value);
    }
  }
  return value;
};
var slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();
var slicedToArrayLoose = function slicedToArrayLoose(arr, i) {
  if (Array.isArray(arr)) {
    return arr;
  } else if (Symbol.iterator in Object(arr)) {
    var _arr = [];
    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
      _arr.push(_step.value);
      if (i && _arr.length === i) break;
    }
    return _arr;
  } else {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
};
var taggedTemplateLiteral = function taggedTemplateLiteral(strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};
var taggedTemplateLiteralLoose = function taggedTemplateLiteralLoose(strings, raw) {
  strings.raw = raw;
  return strings;
};
var temporalRef = function temporalRef(val, name, undef) {
  if (val === undef) {
    throw new ReferenceError(name + " is not defined - temporal dead zone");
  } else {
    return val;
  }
};
var temporalUndefined = {};
var toArray = function toArray(arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};
var toConsumableArray = function toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];
    return arr2;
  } else {
    return Array.from(arr);
  }
};
var babelHelpers$1 = Object.freeze({
  jsx: jsx,
  asyncToGenerator: asyncToGenerator,
  classCallCheck: classCallCheck,
  createClass: createClass,
  defineEnumerableProperties: defineEnumerableProperties,
  defaults: defaults,
  defineProperty: defineProperty$1,
  get: get,
  inherits: inherits,
  interopRequireDefault: interopRequireDefault,
  interopRequireWildcard: interopRequireWildcard,
  newArrowCheck: newArrowCheck,
  objectDestructuringEmpty: objectDestructuringEmpty,
  objectWithoutProperties: objectWithoutProperties,
  possibleConstructorReturn: possibleConstructorReturn,
  selfGlobal: selfGlobal,
  set: set,
  slicedToArray: slicedToArray,
  slicedToArrayLoose: slicedToArrayLoose,
  taggedTemplateLiteral: taggedTemplateLiteral,
  taggedTemplateLiteralLoose: taggedTemplateLiteralLoose,
  temporalRef: temporalRef,
  temporalUndefined: temporalUndefined,
  toArray: toArray,
  toConsumableArray: toConsumableArray,
  typeof: _typeof,
  extends: _extends,
  instanceof: _instanceof
});
var realDefineProp = function () {
  var sentinel = function sentinel() {};
  try {
    Object.defineProperty(sentinel, 'a', {
      get: function get() {
        return 1;
      }
    });
    Object.defineProperty(sentinel, 'prototype', {
      writable: false
    });
    return sentinel.a === 1 && sentinel.prototype instanceof Object;
  } catch (e) {
    return false;
  }
}();

// Need a workaround for getters in ES3
var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

// We use this a lot (and need it for proto-less objects)
var hop = Object.prototype.hasOwnProperty;

// Naive defineProperty for compatibility
var defineProperty = realDefineProp ? Object.defineProperty : function (obj, name, desc) {
  if ('get' in desc && obj.__defineGetter__) obj.__defineGetter__(name, desc.get);else if (!hop.call(obj, name) || 'value' in desc) obj[name] = desc.value;
};

// Array.prototype.indexOf, as good as we need it to be
var arrIndexOf = Array.prototype.indexOf || function (search) {
  /*jshint validthis:true */
  var t = this;
  if (!t.length) return -1;
  for (var i = arguments[1] || 0, max = t.length; i < max; i++) {
    if (t[i] === search) return i;
  }
  return -1;
};

// Create an object with the specified prototype (2nd arg required for Record)
var objCreate = Object.create || function (proto, props) {
  var obj = void 0;
  function F() {}
  F.prototype = proto;
  obj = new F();
  for (var k in props) {
    if (hop.call(props, k)) defineProperty(obj, k, props[k]);
  }
  return obj;
};

// Snapshot some (hopefully still) native built-ins
var arrSlice = Array.prototype.slice;
var arrConcat = Array.prototype.concat;
var arrPush = Array.prototype.push;
var arrJoin = Array.prototype.join;
var arrShift = Array.prototype.shift;

// Naive Function.prototype.bind for compatibility
var fnBind = Function.prototype.bind || function (thisObj) {
  var fn = this,
    args = arrSlice.call(arguments, 1);

  // All our (presently) bound functions have either 1 or 0 arguments. By returning
  // different function signatures, we can pass some tests in ES3 environments
  if (fn.length === 1) {
    return function () {
      return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
    };
  }
  return function () {
    return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
  };
};

// Object housing internal properties for constructors
var internals = objCreate(null);

// Keep internal properties internal
var secret = Math.random();

// Helper functions
// ================

/**
 * A function to deal with the inaccuracy of calculating log10 in pre-ES6
 * JavaScript environments. Math.log(num) / Math.LN10 was responsible for
 * causing issue #62.
 */
function log10Floor(n) {
  // ES6 provides the more accurate Math.log10
  if (typeof Math.log10 === 'function') return Math.floor(Math.log10(n));
  var x = Math.round(Math.log(n) * Math.LOG10E);
  return x - (Number('1e' + x) > n);
}

/**
 * A map that doesn't contain Object in its prototype chain
 */
function Record(obj) {
  // Copy only own properties over unless this object is already a Record instance
  for (var k in obj) {
    if (obj instanceof Record || hop.call(obj, k)) defineProperty(this, k, {
      value: obj[k],
      enumerable: true,
      writable: true,
      configurable: true
    });
  }
}
Record.prototype = objCreate(null);

/**
 * An ordered list
 */
function List() {
  defineProperty(this, 'length', {
    writable: true,
    value: 0
  });
  if (arguments.length) arrPush.apply(this, arrSlice.call(arguments));
}
List.prototype = objCreate(null);

/**
 * Constructs a regular expression to restore tainted RegExp properties
 */
function createRegExpRestore() {
  if (internals.disableRegExpRestore) {
    return function () {/* no-op */};
  }
  var regExpCache = {
      lastMatch: RegExp.lastMatch || '',
      leftContext: RegExp.leftContext,
      multiline: RegExp.multiline,
      input: RegExp.input
    },
    has = false;

  // Create a snapshot of all the 'captured' properties
  for (var i = 1; i <= 9; i++) {
    has = (regExpCache['$' + i] = RegExp['$' + i]) || has;
  }
  return function () {
    // Now we've snapshotted some properties, escape the lastMatch string
    var esc = /[.?*+^$[\]\\(){}|-]/g,
      lm = regExpCache.lastMatch.replace(esc, '\\$&'),
      reg = new List();

    // If any of the captured strings were non-empty, iterate over them all
    if (has) {
      for (var _i = 1; _i <= 9; _i++) {
        var m = regExpCache['$' + _i];

        // If it's empty, add an empty capturing group
        if (!m) lm = '()' + lm;

        // Else find the string in lm and escape & wrap it to capture it
        else {
          m = m.replace(esc, '\\$&');
          lm = lm.replace(m, '(' + m + ')');
        }

        // Push it to the reg and chop lm to make sure further groups come after
        arrPush.call(reg, lm.slice(0, lm.indexOf('(') + 1));
        lm = lm.slice(lm.indexOf('(') + 1);
      }
    }
    var exprStr = arrJoin.call(reg, '') + lm;

    // Shorten the regex by replacing each part of the expression with a match
    // for a string of that exact length.  This is safe for the type of
    // expressions generated above, because the expression matches the whole
    // match string, so we know each group and each segment between capturing
    // groups can be matched by its length alone.
    exprStr = exprStr.replace(/(\\\(|\\\)|[^()])+/g, function (match) {
      return '[\\s\\S]{' + match.replace('\\', '').length + '}';
    });

    // Create the regular expression that will reconstruct the RegExp properties
    var expr = new RegExp(exprStr, regExpCache.multiline ? 'gm' : 'g');

    // Set the lastIndex of the generated expression to ensure that the match
    // is found in the correct index.
    expr.lastIndex = regExpCache.leftContext.length;
    expr.exec(regExpCache.input);
  };
}

/**
 * Mimics ES5's abstract ToObject() function
 */
function toObject(arg) {
  if (arg === null) throw new TypeError('Cannot convert null or undefined to object');
  if ((typeof arg === 'undefined' ? 'undefined' : babelHelpers$1['typeof'](arg)) === 'object') return arg;
  return Object(arg);
}
function toNumber(arg) {
  if (typeof arg === 'number') return arg;
  return Number(arg);
}
function toInteger(arg) {
  var number = toNumber(arg);
  if (isNaN(number)) return 0;
  if (number === +0 || number === -0 || number === +Infinity || number === -Infinity) return number;
  if (number < 0) return Math.floor(Math.abs(number)) * -1;
  return Math.floor(Math.abs(number));
}
function toLength(arg) {
  var len = toInteger(arg);
  if (len <= 0) return 0;
  if (len === Infinity) return Math.pow(2, 53) - 1;
  return Math.min(len, Math.pow(2, 53) - 1);
}

/**
 * Returns "internal" properties for an object
 */
function getInternalProperties(obj) {
  if (hop.call(obj, '__getInternalProperties')) return obj.__getInternalProperties(secret);
  return objCreate(null);
}

/**
* Defines regular expressions for various operations related to the BCP 47 syntax,
* as defined at http://tools.ietf.org/html/bcp47#section-2.1
*/

// extlang       = 3ALPHA              ; selected ISO 639 codes
//                 *2("-" 3ALPHA)      ; permanently reserved
var extlang = '[a-z]{3}(?:-[a-z]{3}){0,2}';

// language      = 2*3ALPHA            ; shortest ISO 639 code
//                 ["-" extlang]       ; sometimes followed by
//                                     ; extended language subtags
//               / 4ALPHA              ; or reserved for future use
//               / 5*8ALPHA            ; or registered language subtag
var language = '(?:[a-z]{2,3}(?:-' + extlang + ')?|[a-z]{4}|[a-z]{5,8})';

// script        = 4ALPHA              ; ISO 15924 code
var script = '[a-z]{4}';

// region        = 2ALPHA              ; ISO 3166-1 code
//               / 3DIGIT              ; UN M.49 code
var region = '(?:[a-z]{2}|\\d{3})';

// variant       = 5*8alphanum         ; registered variants
//               / (DIGIT 3alphanum)
var variant = '(?:[a-z0-9]{5,8}|\\d[a-z0-9]{3})';

//                                     ; Single alphanumerics
//                                     ; "x" reserved for private use
// singleton     = DIGIT               ; 0 - 9
//               / %x41-57             ; A - W
//               / %x59-5A             ; Y - Z
//               / %x61-77             ; a - w
//               / %x79-7A             ; y - z
var singleton = '[0-9a-wy-z]';

// extension     = singleton 1*("-" (2*8alphanum))
var extension = singleton + '(?:-[a-z0-9]{2,8})+';

// privateuse    = "x" 1*("-" (1*8alphanum))
var privateuse = 'x(?:-[a-z0-9]{1,8})+';

// irregular     = "en-GB-oed"         ; irregular tags do not match
//               / "i-ami"             ; the 'langtag' production and
//               / "i-bnn"             ; would not otherwise be
//               / "i-default"         ; considered 'well-formed'
//               / "i-enochian"        ; These tags are all valid,
//               / "i-hak"             ; but most are deprecated
//               / "i-klingon"         ; in favor of more modern
//               / "i-lux"             ; subtags or subtag
//               / "i-mingo"           ; combination
//               / "i-navajo"
//               / "i-pwn"
//               / "i-tao"
//               / "i-tay"
//               / "i-tsu"
//               / "sgn-BE-FR"
//               / "sgn-BE-NL"
//               / "sgn-CH-DE"
var irregular = '(?:en-GB-oed' + '|i-(?:ami|bnn|default|enochian|hak|klingon|lux|mingo|navajo|pwn|tao|tay|tsu)' + '|sgn-(?:BE-FR|BE-NL|CH-DE))';

// regular       = "art-lojban"        ; these tags match the 'langtag'
//               / "cel-gaulish"       ; production, but their subtags
//               / "no-bok"            ; are not extended language
//               / "no-nyn"            ; or variant subtags: their meaning
//               / "zh-guoyu"          ; is defined by their registration
//               / "zh-hakka"          ; and all of these are deprecated
//               / "zh-min"            ; in favor of a more modern
//               / "zh-min-nan"        ; subtag or sequence of subtags
//               / "zh-xiang"
var regular = '(?:art-lojban|cel-gaulish|no-bok|no-nyn' + '|zh-(?:guoyu|hakka|min|min-nan|xiang))';

// grandfathered = irregular           ; non-redundant tags registered
//               / regular             ; during the RFC 3066 era
var grandfathered = '(?:' + irregular + '|' + regular + ')';

// langtag       = language
//                 ["-" script]
//                 ["-" region]
//                 *("-" variant)
//                 *("-" extension)
//                 ["-" privateuse]
var langtag = language + '(?:-' + script + ')?(?:-' + region + ')?(?:-' + variant + ')*(?:-' + extension + ')*(?:-' + privateuse + ')?';

// Language-Tag  = langtag             ; normal language tags
//               / privateuse          ; private use tag
//               / grandfathered       ; grandfathered tags
var expBCP47Syntax = RegExp('^(?:' + langtag + '|' + privateuse + '|' + grandfathered + ')$', 'i');

// Match duplicate variants in a language tag
var expVariantDupes = RegExp('^(?!x).*?-(' + variant + ')-(?:\\w{4,8}-(?!x-))*\\1\\b', 'i');

// Match duplicate singletons in a language tag (except in private use)
var expSingletonDupes = RegExp('^(?!x).*?-(' + singleton + ')-(?:\\w+-(?!x-))*\\1\\b', 'i');

// Match all extension sequences
var expExtSequences = RegExp('-' + extension, 'ig');

// Default locale is the first-added locale data for us
var defaultLocale = void 0;
function setDefaultLocale(locale) {
  defaultLocale = locale;
}

// IANA Subtag Registry redundant tag and subtag maps
var redundantTags = {
  tags: {
    "art-lojban": "jbo",
    "i-ami": "ami",
    "i-bnn": "bnn",
    "i-hak": "hak",
    "i-klingon": "tlh",
    "i-lux": "lb",
    "i-navajo": "nv",
    "i-pwn": "pwn",
    "i-tao": "tao",
    "i-tay": "tay",
    "i-tsu": "tsu",
    "no-bok": "nb",
    "no-nyn": "nn",
    "sgn-BE-FR": "sfb",
    "sgn-BE-NL": "vgt",
    "sgn-CH-DE": "sgg",
    "zh-guoyu": "cmn",
    "zh-hakka": "hak",
    "zh-min-nan": "nan",
    "zh-xiang": "hsn",
    "sgn-BR": "bzs",
    "sgn-CO": "csn",
    "sgn-DE": "gsg",
    "sgn-DK": "dsl",
    "sgn-ES": "ssp",
    "sgn-FR": "fsl",
    "sgn-GB": "bfi",
    "sgn-GR": "gss",
    "sgn-IE": "isg",
    "sgn-IT": "ise",
    "sgn-JP": "jsl",
    "sgn-MX": "mfs",
    "sgn-NI": "ncs",
    "sgn-NL": "dse",
    "sgn-NO": "nsl",
    "sgn-PT": "psr",
    "sgn-SE": "swl",
    "sgn-US": "ase",
    "sgn-ZA": "sfs",
    "zh-cmn": "cmn",
    "zh-cmn-Hans": "cmn-Hans",
    "zh-cmn-Hant": "cmn-Hant",
    "zh-gan": "gan",
    "zh-wuu": "wuu",
    "zh-yue": "yue"
  },
  subtags: {
    BU: "MM",
    DD: "DE",
    FX: "FR",
    TP: "TL",
    YD: "YE",
    ZR: "CD",
    heploc: "alalc97",
    'in': "id",
    iw: "he",
    ji: "yi",
    jw: "jv",
    mo: "ro",
    ayx: "nun",
    bjd: "drl",
    ccq: "rki",
    cjr: "mom",
    cka: "cmr",
    cmk: "xch",
    drh: "khk",
    drw: "prs",
    gav: "dev",
    hrr: "jal",
    ibi: "opa",
    kgh: "kml",
    lcq: "ppr",
    mst: "mry",
    myt: "mry",
    sca: "hle",
    tie: "ras",
    tkk: "twm",
    tlw: "weo",
    tnf: "prs",
    ybd: "rki",
    yma: "lrr"
  },
  extLang: {
    aao: ["aao", "ar"],
    abh: ["abh", "ar"],
    abv: ["abv", "ar"],
    acm: ["acm", "ar"],
    acq: ["acq", "ar"],
    acw: ["acw", "ar"],
    acx: ["acx", "ar"],
    acy: ["acy", "ar"],
    adf: ["adf", "ar"],
    ads: ["ads", "sgn"],
    aeb: ["aeb", "ar"],
    aec: ["aec", "ar"],
    aed: ["aed", "sgn"],
    aen: ["aen", "sgn"],
    afb: ["afb", "ar"],
    afg: ["afg", "sgn"],
    ajp: ["ajp", "ar"],
    apc: ["apc", "ar"],
    apd: ["apd", "ar"],
    arb: ["arb", "ar"],
    arq: ["arq", "ar"],
    ars: ["ars", "ar"],
    ary: ["ary", "ar"],
    arz: ["arz", "ar"],
    ase: ["ase", "sgn"],
    asf: ["asf", "sgn"],
    asp: ["asp", "sgn"],
    asq: ["asq", "sgn"],
    asw: ["asw", "sgn"],
    auz: ["auz", "ar"],
    avl: ["avl", "ar"],
    ayh: ["ayh", "ar"],
    ayl: ["ayl", "ar"],
    ayn: ["ayn", "ar"],
    ayp: ["ayp", "ar"],
    bbz: ["bbz", "ar"],
    bfi: ["bfi", "sgn"],
    bfk: ["bfk", "sgn"],
    bjn: ["bjn", "ms"],
    bog: ["bog", "sgn"],
    bqn: ["bqn", "sgn"],
    bqy: ["bqy", "sgn"],
    btj: ["btj", "ms"],
    bve: ["bve", "ms"],
    bvl: ["bvl", "sgn"],
    bvu: ["bvu", "ms"],
    bzs: ["bzs", "sgn"],
    cdo: ["cdo", "zh"],
    cds: ["cds", "sgn"],
    cjy: ["cjy", "zh"],
    cmn: ["cmn", "zh"],
    coa: ["coa", "ms"],
    cpx: ["cpx", "zh"],
    csc: ["csc", "sgn"],
    csd: ["csd", "sgn"],
    cse: ["cse", "sgn"],
    csf: ["csf", "sgn"],
    csg: ["csg", "sgn"],
    csl: ["csl", "sgn"],
    csn: ["csn", "sgn"],
    csq: ["csq", "sgn"],
    csr: ["csr", "sgn"],
    czh: ["czh", "zh"],
    czo: ["czo", "zh"],
    doq: ["doq", "sgn"],
    dse: ["dse", "sgn"],
    dsl: ["dsl", "sgn"],
    dup: ["dup", "ms"],
    ecs: ["ecs", "sgn"],
    esl: ["esl", "sgn"],
    esn: ["esn", "sgn"],
    eso: ["eso", "sgn"],
    eth: ["eth", "sgn"],
    fcs: ["fcs", "sgn"],
    fse: ["fse", "sgn"],
    fsl: ["fsl", "sgn"],
    fss: ["fss", "sgn"],
    gan: ["gan", "zh"],
    gds: ["gds", "sgn"],
    gom: ["gom", "kok"],
    gse: ["gse", "sgn"],
    gsg: ["gsg", "sgn"],
    gsm: ["gsm", "sgn"],
    gss: ["gss", "sgn"],
    gus: ["gus", "sgn"],
    hab: ["hab", "sgn"],
    haf: ["haf", "sgn"],
    hak: ["hak", "zh"],
    hds: ["hds", "sgn"],
    hji: ["hji", "ms"],
    hks: ["hks", "sgn"],
    hos: ["hos", "sgn"],
    hps: ["hps", "sgn"],
    hsh: ["hsh", "sgn"],
    hsl: ["hsl", "sgn"],
    hsn: ["hsn", "zh"],
    icl: ["icl", "sgn"],
    ils: ["ils", "sgn"],
    inl: ["inl", "sgn"],
    ins: ["ins", "sgn"],
    ise: ["ise", "sgn"],
    isg: ["isg", "sgn"],
    isr: ["isr", "sgn"],
    jak: ["jak", "ms"],
    jax: ["jax", "ms"],
    jcs: ["jcs", "sgn"],
    jhs: ["jhs", "sgn"],
    jls: ["jls", "sgn"],
    jos: ["jos", "sgn"],
    jsl: ["jsl", "sgn"],
    jus: ["jus", "sgn"],
    kgi: ["kgi", "sgn"],
    knn: ["knn", "kok"],
    kvb: ["kvb", "ms"],
    kvk: ["kvk", "sgn"],
    kvr: ["kvr", "ms"],
    kxd: ["kxd", "ms"],
    lbs: ["lbs", "sgn"],
    lce: ["lce", "ms"],
    lcf: ["lcf", "ms"],
    liw: ["liw", "ms"],
    lls: ["lls", "sgn"],
    lsg: ["lsg", "sgn"],
    lsl: ["lsl", "sgn"],
    lso: ["lso", "sgn"],
    lsp: ["lsp", "sgn"],
    lst: ["lst", "sgn"],
    lsy: ["lsy", "sgn"],
    ltg: ["ltg", "lv"],
    lvs: ["lvs", "lv"],
    lzh: ["lzh", "zh"],
    max: ["max", "ms"],
    mdl: ["mdl", "sgn"],
    meo: ["meo", "ms"],
    mfa: ["mfa", "ms"],
    mfb: ["mfb", "ms"],
    mfs: ["mfs", "sgn"],
    min: ["min", "ms"],
    mnp: ["mnp", "zh"],
    mqg: ["mqg", "ms"],
    mre: ["mre", "sgn"],
    msd: ["msd", "sgn"],
    msi: ["msi", "ms"],
    msr: ["msr", "sgn"],
    mui: ["mui", "ms"],
    mzc: ["mzc", "sgn"],
    mzg: ["mzg", "sgn"],
    mzy: ["mzy", "sgn"],
    nan: ["nan", "zh"],
    nbs: ["nbs", "sgn"],
    ncs: ["ncs", "sgn"],
    nsi: ["nsi", "sgn"],
    nsl: ["nsl", "sgn"],
    nsp: ["nsp", "sgn"],
    nsr: ["nsr", "sgn"],
    nzs: ["nzs", "sgn"],
    okl: ["okl", "sgn"],
    orn: ["orn", "ms"],
    ors: ["ors", "ms"],
    pel: ["pel", "ms"],
    pga: ["pga", "ar"],
    pks: ["pks", "sgn"],
    prl: ["prl", "sgn"],
    prz: ["prz", "sgn"],
    psc: ["psc", "sgn"],
    psd: ["psd", "sgn"],
    pse: ["pse", "ms"],
    psg: ["psg", "sgn"],
    psl: ["psl", "sgn"],
    pso: ["pso", "sgn"],
    psp: ["psp", "sgn"],
    psr: ["psr", "sgn"],
    pys: ["pys", "sgn"],
    rms: ["rms", "sgn"],
    rsi: ["rsi", "sgn"],
    rsl: ["rsl", "sgn"],
    sdl: ["sdl", "sgn"],
    sfb: ["sfb", "sgn"],
    sfs: ["sfs", "sgn"],
    sgg: ["sgg", "sgn"],
    sgx: ["sgx", "sgn"],
    shu: ["shu", "ar"],
    slf: ["slf", "sgn"],
    sls: ["sls", "sgn"],
    sqk: ["sqk", "sgn"],
    sqs: ["sqs", "sgn"],
    ssh: ["ssh", "ar"],
    ssp: ["ssp", "sgn"],
    ssr: ["ssr", "sgn"],
    svk: ["svk", "sgn"],
    swc: ["swc", "sw"],
    swh: ["swh", "sw"],
    swl: ["swl", "sgn"],
    syy: ["syy", "sgn"],
    tmw: ["tmw", "ms"],
    tse: ["tse", "sgn"],
    tsm: ["tsm", "sgn"],
    tsq: ["tsq", "sgn"],
    tss: ["tss", "sgn"],
    tsy: ["tsy", "sgn"],
    tza: ["tza", "sgn"],
    ugn: ["ugn", "sgn"],
    ugy: ["ugy", "sgn"],
    ukl: ["ukl", "sgn"],
    uks: ["uks", "sgn"],
    urk: ["urk", "ms"],
    uzn: ["uzn", "uz"],
    uzs: ["uzs", "uz"],
    vgt: ["vgt", "sgn"],
    vkk: ["vkk", "ms"],
    vkt: ["vkt", "ms"],
    vsi: ["vsi", "sgn"],
    vsl: ["vsl", "sgn"],
    vsv: ["vsv", "sgn"],
    wuu: ["wuu", "zh"],
    xki: ["xki", "sgn"],
    xml: ["xml", "sgn"],
    xmm: ["xmm", "ms"],
    xms: ["xms", "sgn"],
    yds: ["yds", "sgn"],
    ysl: ["ysl", "sgn"],
    yue: ["yue", "zh"],
    zib: ["zib", "sgn"],
    zlm: ["zlm", "ms"],
    zmi: ["zmi", "ms"],
    zsl: ["zsl", "sgn"],
    zsm: ["zsm", "ms"]
  }
};

/**
 * Convert only a-z to uppercase as per section 6.1 of the spec
 */
function toLatinUpperCase(str) {
  var i = str.length;
  while (i--) {
    var ch = str.charAt(i);
    if (ch >= "a" && ch <= "z") str = str.slice(0, i) + ch.toUpperCase() + str.slice(i + 1);
  }
  return str;
}

/**
 * The IsStructurallyValidLanguageTag abstract operation verifies that the locale
 * argument (which must be a String value)
 *
 * - represents a well-formed BCP 47 language tag as specified in RFC 5646 section
 *   2.1, or successor,
 * - does not include duplicate variant subtags, and
 * - does not include duplicate singleton subtags.
 *
 * The abstract operation returns true if locale can be generated from the ABNF
 * grammar in section 2.1 of the RFC, starting with Language-Tag, and does not
 * contain duplicate variant or singleton subtags (other than as a private use
 * subtag). It returns false otherwise. Terminal value characters in the grammar are
 * interpreted as the Unicode equivalents of the ASCII octet values given.
 */
function /* 6.2.2 */IsStructurallyValidLanguageTag(locale) {
  // represents a well-formed BCP 47 language tag as specified in RFC 5646
  if (!expBCP47Syntax.test(locale)) return false;

  // does not include duplicate variant subtags, and
  if (expVariantDupes.test(locale)) return false;

  // does not include duplicate singleton subtags.
  if (expSingletonDupes.test(locale)) return false;
  return true;
}

/**
 * The CanonicalizeLanguageTag abstract operation returns the canonical and case-
 * regularized form of the locale argument (which must be a String value that is
 * a structurally valid BCP 47 language tag as verified by the
 * IsStructurallyValidLanguageTag abstract operation). It takes the steps
 * specified in RFC 5646 section 4.5, or successor, to bring the language tag
 * into canonical form, and to regularize the case of the subtags, but does not
 * take the steps to bring a language tag into “extlang form” and to reorder
 * variant subtags.

 * The specifications for extensions to BCP 47 language tags, such as RFC 6067,
 * may include canonicalization rules for the extension subtag sequences they
 * define that go beyond the canonicalization rules of RFC 5646 section 4.5.
 * Implementations are allowed, but not required, to apply these additional rules.
 */
function /* 6.2.3 */CanonicalizeLanguageTag(locale) {
  var match = void 0,
    parts = void 0;

  // A language tag is in 'canonical form' when the tag is well-formed
  // according to the rules in Sections 2.1 and 2.2

  // Section 2.1 says all subtags use lowercase...
  locale = locale.toLowerCase();

  // ...with 2 exceptions: 'two-letter and four-letter subtags that neither
  // appear at the start of the tag nor occur after singletons.  Such two-letter
  // subtags are all uppercase (as in the tags "en-CA-x-ca" or "sgn-BE-FR") and
  // four-letter subtags are titlecase (as in the tag "az-Latn-x-latn").
  parts = locale.split('-');
  for (var i = 1, max = parts.length; i < max; i++) {
    // Two-letter subtags are all uppercase
    if (parts[i].length === 2) parts[i] = parts[i].toUpperCase();

    // Four-letter subtags are titlecase
    else if (parts[i].length === 4) parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].slice(1);

    // Is it a singleton?
    else if (parts[i].length === 1 && parts[i] !== 'x') break;
  }
  locale = arrJoin.call(parts, '-');

  // The steps laid out in RFC 5646 section 4.5 are as follows:

  // 1.  Extension sequences are ordered into case-insensitive ASCII order
  //     by singleton subtag.
  if ((match = locale.match(expExtSequences)) && match.length > 1) {
    // The built-in sort() sorts by ASCII order, so use that
    match.sort();

    // Replace all extensions with the joined, sorted array
    locale = locale.replace(RegExp('(?:' + expExtSequences.source + ')+', 'i'), arrJoin.call(match, ''));
  }

  // 2.  Redundant or grandfathered tags are replaced by their 'Preferred-
  //     Value', if there is one.
  if (hop.call(redundantTags.tags, locale)) locale = redundantTags.tags[locale];

  // 3.  Subtags are replaced by their 'Preferred-Value', if there is one.
  //     For extlangs, the original primary language subtag is also
  //     replaced if there is a primary language subtag in the 'Preferred-
  //     Value'.
  parts = locale.split('-');
  for (var _i = 1, _max = parts.length; _i < _max; _i++) {
    if (hop.call(redundantTags.subtags, parts[_i])) parts[_i] = redundantTags.subtags[parts[_i]];else if (hop.call(redundantTags.extLang, parts[_i])) {
      parts[_i] = redundantTags.extLang[parts[_i]][0];

      // For extlang tags, the prefix needs to be removed if it is redundant
      if (_i === 1 && redundantTags.extLang[parts[1]][1] === parts[0]) {
        parts = arrSlice.call(parts, _i++);
        _max -= 1;
      }
    }
  }
  return arrJoin.call(parts, '-');
}

/**
 * The DefaultLocale abstract operation returns a String value representing the
 * structurally valid (6.2.2) and canonicalized (6.2.3) BCP 47 language tag for the
 * host environment’s current locale.
 */
function /* 6.2.4 */DefaultLocale() {
  return defaultLocale;
}

// Sect 6.3 Currency Codes
// =======================

var expCurrencyCode = /^[A-Z]{3}$/;

/**
 * The IsWellFormedCurrencyCode abstract operation verifies that the currency argument
 * (after conversion to a String value) represents a well-formed 3-letter ISO currency
 * code. The following steps are taken:
 */
function /* 6.3.1 */IsWellFormedCurrencyCode(currency) {
  // 1. Let `c` be ToString(currency)
  var c = String(currency);

  // 2. Let `normalized` be the result of mapping c to upper case as described
  //    in 6.1.
  var normalized = toLatinUpperCase(c);

  // 3. If the string length of normalized is not 3, return false.
  // 4. If normalized contains any character that is not in the range "A" to "Z"
  //    (U+0041 to U+005A), return false.
  if (expCurrencyCode.test(normalized) === false) return false;

  // 5. Return true
  return true;
}
var expUnicodeExSeq = /-u(?:-[0-9a-z]{2,8})+/gi; // See `extension` below

function /* 9.2.1 */CanonicalizeLocaleList(locales) {
  // The abstract operation CanonicalizeLocaleList takes the following steps:

  // 1. If locales is undefined, then a. Return a new empty List
  if (locales === undefined) return new List();

  // 2. Let seen be a new empty List.
  var seen = new List();

  // 3. If locales is a String value, then
  //    a. Let locales be a new array created as if by the expression new
  //    Array(locales) where Array is the standard built-in constructor with
  //    that name and locales is the value of locales.
  locales = typeof locales === 'string' ? [locales] : locales;

  // 4. Let O be ToObject(locales).
  var O = toObject(locales);

  // 5. Let lenValue be the result of calling the [[Get]] internal method of
  //    O with the argument "length".
  // 6. Let len be ToUint32(lenValue).
  var len = toLength(O.length);

  // 7. Let k be 0.
  var k = 0;

  // 8. Repeat, while k < len
  while (k < len) {
    // a. Let Pk be ToString(k).
    var Pk = String(k);

    // b. Let kPresent be the result of calling the [[HasProperty]] internal
    //    method of O with argument Pk.
    var kPresent = (Pk in O);

    // c. If kPresent is true, then
    if (kPresent) {
      // i. Let kValue be the result of calling the [[Get]] internal
      //     method of O with argument Pk.
      var kValue = O[Pk];

      // ii. If the type of kValue is not String or Object, then throw a
      //     TypeError exception.
      if (kValue === null || typeof kValue !== 'string' && (typeof kValue === "undefined" ? "undefined" : babelHelpers$1["typeof"](kValue)) !== 'object') throw new TypeError('String or Object type expected');

      // iii. Let tag be ToString(kValue).
      var tag = String(kValue);

      // iv. If the result of calling the abstract operation
      //     IsStructurallyValidLanguageTag (defined in 6.2.2), passing tag as
      //     the argument, is false, then throw a RangeError exception.
      if (!IsStructurallyValidLanguageTag(tag)) throw new RangeError("'" + tag + "' is not a structurally valid language tag");

      // v. Let tag be the result of calling the abstract operation
      //    CanonicalizeLanguageTag (defined in 6.2.3), passing tag as the
      //    argument.
      tag = CanonicalizeLanguageTag(tag);

      // vi. If tag is not an element of seen, then append tag as the last
      //     element of seen.
      if (arrIndexOf.call(seen, tag) === -1) arrPush.call(seen, tag);
    }

    // d. Increase k by 1.
    k++;
  }

  // 9. Return seen.
  return seen;
}

/**
 * The BestAvailableLocale abstract operation compares the provided argument
 * locale, which must be a String value with a structurally valid and
 * canonicalized BCP 47 language tag, against the locales in availableLocales and
 * returns either the longest non-empty prefix of locale that is an element of
 * availableLocales, or undefined if there is no such element. It uses the
 * fallback mechanism of RFC 4647, section 3.4. The following steps are taken:
 */
function /* 9.2.2 */BestAvailableLocale(availableLocales, locale) {
  // 1. Let candidate be locale
  var candidate = locale;

  // 2. Repeat
  while (candidate) {
    // a. If availableLocales contains an element equal to candidate, then return
    // candidate.
    if (arrIndexOf.call(availableLocales, candidate) > -1) return candidate;

    // b. Let pos be the character index of the last occurrence of "-"
    // (U+002D) within candidate. If that character does not occur, return
    // undefined.
    var pos = candidate.lastIndexOf('-');
    if (pos < 0) return;

    // c. If pos ≥ 2 and the character "-" occurs at index pos-2 of candidate,
    //    then decrease pos by 2.
    if (pos >= 2 && candidate.charAt(pos - 2) === '-') pos -= 2;

    // d. Let candidate be the substring of candidate from position 0, inclusive,
    //    to position pos, exclusive.
    candidate = candidate.substring(0, pos);
  }
}

/**
 * The LookupMatcher abstract operation compares requestedLocales, which must be
 * a List as returned by CanonicalizeLocaleList, against the locales in
 * availableLocales and determines the best available language to meet the
 * request. The following steps are taken:
 */
function /* 9.2.3 */LookupMatcher(availableLocales, requestedLocales) {
  // 1. Let i be 0.
  var i = 0;

  // 2. Let len be the number of elements in requestedLocales.
  var len = requestedLocales.length;

  // 3. Let availableLocale be undefined.
  var availableLocale = void 0;
  var locale = void 0,
    noExtensionsLocale = void 0;

  // 4. Repeat while i < len and availableLocale is undefined:
  while (i < len && !availableLocale) {
    // a. Let locale be the element of requestedLocales at 0-origined list
    //    position i.
    locale = requestedLocales[i];

    // b. Let noExtensionsLocale be the String value that is locale with all
    //    Unicode locale extension sequences removed.
    noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');

    // c. Let availableLocale be the result of calling the
    //    BestAvailableLocale abstract operation (defined in 9.2.2) with
    //    arguments availableLocales and noExtensionsLocale.
    availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

    // d. Increase i by 1.
    i++;
  }

  // 5. Let result be a new Record.
  var result = new Record();

  // 6. If availableLocale is not undefined, then
  if (availableLocale !== undefined) {
    // a. Set result.[[locale]] to availableLocale.
    result['[[locale]]'] = availableLocale;

    // b. If locale and noExtensionsLocale are not the same String value, then
    if (String(locale) !== String(noExtensionsLocale)) {
      // i. Let extension be the String value consisting of the first
      //    substring of locale that is a Unicode locale extension sequence.
      var extension = locale.match(expUnicodeExSeq)[0];

      // ii. Let extensionIndex be the character position of the initial
      //     "-" of the first Unicode locale extension sequence within locale.
      var extensionIndex = locale.indexOf('-u-');

      // iii. Set result.[[extension]] to extension.
      result['[[extension]]'] = extension;

      // iv. Set result.[[extensionIndex]] to extensionIndex.
      result['[[extensionIndex]]'] = extensionIndex;
    }
  }
  // 7. Else
  else
    // a. Set result.[[locale]] to the value returned by the DefaultLocale abstract
    //    operation (defined in 6.2.4).
    result['[[locale]]'] = DefaultLocale();

  // 8. Return result
  return result;
}

/**
 * The BestFitMatcher abstract operation compares requestedLocales, which must be
 * a List as returned by CanonicalizeLocaleList, against the locales in
 * availableLocales and determines the best available language to meet the
 * request. The algorithm is implementation dependent, but should produce results
 * that a typical user of the requested locales would perceive as at least as
 * good as those produced by the LookupMatcher abstract operation. Options
 * specified through Unicode locale extension sequences must be ignored by the
 * algorithm. Information about such subsequences is returned separately.
 * The abstract operation returns a record with a [[locale]] field, whose value
 * is the language tag of the selected locale, which must be an element of
 * availableLocales. If the language tag of the request locale that led to the
 * selected locale contained a Unicode locale extension sequence, then the
 * returned record also contains an [[extension]] field whose value is the first
 * Unicode locale extension sequence, and an [[extensionIndex]] field whose value
 * is the index of the first Unicode locale extension sequence within the request
 * locale language tag.
 */
function /* 9.2.4 */BestFitMatcher(availableLocales, requestedLocales) {
  return LookupMatcher(availableLocales, requestedLocales);
}

/**
 * The ResolveLocale abstract operation compares a BCP 47 language priority list
 * requestedLocales against the locales in availableLocales and determines the
 * best available language to meet the request. availableLocales and
 * requestedLocales must be provided as List values, options as a Record.
 */
function /* 9.2.5 */ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {
  if (availableLocales.length === 0) {
    throw new ReferenceError('No locale data has been provided for this object yet.');
  }

  // The following steps are taken:
  // 1. Let matcher be the value of options.[[localeMatcher]].
  var matcher = options['[[localeMatcher]]'];
  var r = void 0;

  // 2. If matcher is "lookup", then
  if (matcher === 'lookup')
    // a. Let r be the result of calling the LookupMatcher abstract operation
    //    (defined in 9.2.3) with arguments availableLocales and
    //    requestedLocales.
    r = LookupMatcher(availableLocales, requestedLocales);

    // 3. Else
  else
    // a. Let r be the result of calling the BestFitMatcher abstract
    //    operation (defined in 9.2.4) with arguments availableLocales and
    //    requestedLocales.
    r = BestFitMatcher(availableLocales, requestedLocales);

  // 4. Let foundLocale be the value of r.[[locale]].
  var foundLocale = r['[[locale]]'];
  var extensionSubtags = void 0,
    extensionSubtagsLength = void 0;

  // 5. If r has an [[extension]] field, then
  if (hop.call(r, '[[extension]]')) {
    // a. Let extension be the value of r.[[extension]].
    var extension = r['[[extension]]'];
    // b. Let split be the standard built-in function object defined in ES5,
    //    15.5.4.14.
    var split = String.prototype.split;
    // c. Let extensionSubtags be the result of calling the [[Call]] internal
    //    method of split with extension as the this value and an argument
    //    list containing the single item "-".
    extensionSubtags = split.call(extension, '-');
    // d. Let extensionSubtagsLength be the result of calling the [[Get]]
    //    internal method of extensionSubtags with argument "length".
    extensionSubtagsLength = extensionSubtags.length;
  }

  // 6. Let result be a new Record.
  var result = new Record();

  // 7. Set result.[[dataLocale]] to foundLocale.
  result['[[dataLocale]]'] = foundLocale;

  // 8. Let supportedExtension be "-u".
  var supportedExtension = '-u';
  // 9. Let i be 0.
  var i = 0;
  // 10. Let len be the result of calling the [[Get]] internal method of
  //     relevantExtensionKeys with argument "length".
  var len = relevantExtensionKeys.length;

  // 11 Repeat while i < len:
  while (i < len) {
    // a. Let key be the result of calling the [[Get]] internal method of
    //    relevantExtensionKeys with argument ToString(i).
    var key = relevantExtensionKeys[i];
    // b. Let foundLocaleData be the result of calling the [[Get]] internal
    //    method of localeData with the argument foundLocale.
    var foundLocaleData = localeData[foundLocale];
    // c. Let keyLocaleData be the result of calling the [[Get]] internal
    //    method of foundLocaleData with the argument key.
    var keyLocaleData = foundLocaleData[key];
    // d. Let value be the result of calling the [[Get]] internal method of
    //    keyLocaleData with argument "0".
    var value = keyLocaleData['0'];
    // e. Let supportedExtensionAddition be "".
    var supportedExtensionAddition = '';
    // f. Let indexOf be the standard built-in function object defined in
    //    ES5, 15.4.4.14.
    var indexOf = arrIndexOf;

    // g. If extensionSubtags is not undefined, then
    if (extensionSubtags !== undefined) {
      // i. Let keyPos be the result of calling the [[Call]] internal
      //    method of indexOf with extensionSubtags as the this value and
      // an argument list containing the single item key.
      var keyPos = indexOf.call(extensionSubtags, key);

      // ii. If keyPos ≠ -1, then
      if (keyPos !== -1) {
        // 1. If keyPos + 1 < extensionSubtagsLength and the length of the
        //    result of calling the [[Get]] internal method of
        //    extensionSubtags with argument ToString(keyPos +1) is greater
        //    than 2, then
        if (keyPos + 1 < extensionSubtagsLength && extensionSubtags[keyPos + 1].length > 2) {
          // a. Let requestedValue be the result of calling the [[Get]]
          //    internal method of extensionSubtags with argument
          //    ToString(keyPos + 1).
          var requestedValue = extensionSubtags[keyPos + 1];
          // b. Let valuePos be the result of calling the [[Call]]
          //    internal method of indexOf with keyLocaleData as the
          //    this value and an argument list containing the single
          //    item requestedValue.
          var valuePos = indexOf.call(keyLocaleData, requestedValue);

          // c. If valuePos ≠ -1, then
          if (valuePos !== -1) {
            // i. Let value be requestedValue.
            value = requestedValue,
            // ii. Let supportedExtensionAddition be the
            //     concatenation of "-", key, "-", and value.
            supportedExtensionAddition = '-' + key + '-' + value;
          }
        }
        // 2. Else
        else {
          // a. Let valuePos be the result of calling the [[Call]]
          // internal method of indexOf with keyLocaleData as the this
          // value and an argument list containing the single item
          // "true".
          var _valuePos = indexOf(keyLocaleData, 'true');

          // b. If valuePos ≠ -1, then
          if (_valuePos !== -1)
            // i. Let value be "true".
            value = 'true';
        }
      }
    }
    // h. If options has a field [[<key>]], then
    if (hop.call(options, '[[' + key + ']]')) {
      // i. Let optionsValue be the value of options.[[<key>]].
      var optionsValue = options['[[' + key + ']]'];

      // ii. If the result of calling the [[Call]] internal method of indexOf
      //     with keyLocaleData as the this value and an argument list
      //     containing the single item optionsValue is not -1, then
      if (indexOf.call(keyLocaleData, optionsValue) !== -1) {
        // 1. If optionsValue is not equal to value, then
        if (optionsValue !== value) {
          // a. Let value be optionsValue.
          value = optionsValue;
          // b. Let supportedExtensionAddition be "".
          supportedExtensionAddition = '';
        }
      }
    }
    // i. Set result.[[<key>]] to value.
    result['[[' + key + ']]'] = value;

    // j. Append supportedExtensionAddition to supportedExtension.
    supportedExtension += supportedExtensionAddition;

    // k. Increase i by 1.
    i++;
  }
  // 12. If the length of supportedExtension is greater than 2, then
  if (supportedExtension.length > 2) {
    // a.
    var privateIndex = foundLocale.indexOf("-x-");
    // b.
    if (privateIndex === -1) {
      // i.
      foundLocale = foundLocale + supportedExtension;
    }
    // c.
    else {
      // i.
      var preExtension = foundLocale.substring(0, privateIndex);
      // ii.
      var postExtension = foundLocale.substring(privateIndex);
      // iii.
      foundLocale = preExtension + supportedExtension + postExtension;
    }
    // d. asserting - skipping
    // e.
    foundLocale = CanonicalizeLanguageTag(foundLocale);
  }
  // 13. Set result.[[locale]] to foundLocale.
  result['[[locale]]'] = foundLocale;

  // 14. Return result.
  return result;
}

/**
 * The LookupSupportedLocales abstract operation returns the subset of the
 * provided BCP 47 language priority list requestedLocales for which
 * availableLocales has a matching locale when using the BCP 47 Lookup algorithm.
 * Locales appear in the same order in the returned list as in requestedLocales.
 * The following steps are taken:
 */
function /* 9.2.6 */LookupSupportedLocales(availableLocales, requestedLocales) {
  // 1. Let len be the number of elements in requestedLocales.
  var len = requestedLocales.length;
  // 2. Let subset be a new empty List.
  var subset = new List();
  // 3. Let k be 0.
  var k = 0;

  // 4. Repeat while k < len
  while (k < len) {
    // a. Let locale be the element of requestedLocales at 0-origined list
    //    position k.
    var locale = requestedLocales[k];
    // b. Let noExtensionsLocale be the String value that is locale with all
    //    Unicode locale extension sequences removed.
    var noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');
    // c. Let availableLocale be the result of calling the
    //    BestAvailableLocale abstract operation (defined in 9.2.2) with
    //    arguments availableLocales and noExtensionsLocale.
    var availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

    // d. If availableLocale is not undefined, then append locale to the end of
    //    subset.
    if (availableLocale !== undefined) arrPush.call(subset, locale);

    // e. Increment k by 1.
    k++;
  }

  // 5. Let subsetArray be a new Array object whose elements are the same
  //    values in the same order as the elements of subset.
  var subsetArray = arrSlice.call(subset);

  // 6. Return subsetArray.
  return subsetArray;
}

/**
 * The BestFitSupportedLocales abstract operation returns the subset of the
 * provided BCP 47 language priority list requestedLocales for which
 * availableLocales has a matching locale when using the Best Fit Matcher
 * algorithm. Locales appear in the same order in the returned list as in
 * requestedLocales. The steps taken are implementation dependent.
 */
function /*9.2.7 */BestFitSupportedLocales(availableLocales, requestedLocales) {
  // ###TODO: implement this function as described by the specification###
  return LookupSupportedLocales(availableLocales, requestedLocales);
}

/**
 * The SupportedLocales abstract operation returns the subset of the provided BCP
 * 47 language priority list requestedLocales for which availableLocales has a
 * matching locale. Two algorithms are available to match the locales: the Lookup
 * algorithm described in RFC 4647 section 3.4, and an implementation dependent
 * best-fit algorithm. Locales appear in the same order in the returned list as
 * in requestedLocales. The following steps are taken:
 */
function /*9.2.8 */SupportedLocales(availableLocales, requestedLocales, options) {
  var matcher = void 0,
    subset = void 0;

  // 1. If options is not undefined, then
  if (options !== undefined) {
    // a. Let options be ToObject(options).
    options = new Record(toObject(options));
    // b. Let matcher be the result of calling the [[Get]] internal method of
    //    options with argument "localeMatcher".
    matcher = options.localeMatcher;

    // c. If matcher is not undefined, then
    if (matcher !== undefined) {
      // i. Let matcher be ToString(matcher).
      matcher = String(matcher);

      // ii. If matcher is not "lookup" or "best fit", then throw a RangeError
      //     exception.
      if (matcher !== 'lookup' && matcher !== 'best fit') throw new RangeError('matcher should be "lookup" or "best fit"');
    }
  }
  // 2. If matcher is undefined or "best fit", then
  if (matcher === undefined || matcher === 'best fit')
    // a. Let subset be the result of calling the BestFitSupportedLocales
    //    abstract operation (defined in 9.2.7) with arguments
    //    availableLocales and requestedLocales.
    subset = BestFitSupportedLocales(availableLocales, requestedLocales);
    // 3. Else
  else
    // a. Let subset be the result of calling the LookupSupportedLocales
    //    abstract operation (defined in 9.2.6) with arguments
    //    availableLocales and requestedLocales.
    subset = LookupSupportedLocales(availableLocales, requestedLocales);

  // 4. For each named own property name P of subset,
  for (var P in subset) {
    if (!hop.call(subset, P)) continue;

    // a. Let desc be the result of calling the [[GetOwnProperty]] internal
    //    method of subset with P.
    // b. Set desc.[[Writable]] to false.
    // c. Set desc.[[Configurable]] to false.
    // d. Call the [[DefineOwnProperty]] internal method of subset with P, desc,
    //    and true as arguments.
    defineProperty(subset, P, {
      writable: false,
      configurable: false,
      value: subset[P]
    });
  }
  // "Freeze" the array so no new elements can be added
  defineProperty(subset, 'length', {
    writable: false
  });

  // 5. Return subset
  return subset;
}

/**
 * The GetOption abstract operation extracts the value of the property named
 * property from the provided options object, converts it to the required type,
 * checks whether it is one of a List of allowed values, and fills in a fallback
 * value if necessary.
 */
function /*9.2.9 */GetOption(options, property, type, values, fallback) {
  // 1. Let value be the result of calling the [[Get]] internal method of
  //    options with argument property.
  var value = options[property];

  // 2. If value is not undefined, then
  if (value !== undefined) {
    // a. Assert: type is "boolean" or "string".
    // b. If type is "boolean", then let value be ToBoolean(value).
    // c. If type is "string", then let value be ToString(value).
    value = type === 'boolean' ? Boolean(value) : type === 'string' ? String(value) : value;

    // d. If values is not undefined, then
    if (values !== undefined) {
      // i. If values does not contain an element equal to value, then throw a
      //    RangeError exception.
      if (arrIndexOf.call(values, value) === -1) throw new RangeError("'" + value + "' is not an allowed value for `" + property + '`');
    }

    // e. Return value.
    return value;
  }
  // Else return fallback.
  return fallback;
}

/**
 * The GetNumberOption abstract operation extracts a property value from the
 * provided options object, converts it to a Number value, checks whether it is
 * in the allowed range, and fills in a fallback value if necessary.
 */
function /* 9.2.10 */GetNumberOption(options, property, minimum, maximum, fallback) {
  // 1. Let value be the result of calling the [[Get]] internal method of
  //    options with argument property.
  var value = options[property];

  // 2. If value is not undefined, then
  if (value !== undefined) {
    // a. Let value be ToNumber(value).
    value = Number(value);

    // b. If value is NaN or less than minimum or greater than maximum, throw a
    //    RangeError exception.
    if (isNaN(value) || value < minimum || value > maximum) throw new RangeError('Value is not a number or outside accepted range');

    // c. Return floor(value).
    return Math.floor(value);
  }
  // 3. Else return fallback.
  return fallback;
}

// 8 The Intl Object
var Intl = {};

// 8.2 Function Properties of the Intl Object

// 8.2.1
// @spec[tc39/ecma402/master/spec/intl.html]
// @clause[sec-intl.getcanonicallocales]
function getCanonicalLocales(locales) {
  // 1. Let ll be ? CanonicalizeLocaleList(locales).
  var ll = CanonicalizeLocaleList(locales);
  // 2. Return CreateArrayFromList(ll).
  {
    var result = [];
    var len = ll.length;
    var k = 0;
    while (k < len) {
      result[k] = ll[k];
      k++;
    }
    return result;
  }
}
Object.defineProperty(Intl, 'getCanonicalLocales', {
  enumerable: false,
  configurable: true,
  writable: true,
  value: getCanonicalLocales
});

// Currency minor units output from get-4217 grunt task, formatted
var currencyMinorUnits = {
  BHD: 3,
  BYR: 0,
  XOF: 0,
  BIF: 0,
  XAF: 0,
  CLF: 4,
  CLP: 0,
  KMF: 0,
  DJF: 0,
  XPF: 0,
  GNF: 0,
  ISK: 0,
  IQD: 3,
  JPY: 0,
  JOD: 3,
  KRW: 0,
  KWD: 3,
  LYD: 3,
  OMR: 3,
  PYG: 0,
  RWF: 0,
  TND: 3,
  UGX: 0,
  UYI: 0,
  VUV: 0,
  VND: 0
};

// Define the NumberFormat constructor internally so it cannot be tainted
function NumberFormatConstructor() {
  var locales = arguments[0];
  var options = arguments[1];
  if (!this || this === Intl) {
    return new Intl.NumberFormat(locales, options);
  }
  return InitializeNumberFormat(toObject(this), locales, options);
}
defineProperty(Intl, 'NumberFormat', {
  configurable: true,
  writable: true,
  value: NumberFormatConstructor
});

// Must explicitly set prototypes as unwritable
defineProperty(Intl.NumberFormat, 'prototype', {
  writable: false
});

/**
 * The abstract operation InitializeNumberFormat accepts the arguments
 * numberFormat (which must be an object), locales, and options. It initializes
 * numberFormat as a NumberFormat object.
 */
function /*11.1.1.1 */InitializeNumberFormat(numberFormat, locales, options) {
  // This will be a internal properties object if we're not already initialized
  var internal = getInternalProperties(numberFormat);

  // Create an object whose props can be used to restore the values of RegExp props
  var regexpRestore = createRegExpRestore();

  // 1. If numberFormat has an [[initializedIntlObject]] internal property with
  // value true, throw a TypeError exception.
  if (internal['[[initializedIntlObject]]'] === true) throw new TypeError('`this` object has already been initialized as an Intl object');

  // Need this to access the `internal` object
  defineProperty(numberFormat, '__getInternalProperties', {
    value: function value() {
      // NOTE: Non-standard, for internal use only
      if (arguments[0] === secret) return internal;
    }
  });

  // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
  internal['[[initializedIntlObject]]'] = true;

  // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
  //    abstract operation (defined in 9.2.1) with argument locales.
  var requestedLocales = CanonicalizeLocaleList(locales);

  // 4. If options is undefined, then
  if (options === undefined)
    // a. Let options be the result of creating a new object as if by the
    // expression new Object() where Object is the standard built-in constructor
    // with that name.
    options = {};

    // 5. Else
  else
    // a. Let options be ToObject(options).
    options = toObject(options);

  // 6. Let opt be a new Record.
  var opt = new Record(),
    // 7. Let matcher be the result of calling the GetOption abstract operation
    //    (defined in 9.2.9) with the arguments options, "localeMatcher", "string",
    //    a List containing the two String values "lookup" and "best fit", and
    //    "best fit".
    matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

  // 8. Set opt.[[localeMatcher]] to matcher.
  opt['[[localeMatcher]]'] = matcher;

  // 9. Let NumberFormat be the standard built-in object that is the initial value
  //    of Intl.NumberFormat.
  // 10. Let localeData be the value of the [[localeData]] internal property of
  //     NumberFormat.
  var localeData = internals.NumberFormat['[[localeData]]'];

  // 11. Let r be the result of calling the ResolveLocale abstract operation
  //     (defined in 9.2.5) with the [[availableLocales]] internal property of
  //     NumberFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
  //     internal property of NumberFormat, and localeData.
  var r = ResolveLocale(internals.NumberFormat['[[availableLocales]]'], requestedLocales, opt, internals.NumberFormat['[[relevantExtensionKeys]]'], localeData);

  // 12. Set the [[locale]] internal property of numberFormat to the value of
  //     r.[[locale]].
  internal['[[locale]]'] = r['[[locale]]'];

  // 13. Set the [[numberingSystem]] internal property of numberFormat to the value
  //     of r.[[nu]].
  internal['[[numberingSystem]]'] = r['[[nu]]'];

  // The specification doesn't tell us to do this, but it's helpful later on
  internal['[[dataLocale]]'] = r['[[dataLocale]]'];

  // 14. Let dataLocale be the value of r.[[dataLocale]].
  var dataLocale = r['[[dataLocale]]'];

  // 15. Let s be the result of calling the GetOption abstract operation with the
  //     arguments options, "style", "string", a List containing the three String
  //     values "decimal", "percent", and "currency", and "decimal".
  var s = GetOption(options, 'style', 'string', new List('decimal', 'percent', 'currency'), 'decimal');

  // 16. Set the [[style]] internal property of numberFormat to s.
  internal['[[style]]'] = s;

  // 17. Let c be the result of calling the GetOption abstract operation with the
  //     arguments options, "currency", "string", undefined, and undefined.
  var c = GetOption(options, 'currency', 'string');

  // 18. If c is not undefined and the result of calling the
  //     IsWellFormedCurrencyCode abstract operation (defined in 6.3.1) with
  //     argument c is false, then throw a RangeError exception.
  if (c !== undefined && !IsWellFormedCurrencyCode(c)) throw new RangeError("'" + c + "' is not a valid currency code");

  // 19. If s is "currency" and c is undefined, throw a TypeError exception.
  if (s === 'currency' && c === undefined) throw new TypeError('Currency code is required when style is currency');
  var cDigits = void 0;

  // 20. If s is "currency", then
  if (s === 'currency') {
    // a. Let c be the result of converting c to upper case as specified in 6.1.
    c = c.toUpperCase();

    // b. Set the [[currency]] internal property of numberFormat to c.
    internal['[[currency]]'] = c;

    // c. Let cDigits be the result of calling the CurrencyDigits abstract
    //    operation (defined below) with argument c.
    cDigits = CurrencyDigits(c);
  }

  // 21. Let cd be the result of calling the GetOption abstract operation with the
  //     arguments options, "currencyDisplay", "string", a List containing the
  //     three String values "code", "symbol", and "name", and "symbol".
  var cd = GetOption(options, 'currencyDisplay', 'string', new List('code', 'symbol', 'name'), 'symbol');

  // 22. If s is "currency", then set the [[currencyDisplay]] internal property of
  //     numberFormat to cd.
  if (s === 'currency') internal['[[currencyDisplay]]'] = cd;

  // 23. Let mnid be the result of calling the GetNumberOption abstract operation
  //     (defined in 9.2.10) with arguments options, "minimumIntegerDigits", 1, 21,
  //     and 1.
  var mnid = GetNumberOption(options, 'minimumIntegerDigits', 1, 21, 1);

  // 24. Set the [[minimumIntegerDigits]] internal property of numberFormat to mnid.
  internal['[[minimumIntegerDigits]]'] = mnid;

  // 25. If s is "currency", then let mnfdDefault be cDigits; else let mnfdDefault
  //     be 0.
  var mnfdDefault = s === 'currency' ? cDigits : 0;

  // 26. Let mnfd be the result of calling the GetNumberOption abstract operation
  //     with arguments options, "minimumFractionDigits", 0, 20, and mnfdDefault.
  var mnfd = GetNumberOption(options, 'minimumFractionDigits', 0, 20, mnfdDefault);

  // 27. Set the [[minimumFractionDigits]] internal property of numberFormat to mnfd.
  internal['[[minimumFractionDigits]]'] = mnfd;

  // 28. If s is "currency", then let mxfdDefault be max(mnfd, cDigits); else if s
  //     is "percent", then let mxfdDefault be max(mnfd, 0); else let mxfdDefault
  //     be max(mnfd, 3).
  var mxfdDefault = s === 'currency' ? Math.max(mnfd, cDigits) : s === 'percent' ? Math.max(mnfd, 0) : Math.max(mnfd, 3);

  // 29. Let mxfd be the result of calling the GetNumberOption abstract operation
  //     with arguments options, "maximumFractionDigits", mnfd, 20, and mxfdDefault.
  var mxfd = GetNumberOption(options, 'maximumFractionDigits', mnfd, 20, mxfdDefault);

  // 30. Set the [[maximumFractionDigits]] internal property of numberFormat to mxfd.
  internal['[[maximumFractionDigits]]'] = mxfd;

  // 31. Let mnsd be the result of calling the [[Get]] internal method of options
  //     with argument "minimumSignificantDigits".
  var mnsd = options.minimumSignificantDigits;

  // 32. Let mxsd be the result of calling the [[Get]] internal method of options
  //     with argument "maximumSignificantDigits".
  var mxsd = options.maximumSignificantDigits;

  // 33. If mnsd is not undefined or mxsd is not undefined, then:
  if (mnsd !== undefined || mxsd !== undefined) {
    // a. Let mnsd be the result of calling the GetNumberOption abstract
    //    operation with arguments options, "minimumSignificantDigits", 1, 21,
    //    and 1.
    mnsd = GetNumberOption(options, 'minimumSignificantDigits', 1, 21, 1);

    // b. Let mxsd be the result of calling the GetNumberOption abstract
    //     operation with arguments options, "maximumSignificantDigits", mnsd,
    //     21, and 21.
    mxsd = GetNumberOption(options, 'maximumSignificantDigits', mnsd, 21, 21);

    // c. Set the [[minimumSignificantDigits]] internal property of numberFormat
    //    to mnsd, and the [[maximumSignificantDigits]] internal property of
    //    numberFormat to mxsd.
    internal['[[minimumSignificantDigits]]'] = mnsd;
    internal['[[maximumSignificantDigits]]'] = mxsd;
  }
  // 34. Let g be the result of calling the GetOption abstract operation with the
  //     arguments options, "useGrouping", "boolean", undefined, and true.
  var g = GetOption(options, 'useGrouping', 'boolean', undefined, true);

  // 35. Set the [[useGrouping]] internal property of numberFormat to g.
  internal['[[useGrouping]]'] = g;

  // 36. Let dataLocaleData be the result of calling the [[Get]] internal method of
  //     localeData with argument dataLocale.
  var dataLocaleData = localeData[dataLocale];

  // 37. Let patterns be the result of calling the [[Get]] internal method of
  //     dataLocaleData with argument "patterns".
  var patterns = dataLocaleData.patterns;

  // 38. Assert: patterns is an object (see 11.2.3)

  // 39. Let stylePatterns be the result of calling the [[Get]] internal method of
  //     patterns with argument s.
  var stylePatterns = patterns[s];

  // 40. Set the [[positivePattern]] internal property of numberFormat to the
  //     result of calling the [[Get]] internal method of stylePatterns with the
  //     argument "positivePattern".
  internal['[[positivePattern]]'] = stylePatterns.positivePattern;

  // 41. Set the [[negativePattern]] internal property of numberFormat to the
  //     result of calling the [[Get]] internal method of stylePatterns with the
  //     argument "negativePattern".
  internal['[[negativePattern]]'] = stylePatterns.negativePattern;

  // 42. Set the [[boundFormat]] internal property of numberFormat to undefined.
  internal['[[boundFormat]]'] = undefined;

  // 43. Set the [[initializedNumberFormat]] internal property of numberFormat to
  //     true.
  internal['[[initializedNumberFormat]]'] = true;

  // In ES3, we need to pre-bind the format() function
  if (es3) numberFormat.format = GetFormatNumber.call(numberFormat);

  // Restore the RegExp properties
  regexpRestore();

  // Return the newly initialised object
  return numberFormat;
}
function CurrencyDigits(currency) {
  // When the CurrencyDigits abstract operation is called with an argument currency
  // (which must be an upper case String value), the following steps are taken:

  // 1. If the ISO 4217 currency and funds code list contains currency as an
  // alphabetic code, then return the minor unit value corresponding to the
  // currency from the list; else return 2.
  return currencyMinorUnits[currency] !== undefined ? currencyMinorUnits[currency] : 2;
}

/* 11.2.3 */
internals.NumberFormat = {
  '[[availableLocales]]': [],
  '[[relevantExtensionKeys]]': ['nu'],
  '[[localeData]]': {}
};

/**
 * When the supportedLocalesOf method of Intl.NumberFormat is called, the
 * following steps are taken:
 */
/* 11.2.2 */
defineProperty(Intl.NumberFormat, 'supportedLocalesOf', {
  configurable: true,
  writable: true,
  value: fnBind.call(function (locales) {
    // Bound functions only have the `this` value altered if being used as a constructor,
    // this lets us imitate a native function that has no constructor
    if (!hop.call(this, '[[availableLocales]]')) throw new TypeError('supportedLocalesOf() is not a constructor');

    // Create an object whose props can be used to restore the values of RegExp props
    var regexpRestore = createRegExpRestore(),
      // 1. If options is not provided, then let options be undefined.
      options = arguments[1],
      // 2. Let availableLocales be the value of the [[availableLocales]] internal
      //    property of the standard built-in object that is the initial value of
      //    Intl.NumberFormat.

      availableLocales = this['[[availableLocales]]'],
      // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
      //    abstract operation (defined in 9.2.1) with argument locales.
      requestedLocales = CanonicalizeLocaleList(locales);

    // Restore the RegExp properties
    regexpRestore();

    // 4. Return the result of calling the SupportedLocales abstract operation
    //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,
    //    and options.
    return SupportedLocales(availableLocales, requestedLocales, options);
  }, internals.NumberFormat)
});

/**
 * This named accessor property returns a function that formats a number
 * according to the effective locale and the formatting options of this
 * NumberFormat object.
 */
/* 11.3.2 */
defineProperty(Intl.NumberFormat.prototype, 'format', {
  configurable: true,
  get: GetFormatNumber
});
function GetFormatNumber() {
  var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

  // Satisfy test 11.3_b
  if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for format() is not an initialized Intl.NumberFormat object.');

  // The value of the [[Get]] attribute is a function that takes the following
  // steps:

  // 1. If the [[boundFormat]] internal property of this NumberFormat object
  //    is undefined, then:
  if (internal['[[boundFormat]]'] === undefined) {
    // a. Let F be a Function object, with internal properties set as
    //    specified for built-in functions in ES5, 15, or successor, and the
    //    length property set to 1, that takes the argument value and
    //    performs the following steps:
    var F = function F(value) {
      // i. If value is not provided, then let value be undefined.
      // ii. Let x be ToNumber(value).
      // iii. Return the result of calling the FormatNumber abstract
      //      operation (defined below) with arguments this and x.
      return FormatNumber(this, /* x = */Number(value));
    };

    // b. Let bind be the standard built-in function object defined in ES5,
    //    15.3.4.5.
    // c. Let bf be the result of calling the [[Call]] internal method of
    //    bind with F as the this value and an argument list containing
    //    the single item this.
    var bf = fnBind.call(F, this);

    // d. Set the [[boundFormat]] internal property of this NumberFormat
    //    object to bf.
    internal['[[boundFormat]]'] = bf;
  }
  // Return the value of the [[boundFormat]] internal property of this
  // NumberFormat object.
  return internal['[[boundFormat]]'];
}
function formatToParts() {
  var value = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];
  var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);
  if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for formatToParts() is not an initialized Intl.NumberFormat object.');
  var x = Number(value);
  return FormatNumberToParts(this, x);
}
Object.defineProperty(Intl.NumberFormat.prototype, 'formatToParts', {
  configurable: true,
  enumerable: false,
  writable: true,
  value: formatToParts
});

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-formatnumbertoparts]
 */
function FormatNumberToParts(numberFormat, x) {
  // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).
  var parts = PartitionNumberPattern(numberFormat, x);
  // 2. Let result be ArrayCreate(0).
  var result = [];
  // 3. Let n be 0.
  var n = 0;
  // 4. For each part in parts, do:
  for (var i = 0; parts.length > i; i++) {
    var part = parts[i];
    // a. Let O be ObjectCreate(%ObjectPrototype%).
    var O = {};
    // a. Perform ? CreateDataPropertyOrThrow(O, "type", part.[[type]]).
    O.type = part['[[type]]'];
    // a. Perform ? CreateDataPropertyOrThrow(O, "value", part.[[value]]).
    O.value = part['[[value]]'];
    // a. Perform ? CreateDataPropertyOrThrow(result, ? ToString(n), O).
    result[n] = O;
    // a. Increment n by 1.
    n += 1;
  }
  // 5. Return result.
  return result;
}

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-partitionnumberpattern]
 */
function PartitionNumberPattern(numberFormat, x) {
  var internal = getInternalProperties(numberFormat),
    locale = internal['[[dataLocale]]'],
    nums = internal['[[numberingSystem]]'],
    data = internals.NumberFormat['[[localeData]]'][locale],
    ild = data.symbols[nums] || data.symbols.latn,
    pattern = void 0;

  // 1. If x is not NaN and x < 0, then:
  if (!isNaN(x) && x < 0) {
    // a. Let x be -x.
    x = -x;
    // a. Let pattern be the value of numberFormat.[[negativePattern]].
    pattern = internal['[[negativePattern]]'];
  }
  // 2. Else,
  else {
    // a. Let pattern be the value of numberFormat.[[positivePattern]].
    pattern = internal['[[positivePattern]]'];
  }
  // 3. Let result be a new empty List.
  var result = new List();
  // 4. Let beginIndex be Call(%StringProto_indexOf%, pattern, "{", 0).
  var beginIndex = pattern.indexOf('{', 0);
  // 5. Let endIndex be 0.
  var endIndex = 0;
  // 6. Let nextIndex be 0.
  var nextIndex = 0;
  // 7. Let length be the number of code units in pattern.
  var length = pattern.length;
  // 8. Repeat while beginIndex is an integer index into pattern:
  while (beginIndex > -1 && beginIndex < length) {
    // a. Set endIndex to Call(%StringProto_indexOf%, pattern, "}", beginIndex)
    endIndex = pattern.indexOf('}', beginIndex);
    // a. If endIndex = -1, throw new Error exception.
    if (endIndex === -1) throw new Error();
    // a. If beginIndex is greater than nextIndex, then:
    if (beginIndex > nextIndex) {
      // i. Let literal be a substring of pattern from position nextIndex, inclusive, to position beginIndex, exclusive.
      var literal = pattern.substring(nextIndex, beginIndex);
      // ii. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
      arrPush.call(result, {
        '[[type]]': 'literal',
        '[[value]]': literal
      });
    }
    // a. Let p be the substring of pattern from position beginIndex, exclusive, to position endIndex, exclusive.
    var p = pattern.substring(beginIndex + 1, endIndex);
    // a. If p is equal "number", then:
    if (p === "number") {
      // i. If x is NaN,
      if (isNaN(x)) {
        // 1. Let n be an ILD String value indicating the NaN value.
        var n = ild.nan;
        // 2. Add new part record { [[type]]: "nan", [[value]]: n } as a new element of the list result.
        arrPush.call(result, {
          '[[type]]': 'nan',
          '[[value]]': n
        });
      }
      // ii. Else if isFinite(x) is false,
      else if (!isFinite(x)) {
        // 1. Let n be an ILD String value indicating infinity.
        var _n = ild.infinity;
        // 2. Add new part record { [[type]]: "infinity", [[value]]: n } as a new element of the list result.
        arrPush.call(result, {
          '[[type]]': 'infinity',
          '[[value]]': _n
        });
      }
      // iii. Else,
      else {
        // 1. If the value of numberFormat.[[style]] is "percent" and isFinite(x), let x be 100 × x.
        if (internal['[[style]]'] === 'percent' && isFinite(x)) x *= 100;
        var _n2 = void 0;
        // 2. If the numberFormat.[[minimumSignificantDigits]] and numberFormat.[[maximumSignificantDigits]] are present, then
        if (hop.call(internal, '[[minimumSignificantDigits]]') && hop.call(internal, '[[maximumSignificantDigits]]')) {
          // a. Let n be ToRawPrecision(x, numberFormat.[[minimumSignificantDigits]], numberFormat.[[maximumSignificantDigits]]).
          _n2 = ToRawPrecision(x, internal['[[minimumSignificantDigits]]'], internal['[[maximumSignificantDigits]]']);
        }
        // 3. Else,
        else {
          // a. Let n be ToRawFixed(x, numberFormat.[[minimumIntegerDigits]], numberFormat.[[minimumFractionDigits]], numberFormat.[[maximumFractionDigits]]).
          _n2 = ToRawFixed(x, internal['[[minimumIntegerDigits]]'], internal['[[minimumFractionDigits]]'], internal['[[maximumFractionDigits]]']);
        }
        // 4. If the value of the numberFormat.[[numberingSystem]] matches one of the values in the "Numbering System" column of Table 2 below, then
        if (numSys[nums]) {
          (function () {
            // a. Let digits be an array whose 10 String valued elements are the UTF-16 string representations of the 10 digits specified in the "Digits" column of the matching row in Table 2.
            var digits = numSys[nums];
            // a. Replace each digit in n with the value of digits[digit].
            _n2 = String(_n2).replace(/\d/g, function (digit) {
              return digits[digit];
            });
          })();
        }
        // 5. Else use an implementation dependent algorithm to map n to the appropriate representation of n in the given numbering system.
        else _n2 = String(_n2); // ###TODO###

        var integer = void 0;
        var fraction = void 0;
        // 6. Let decimalSepIndex be Call(%StringProto_indexOf%, n, ".", 0).
        var decimalSepIndex = _n2.indexOf('.', 0);
        // 7. If decimalSepIndex > 0, then:
        if (decimalSepIndex > 0) {
          // a. Let integer be the substring of n from position 0, inclusive, to position decimalSepIndex, exclusive.
          integer = _n2.substring(0, decimalSepIndex);
          // a. Let fraction be the substring of n from position decimalSepIndex, exclusive, to the end of n.
          fraction = _n2.substring(decimalSepIndex + 1, decimalSepIndex.length);
        }
        // 8. Else:
        else {
          // a. Let integer be n.
          integer = _n2;
          // a. Let fraction be undefined.
          fraction = undefined;
        }
        // 9. If the value of the numberFormat.[[useGrouping]] is true,
        if (internal['[[useGrouping]]'] === true) {
          // a. Let groupSepSymbol be the ILND String representing the grouping separator.
          var groupSepSymbol = ild.group;
          // a. Let groups be a List whose elements are, in left to right order, the substrings defined by ILND set of locations within the integer.
          var groups = [];
          // ----> implementation:
          // Primary group represents the group closest to the decimal
          var pgSize = data.patterns.primaryGroupSize || 3;
          // Secondary group is every other group
          var sgSize = data.patterns.secondaryGroupSize || pgSize;
          // Group only if necessary
          if (integer.length > pgSize) {
            // Index of the primary grouping separator
            var end = integer.length - pgSize;
            // Starting index for our loop
            var idx = end % sgSize;
            var start = integer.slice(0, idx);
            if (start.length) arrPush.call(groups, start);
            // Loop to separate into secondary grouping digits
            while (idx < end) {
              arrPush.call(groups, integer.slice(idx, idx + sgSize));
              idx += sgSize;
            }
            // Add the primary grouping digits
            arrPush.call(groups, integer.slice(end));
          } else {
            arrPush.call(groups, integer);
          }
          // a. Assert: The number of elements in groups List is greater than 0.
          if (groups.length === 0) throw new Error();
          // a. Repeat, while groups List is not empty:
          while (groups.length) {
            // i. Remove the first element from groups and let integerGroup be the value of that element.
            var integerGroup = arrShift.call(groups);
            // ii. Add new part record { [[type]]: "integer", [[value]]: integerGroup } as a new element of the list result.
            arrPush.call(result, {
              '[[type]]': 'integer',
              '[[value]]': integerGroup
            });
            // iii. If groups List is not empty, then:
            if (groups.length) {
              // 1. Add new part record { [[type]]: "group", [[value]]: groupSepSymbol } as a new element of the list result.
              arrPush.call(result, {
                '[[type]]': 'group',
                '[[value]]': groupSepSymbol
              });
            }
          }
        }
        // 10. Else,
        else {
          // a. Add new part record { [[type]]: "integer", [[value]]: integer } as a new element of the list result.
          arrPush.call(result, {
            '[[type]]': 'integer',
            '[[value]]': integer
          });
        }
        // 11. If fraction is not undefined, then:
        if (fraction !== undefined) {
          // a. Let decimalSepSymbol be the ILND String representing the decimal separator.
          var decimalSepSymbol = ild.decimal;
          // a. Add new part record { [[type]]: "decimal", [[value]]: decimalSepSymbol } as a new element of the list result.
          arrPush.call(result, {
            '[[type]]': 'decimal',
            '[[value]]': decimalSepSymbol
          });
          // a. Add new part record { [[type]]: "fraction", [[value]]: fraction } as a new element of the list result.
          arrPush.call(result, {
            '[[type]]': 'fraction',
            '[[value]]': fraction
          });
        }
      }
    }
    // a. Else if p is equal "plusSign", then:
    else if (p === "plusSign") {
      // i. Let plusSignSymbol be the ILND String representing the plus sign.
      var plusSignSymbol = ild.plusSign;
      // ii. Add new part record { [[type]]: "plusSign", [[value]]: plusSignSymbol } as a new element of the list result.
      arrPush.call(result, {
        '[[type]]': 'plusSign',
        '[[value]]': plusSignSymbol
      });
    }
    // a. Else if p is equal "minusSign", then:
    else if (p === "minusSign") {
      // i. Let minusSignSymbol be the ILND String representing the minus sign.
      var minusSignSymbol = ild.minusSign;
      // ii. Add new part record { [[type]]: "minusSign", [[value]]: minusSignSymbol } as a new element of the list result.
      arrPush.call(result, {
        '[[type]]': 'minusSign',
        '[[value]]': minusSignSymbol
      });
    }
    // a. Else if p is equal "percentSign" and numberFormat.[[style]] is "percent", then:
    else if (p === "percentSign" && internal['[[style]]'] === "percent") {
      // i. Let percentSignSymbol be the ILND String representing the percent sign.
      var percentSignSymbol = ild.percentSign;
      // ii. Add new part record { [[type]]: "percentSign", [[value]]: percentSignSymbol } as a new element of the list result.
      arrPush.call(result, {
        '[[type]]': 'literal',
        '[[value]]': percentSignSymbol
      });
    }
    // a. Else if p is equal "currency" and numberFormat.[[style]] is "currency", then:
    else if (p === "currency" && internal['[[style]]'] === "currency") {
      // i. Let currency be the value of numberFormat.[[currency]].
      var currency = internal['[[currency]]'];
      var cd = void 0;

      // ii. If numberFormat.[[currencyDisplay]] is "code", then
      if (internal['[[currencyDisplay]]'] === "code") {
        // 1. Let cd be currency.
        cd = currency;
      }
      // iii. Else if numberFormat.[[currencyDisplay]] is "symbol", then
      else if (internal['[[currencyDisplay]]'] === "symbol") {
        // 1. Let cd be an ILD string representing currency in short form. If the implementation does not have such a representation of currency, use currency itself.
        cd = data.currencies[currency] || currency;
      }
      // iv. Else if numberFormat.[[currencyDisplay]] is "name", then
      else if (internal['[[currencyDisplay]]'] === "name") {
        // 1. Let cd be an ILD string representing currency in long form. If the implementation does not have such a representation of currency, then use currency itself.
        cd = currency;
      }
      // v. Add new part record { [[type]]: "currency", [[value]]: cd } as a new element of the list result.
      arrPush.call(result, {
        '[[type]]': 'currency',
        '[[value]]': cd
      });
    }
    // a. Else,
    else {
      // i. Let literal be the substring of pattern from position beginIndex, inclusive, to position endIndex, inclusive.
      var _literal = pattern.substring(beginIndex, endIndex);
      // ii. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
      arrPush.call(result, {
        '[[type]]': 'literal',
        '[[value]]': _literal
      });
    }
    // a. Set nextIndex to endIndex + 1.
    nextIndex = endIndex + 1;
    // a. Set beginIndex to Call(%StringProto_indexOf%, pattern, "{", nextIndex)
    beginIndex = pattern.indexOf('{', nextIndex);
  }
  // 9. If nextIndex is less than length, then:
  if (nextIndex < length) {
    // a. Let literal be the substring of pattern from position nextIndex, inclusive, to position length, exclusive.
    var _literal2 = pattern.substring(nextIndex, length);
    // a. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
    arrPush.call(result, {
      '[[type]]': 'literal',
      '[[value]]': _literal2
    });
  }
  // 10. Return result.
  return result;
}

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-formatnumber]
 */
function FormatNumber(numberFormat, x) {
  // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).
  var parts = PartitionNumberPattern(numberFormat, x);
  // 2. Let result be an empty String.
  var result = '';
  // 3. For each part in parts, do:
  for (var i = 0; parts.length > i; i++) {
    var part = parts[i];
    // a. Set result to a String value produced by concatenating result and part.[[value]].
    result += part['[[value]]'];
  }
  // 4. Return result.
  return result;
}

/**
 * When the ToRawPrecision abstract operation is called with arguments x (which
 * must be a finite non-negative number), minPrecision, and maxPrecision (both
 * must be integers between 1 and 21) the following steps are taken:
 */
function ToRawPrecision(x, minPrecision, maxPrecision) {
  // 1. Let p be maxPrecision.
  var p = maxPrecision;
  var m = void 0,
    e = void 0;

  // 2. If x = 0, then
  if (x === 0) {
    // a. Let m be the String consisting of p occurrences of the character "0".
    m = arrJoin.call(Array(p + 1), '0');
    // b. Let e be 0.
    e = 0;
  }
  // 3. Else
  else {
    // a. Let e and n be integers such that 10ᵖ⁻¹ ≤ n < 10ᵖ and for which the
    //    exact mathematical value of n × 10ᵉ⁻ᵖ⁺¹ – x is as close to zero as
    //    possible. If there are two such sets of e and n, pick the e and n for
    //    which n × 10ᵉ⁻ᵖ⁺¹ is larger.
    e = log10Floor(Math.abs(x));

    // Easier to get to m from here
    var f = Math.round(Math.exp(Math.abs(e - p + 1) * Math.LN10));

    // b. Let m be the String consisting of the digits of the decimal
    //    representation of n (in order, with no leading zeroes)
    m = String(Math.round(e - p + 1 < 0 ? x * f : x / f));
  }

  // 4. If e ≥ p, then
  if (e >= p)
    // a. Return the concatenation of m and e-p+1 occurrences of the character "0".
    return m + arrJoin.call(Array(e - p + 1 + 1), '0');

    // 5. If e = p-1, then
  else if (e === p - 1)
    // a. Return m.
    return m;

    // 6. If e ≥ 0, then
  else if (e >= 0)
    // a. Let m be the concatenation of the first e+1 characters of m, the character
    //    ".", and the remaining p–(e+1) characters of m.
    m = m.slice(0, e + 1) + '.' + m.slice(e + 1);

    // 7. If e < 0, then
  else if (e < 0)
    // a. Let m be the concatenation of the String "0.", –(e+1) occurrences of the
    //    character "0", and the string m.
    m = '0.' + arrJoin.call(Array(-(e + 1) + 1), '0') + m;

  // 8. If m contains the character ".", and maxPrecision > minPrecision, then
  if (m.indexOf(".") >= 0 && maxPrecision > minPrecision) {
    // a. Let cut be maxPrecision – minPrecision.
    var cut = maxPrecision - minPrecision;

    // b. Repeat while cut > 0 and the last character of m is "0":
    while (cut > 0 && m.charAt(m.length - 1) === '0') {
      //  i. Remove the last character from m.
      m = m.slice(0, -1);

      //  ii. Decrease cut by 1.
      cut--;
    }

    // c. If the last character of m is ".", then
    if (m.charAt(m.length - 1) === '.')
      //    i. Remove the last character from m.
      m = m.slice(0, -1);
  }
  // 9. Return m.
  return m;
}

/**
 * @spec[tc39/ecma402/master/spec/numberformat.html]
 * @clause[sec-torawfixed]
 * When the ToRawFixed abstract operation is called with arguments x (which must
 * be a finite non-negative number), minInteger (which must be an integer between
 * 1 and 21), minFraction, and maxFraction (which must be integers between 0 and
 * 20) the following steps are taken:
 */
function ToRawFixed(x, minInteger, minFraction, maxFraction) {
  // 1. Let f be maxFraction.
  var f = maxFraction;
  // 2. Let n be an integer for which the exact mathematical value of n ÷ 10f – x is as close to zero as possible. If there are two such n, pick the larger n.
  var n = Math.pow(10, f) * x; // diverging...
  // 3. If n = 0, let m be the String "0". Otherwise, let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).
  var m = n === 0 ? "0" : n.toFixed(0); // divering...

  {
    // this diversion is needed to take into consideration big numbers, e.g.:
    // 1.2344501e+37 -> 12344501000000000000000000000000000000
    var idx = void 0;
    var exp = (idx = m.indexOf('e')) > -1 ? m.slice(idx + 1) : 0;
    if (exp) {
      m = m.slice(0, idx).replace('.', '');
      m += arrJoin.call(Array(exp - (m.length - 1) + 1), '0');
    }
  }
  var int = void 0;
  // 4. If f ≠ 0, then
  if (f !== 0) {
    // a. Let k be the number of characters in m.
    var k = m.length;
    // a. If k ≤ f, then
    if (k <= f) {
      // i. Let z be the String consisting of f+1–k occurrences of the character "0".
      var z = arrJoin.call(Array(f + 1 - k + 1), '0');
      // ii. Let m be the concatenation of Strings z and m.
      m = z + m;
      // iii. Let k be f+1.
      k = f + 1;
    }
    // a. Let a be the first k–f characters of m, and let b be the remaining f characters of m.
    var a = m.substring(0, k - f),
      b = m.substring(k - f, m.length);
    // a. Let m be the concatenation of the three Strings a, ".", and b.
    m = a + "." + b;
    // a. Let int be the number of characters in a.
    int = a.length;
  }
  // 5. Else, let int be the number of characters in m.
  else int = m.length;
  // 6. Let cut be maxFraction – minFraction.
  var cut = maxFraction - minFraction;
  // 7. Repeat while cut > 0 and the last character of m is "0":
  while (cut > 0 && m.slice(-1) === "0") {
    // a. Remove the last character from m.
    m = m.slice(0, -1);
    // a. Decrease cut by 1.
    cut--;
  }
  // 8. If the last character of m is ".", then
  if (m.slice(-1) === ".") {
    // a. Remove the last character from m.
    m = m.slice(0, -1);
  }
  // 9. If int < minInteger, then
  if (int < minInteger) {
    // a. Let z be the String consisting of minInteger–int occurrences of the character "0".
    var _z = arrJoin.call(Array(minInteger - int + 1), '0');
    // a. Let m be the concatenation of Strings z and m.
    m = _z + m;
  }
  // 10. Return m.
  return m;
}

// Sect 11.3.2 Table 2, Numbering systems
// ======================================
var numSys = {
  arab: ["٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩"],
  arabext: ["۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹"],
  bali: ["᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙"],
  beng: ["০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯"],
  deva: ["०", "१", "२", "३", "४", "५", "६", "७", "८", "९"],
  fullwide: ["０", "１", "２", "３", "４", "５", "６", "７", "８", "９"],
  gujr: ["૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯"],
  guru: ["੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯"],
  hanidec: ["〇", "一", "二", "三", "四", "五", "六", "七", "八", "九"],
  khmr: ["០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩"],
  knda: ["೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯"],
  laoo: ["໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙"],
  latn: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
  limb: ["᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏"],
  mlym: ["൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯"],
  mong: ["᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙"],
  mymr: ["၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉"],
  orya: ["୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯"],
  tamldec: ["௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯"],
  telu: ["౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯"],
  thai: ["๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙"],
  tibt: ["༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩"]
};

/**
 * This function provides access to the locale and formatting options computed
 * during initialization of the object.
 *
 * The function returns a new object whose properties and attributes are set as
 * if constructed by an object literal assigning to each of the following
 * properties the value of the corresponding internal property of this
 * NumberFormat object (see 11.4): locale, numberingSystem, style, currency,
 * currencyDisplay, minimumIntegerDigits, minimumFractionDigits,
 * maximumFractionDigits, minimumSignificantDigits, maximumSignificantDigits, and
 * useGrouping. Properties whose corresponding internal properties are not present
 * are not assigned.
 */
/* 11.3.3 */
defineProperty(Intl.NumberFormat.prototype, 'resolvedOptions', {
  configurable: true,
  writable: true,
  value: function value() {
    var prop = void 0,
      descs = new Record(),
      props = ['locale', 'numberingSystem', 'style', 'currency', 'currencyDisplay', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'useGrouping'],
      internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    // Satisfy test 11.3_b
    if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.NumberFormat object.');
    for (var i = 0, max = props.length; i < max; i++) {
      if (hop.call(internal, prop = '[[' + props[i] + ']]')) descs[props[i]] = {
        value: internal[prop],
        writable: true,
        configurable: true,
        enumerable: true
      };
    }
    return objCreate({}, descs);
  }
});

/* jslint esnext: true */

// Match these datetime components in a CLDR pattern, except those in single quotes
var expDTComponents = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
// trim patterns after transformations
var expPatternTrimmer = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
// Skip over patterns with these datetime components because we don't have data
// to back them up:
// timezone, weekday, amoung others
var unwantedDTCs = /[rqQASjJgwWIQq]/; // xXVO were removed from this list in favor of computing matches with timeZoneName values but printing as empty string

var dtKeys = ["era", "year", "month", "day", "weekday", "quarter"];
var tmKeys = ["hour", "minute", "second", "hour12", "timeZoneName"];
function isDateFormatOnly(obj) {
  for (var i = 0; i < tmKeys.length; i += 1) {
    if (obj.hasOwnProperty(tmKeys[i])) {
      return false;
    }
  }
  return true;
}
function isTimeFormatOnly(obj) {
  for (var i = 0; i < dtKeys.length; i += 1) {
    if (obj.hasOwnProperty(dtKeys[i])) {
      return false;
    }
  }
  return true;
}
function joinDateAndTimeFormats(dateFormatObj, timeFormatObj) {
  var o = {
    _: {}
  };
  for (var i = 0; i < dtKeys.length; i += 1) {
    if (dateFormatObj[dtKeys[i]]) {
      o[dtKeys[i]] = dateFormatObj[dtKeys[i]];
    }
    if (dateFormatObj._[dtKeys[i]]) {
      o._[dtKeys[i]] = dateFormatObj._[dtKeys[i]];
    }
  }
  for (var j = 0; j < tmKeys.length; j += 1) {
    if (timeFormatObj[tmKeys[j]]) {
      o[tmKeys[j]] = timeFormatObj[tmKeys[j]];
    }
    if (timeFormatObj._[tmKeys[j]]) {
      o._[tmKeys[j]] = timeFormatObj._[tmKeys[j]];
    }
  }
  return o;
}
function computeFinalPatterns(formatObj) {
  // From http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns:
  //  'In patterns, two single quotes represents a literal single quote, either
  //   inside or outside single quotes. Text within single quotes is not
  //   interpreted in any way (except for two adjacent single quotes).'
  formatObj.pattern12 = formatObj.extendedPattern.replace(/'([^']*)'/g, function ($0, literal) {
    return literal ? literal : "'";
  });

  // pattern 12 is always the default. we can produce the 24 by removing {ampm}
  formatObj.pattern = formatObj.pattern12.replace('{ampm}', '').replace(expPatternTrimmer, '');
  return formatObj;
}
function expDTComponentsMeta($0, formatObj) {
  switch ($0.charAt(0)) {
    // --- Era
    case 'G':
      formatObj.era = ['short', 'short', 'short', 'long', 'narrow'][$0.length - 1];
      return '{era}';

    // --- Year
    case 'y':
    case 'Y':
    case 'u':
    case 'U':
    case 'r':
      formatObj.year = $0.length === 2 ? '2-digit' : 'numeric';
      return '{year}';

    // --- Quarter (not supported in this polyfill)
    case 'Q':
    case 'q':
      formatObj.quarter = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
      return '{quarter}';

    // --- Month
    case 'M':
    case 'L':
      formatObj.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
      return '{month}';

    // --- Week (not supported in this polyfill)
    case 'w':
      // week of the year
      formatObj.week = $0.length === 2 ? '2-digit' : 'numeric';
      return '{weekday}';
    case 'W':
      // week of the month
      formatObj.week = 'numeric';
      return '{weekday}';

    // --- Day
    case 'd':
      // day of the month
      formatObj.day = $0.length === 2 ? '2-digit' : 'numeric';
      return '{day}';
    case 'D': // day of the year
    case 'F': // day of the week
    case 'g':
      // 1..n: Modified Julian day
      formatObj.day = 'numeric';
      return '{day}';

    // --- Week Day
    case 'E':
      // day of the week
      formatObj.weekday = ['short', 'short', 'short', 'long', 'narrow', 'short'][$0.length - 1];
      return '{weekday}';
    case 'e':
      // local day of the week
      formatObj.weekday = ['numeric', '2-digit', 'short', 'long', 'narrow', 'short'][$0.length - 1];
      return '{weekday}';
    case 'c':
      // stand alone local day of the week
      formatObj.weekday = ['numeric', undefined, 'short', 'long', 'narrow', 'short'][$0.length - 1];
      return '{weekday}';

    // --- Period
    case 'a': // AM, PM
    case 'b': // am, pm, noon, midnight
    case 'B':
      // flexible day periods
      formatObj.hour12 = true;
      return '{ampm}';

    // --- Hour
    case 'h':
    case 'H':
      formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
      return '{hour}';
    case 'k':
    case 'K':
      formatObj.hour12 = true; // 12-hour-cycle time formats (using h or K)
      formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
      return '{hour}';

    // --- Minute
    case 'm':
      formatObj.minute = $0.length === 2 ? '2-digit' : 'numeric';
      return '{minute}';

    // --- Second
    case 's':
      formatObj.second = $0.length === 2 ? '2-digit' : 'numeric';
      return '{second}';
    case 'S':
    case 'A':
      formatObj.second = 'numeric';
      return '{second}';

    // --- Timezone
    case 'z': // 1..3, 4: specific non-location format
    case 'Z': // 1..3, 4, 5: The ISO8601 varios formats
    case 'O': // 1, 4: miliseconds in day short, long
    case 'v': // 1, 4: generic non-location format
    case 'V': // 1, 2, 3, 4: time zone ID or city
    case 'X': // 1, 2, 3, 4: The ISO8601 varios formats
    case 'x':
      // 1, 2, 3, 4: The ISO8601 varios formats
      // this polyfill only supports much, for now, we are just doing something dummy
      formatObj.timeZoneName = $0.length < 4 ? 'short' : 'long';
      return '{timeZoneName}';
  }
}

/**
 * Converts the CLDR availableFormats into the objects and patterns required by
 * the ECMAScript Internationalization API specification.
 */
function createDateTimeFormat(skeleton, pattern) {
  // we ignore certain patterns that are unsupported to avoid this expensive op.
  if (unwantedDTCs.test(pattern)) return undefined;
  var formatObj = {
    originalPattern: pattern,
    _: {}
  };

  // Replace the pattern string with the one required by the specification, whilst
  // at the same time evaluating it for the subsets and formats
  formatObj.extendedPattern = pattern.replace(expDTComponents, function ($0) {
    // See which symbol we're dealing with
    return expDTComponentsMeta($0, formatObj._);
  });

  // Match the skeleton string with the one required by the specification
  // this implementation is based on the Date Field Symbol Table:
  // http://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
  // Note: we are adding extra data to the formatObject even though this polyfill
  //       might not support it.
  skeleton.replace(expDTComponents, function ($0) {
    // See which symbol we're dealing with
    return expDTComponentsMeta($0, formatObj);
  });
  return computeFinalPatterns(formatObj);
}

/**
 * Processes DateTime formats from CLDR to an easier-to-parse format.
 * the result of this operation should be cached the first time a particular
 * calendar is analyzed.
 *
 * The specification requires we support at least the following subsets of
 * date/time components:
 *
 *   - 'weekday', 'year', 'month', 'day', 'hour', 'minute', 'second'
 *   - 'weekday', 'year', 'month', 'day'
 *   - 'year', 'month', 'day'
 *   - 'year', 'month'
 *   - 'month', 'day'
 *   - 'hour', 'minute', 'second'
 *   - 'hour', 'minute'
 *
 * We need to cherry pick at least these subsets from the CLDR data and convert
 * them into the pattern objects used in the ECMA-402 API.
 */
function createDateTimeFormats(formats) {
  var availableFormats = formats.availableFormats;
  var timeFormats = formats.timeFormats;
  var dateFormats = formats.dateFormats;
  var result = [];
  var skeleton = void 0,
    pattern = void 0,
    computed = void 0,
    i = void 0,
    j = void 0;
  var timeRelatedFormats = [];
  var dateRelatedFormats = [];

  // Map available (custom) formats into a pattern for createDateTimeFormats
  for (skeleton in availableFormats) {
    if (availableFormats.hasOwnProperty(skeleton)) {
      pattern = availableFormats[skeleton];
      computed = createDateTimeFormat(skeleton, pattern);
      if (computed) {
        result.push(computed);
        // in some cases, the format is only displaying date specific props
        // or time specific props, in which case we need to also produce the
        // combined formats.
        if (isDateFormatOnly(computed)) {
          dateRelatedFormats.push(computed);
        } else if (isTimeFormatOnly(computed)) {
          timeRelatedFormats.push(computed);
        }
      }
    }
  }

  // Map time formats into a pattern for createDateTimeFormats
  for (skeleton in timeFormats) {
    if (timeFormats.hasOwnProperty(skeleton)) {
      pattern = timeFormats[skeleton];
      computed = createDateTimeFormat(skeleton, pattern);
      if (computed) {
        result.push(computed);
        timeRelatedFormats.push(computed);
      }
    }
  }

  // Map date formats into a pattern for createDateTimeFormats
  for (skeleton in dateFormats) {
    if (dateFormats.hasOwnProperty(skeleton)) {
      pattern = dateFormats[skeleton];
      computed = createDateTimeFormat(skeleton, pattern);
      if (computed) {
        result.push(computed);
        dateRelatedFormats.push(computed);
      }
    }
  }

  // combine custom time and custom date formats when they are orthogonals to complete the
  // formats supported by CLDR.
  // This Algo is based on section "Missing Skeleton Fields" from:
  // http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems
  for (i = 0; i < timeRelatedFormats.length; i += 1) {
    for (j = 0; j < dateRelatedFormats.length; j += 1) {
      if (dateRelatedFormats[j].month === 'long') {
        pattern = dateRelatedFormats[j].weekday ? formats.full : formats.long;
      } else if (dateRelatedFormats[j].month === 'short') {
        pattern = formats.medium;
      } else {
        pattern = formats.short;
      }
      computed = joinDateAndTimeFormats(dateRelatedFormats[j], timeRelatedFormats[i]);
      computed.originalPattern = pattern;
      computed.extendedPattern = pattern.replace('{0}', timeRelatedFormats[i].extendedPattern).replace('{1}', dateRelatedFormats[j].extendedPattern).replace(/^[,\s]+|[,\s]+$/gi, '');
      result.push(computeFinalPatterns(computed));
    }
  }
  return result;
}

// this represents the exceptions of the rule that are not covered by CLDR availableFormats
// for single property configurations, they play no role when using multiple properties, and
// those that are not in this table, are not exceptions or are not covered by the data we
// provide.
var validSyntheticProps = {
  second: {
    numeric: 's',
    '2-digit': 'ss'
  },
  minute: {
    numeric: 'm',
    '2-digit': 'mm'
  },
  year: {
    numeric: 'y',
    '2-digit': 'yy'
  },
  day: {
    numeric: 'd',
    '2-digit': 'dd'
  },
  month: {
    numeric: 'L',
    '2-digit': 'LL',
    narrow: 'LLLLL',
    short: 'LLL',
    long: 'LLLL'
  },
  weekday: {
    narrow: 'ccccc',
    short: 'ccc',
    long: 'cccc'
  }
};
function generateSyntheticFormat(propName, propValue) {
  if (validSyntheticProps[propName] && validSyntheticProps[propName][propValue]) {
    var _ref2;
    return _ref2 = {
      originalPattern: validSyntheticProps[propName][propValue],
      _: defineProperty$1({}, propName, propValue),
      extendedPattern: "{" + propName + "}"
    }, defineProperty$1(_ref2, propName, propValue), defineProperty$1(_ref2, "pattern12", "{" + propName + "}"), defineProperty$1(_ref2, "pattern", "{" + propName + "}"), _ref2;
  }
}

// An object map of date component keys, saves using a regex later
var dateWidths = objCreate(null, {
  narrow: {},
  short: {},
  long: {}
});

/**
 * Returns a string for a date component, resolved using multiple inheritance as specified
 * as specified in the Unicode Technical Standard 35.
 */
function resolveDateString(data, ca, component, width, key) {
  // From http://www.unicode.org/reports/tr35/tr35.html#Multiple_Inheritance:
  // 'In clearly specified instances, resources may inherit from within the same locale.
  //  For example, ... the Buddhist calendar inherits from the Gregorian calendar.'
  var obj = data[ca] && data[ca][component] ? data[ca][component] : data.gregory[component],
    // "sideways" inheritance resolves strings when a key doesn't exist
    alts = {
      narrow: ['short', 'long'],
      short: ['long', 'narrow'],
      long: ['short', 'narrow']
    },
    //
    resolved = hop.call(obj, width) ? obj[width] : hop.call(obj, alts[width][0]) ? obj[alts[width][0]] : obj[alts[width][1]];

  // `key` wouldn't be specified for components 'dayPeriods'
  return key !== null ? resolved[key] : resolved;
}

// Define the DateTimeFormat constructor internally so it cannot be tainted
function DateTimeFormatConstructor() {
  var locales = arguments[0];
  var options = arguments[1];
  if (!this || this === Intl) {
    return new Intl.DateTimeFormat(locales, options);
  }
  return InitializeDateTimeFormat(toObject(this), locales, options);
}
defineProperty(Intl, 'DateTimeFormat', {
  configurable: true,
  writable: true,
  value: DateTimeFormatConstructor
});

// Must explicitly set prototypes as unwritable
defineProperty(DateTimeFormatConstructor, 'prototype', {
  writable: false
});

/**
 * The abstract operation InitializeDateTimeFormat accepts the arguments dateTimeFormat
 * (which must be an object), locales, and options. It initializes dateTimeFormat as a
 * DateTimeFormat object.
 */
function /* 12.1.1.1 */InitializeDateTimeFormat(dateTimeFormat, locales, options) {
  // This will be a internal properties object if we're not already initialized
  var internal = getInternalProperties(dateTimeFormat);

  // Create an object whose props can be used to restore the values of RegExp props
  var regexpRestore = createRegExpRestore();

  // 1. If dateTimeFormat has an [[initializedIntlObject]] internal property with
  //    value true, throw a TypeError exception.
  if (internal['[[initializedIntlObject]]'] === true) throw new TypeError('`this` object has already been initialized as an Intl object');

  // Need this to access the `internal` object
  defineProperty(dateTimeFormat, '__getInternalProperties', {
    value: function value() {
      // NOTE: Non-standard, for internal use only
      if (arguments[0] === secret) return internal;
    }
  });

  // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
  internal['[[initializedIntlObject]]'] = true;

  // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
  //    abstract operation (defined in 9.2.1) with argument locales.
  var requestedLocales = CanonicalizeLocaleList(locales);

  // 4. Let options be the result of calling the ToDateTimeOptions abstract
  //    operation (defined below) with arguments options, "any", and "date".
  options = ToDateTimeOptions(options, 'any', 'date');

  // 5. Let opt be a new Record.
  var opt = new Record();

  // 6. Let matcher be the result of calling the GetOption abstract operation
  //    (defined in 9.2.9) with arguments options, "localeMatcher", "string", a List
  //    containing the two String values "lookup" and "best fit", and "best fit".
  var matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

  // 7. Set opt.[[localeMatcher]] to matcher.
  opt['[[localeMatcher]]'] = matcher;

  // 8. Let DateTimeFormat be the standard built-in object that is the initial
  //    value of Intl.DateTimeFormat.
  var DateTimeFormat = internals.DateTimeFormat; // This is what we *really* need

  // 9. Let localeData be the value of the [[localeData]] internal property of
  //    DateTimeFormat.
  var localeData = DateTimeFormat['[[localeData]]'];

  // 10. Let r be the result of calling the ResolveLocale abstract operation
  //     (defined in 9.2.5) with the [[availableLocales]] internal property of
  //      DateTimeFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
  //      internal property of DateTimeFormat, and localeData.
  var r = ResolveLocale(DateTimeFormat['[[availableLocales]]'], requestedLocales, opt, DateTimeFormat['[[relevantExtensionKeys]]'], localeData);

  // 11. Set the [[locale]] internal property of dateTimeFormat to the value of
  //     r.[[locale]].
  internal['[[locale]]'] = r['[[locale]]'];

  // 12. Set the [[calendar]] internal property of dateTimeFormat to the value of
  //     r.[[ca]].
  internal['[[calendar]]'] = r['[[ca]]'];

  // 13. Set the [[numberingSystem]] internal property of dateTimeFormat to the value of
  //     r.[[nu]].
  internal['[[numberingSystem]]'] = r['[[nu]]'];

  // The specification doesn't tell us to do this, but it's helpful later on
  internal['[[dataLocale]]'] = r['[[dataLocale]]'];

  // 14. Let dataLocale be the value of r.[[dataLocale]].
  var dataLocale = r['[[dataLocale]]'];

  // 15. Let tz be the result of calling the [[Get]] internal method of options with
  //     argument "timeZone".
  var tz = options.timeZone;

  // 16. If tz is not undefined, then
  if (tz !== undefined) {
    // a. Let tz be ToString(tz).
    // b. Convert tz to upper case as described in 6.1.
    //    NOTE: If an implementation accepts additional time zone values, as permitted
    //          under certain conditions by the Conformance clause, different casing
    //          rules apply.
    tz = toLatinUpperCase(tz);

    // c. If tz is not "UTC", then throw a RangeError exception.
    // ###TODO: accept more time zones###
    if (tz !== 'UTC') throw new RangeError('timeZone is not supported.');
  }

  // 17. Set the [[timeZone]] internal property of dateTimeFormat to tz.
  internal['[[timeZone]]'] = tz;

  // 18. Let opt be a new Record.
  opt = new Record();

  // 19. For each row of Table 3, except the header row, do:
  for (var prop in dateTimeComponents) {
    if (!hop.call(dateTimeComponents, prop)) continue;

    // 20. Let prop be the name given in the Property column of the row.
    // 21. Let value be the result of calling the GetOption abstract operation,
    //     passing as argument options, the name given in the Property column of the
    //     row, "string", a List containing the strings given in the Values column of
    //     the row, and undefined.
    var value = GetOption(options, prop, 'string', dateTimeComponents[prop]);

    // 22. Set opt.[[<prop>]] to value.
    opt['[[' + prop + ']]'] = value;
  }

  // Assigned a value below
  var bestFormat = void 0;

  // 23. Let dataLocaleData be the result of calling the [[Get]] internal method of
  //     localeData with argument dataLocale.
  var dataLocaleData = localeData[dataLocale];

  // 24. Let formats be the result of calling the [[Get]] internal method of
  //     dataLocaleData with argument "formats".
  //     Note: we process the CLDR formats into the spec'd structure
  var formats = ToDateTimeFormats(dataLocaleData.formats);

  // 25. Let matcher be the result of calling the GetOption abstract operation with
  //     arguments options, "formatMatcher", "string", a List containing the two String
  //     values "basic" and "best fit", and "best fit".
  matcher = GetOption(options, 'formatMatcher', 'string', new List('basic', 'best fit'), 'best fit');

  // Optimization: caching the processed formats as a one time operation by
  // replacing the initial structure from localeData
  dataLocaleData.formats = formats;

  // 26. If matcher is "basic", then
  if (matcher === 'basic') {
    // 27. Let bestFormat be the result of calling the BasicFormatMatcher abstract
    //     operation (defined below) with opt and formats.
    bestFormat = BasicFormatMatcher(opt, formats);

    // 28. Else
  } else {
    {
      // diverging
      var _hr = GetOption(options, 'hour12', 'boolean' /*, undefined, undefined*/);
      opt.hour12 = _hr === undefined ? dataLocaleData.hour12 : _hr;
    }
    // 29. Let bestFormat be the result of calling the BestFitFormatMatcher
    //     abstract operation (defined below) with opt and formats.
    bestFormat = BestFitFormatMatcher(opt, formats);
  }

  // 30. For each row in Table 3, except the header row, do
  for (var _prop in dateTimeComponents) {
    if (!hop.call(dateTimeComponents, _prop)) continue;

    // a. Let prop be the name given in the Property column of the row.
    // b. Let pDesc be the result of calling the [[GetOwnProperty]] internal method of
    //    bestFormat with argument prop.
    // c. If pDesc is not undefined, then
    if (hop.call(bestFormat, _prop)) {
      // i. Let p be the result of calling the [[Get]] internal method of bestFormat
      //    with argument prop.
      var p = bestFormat[_prop];
      {
        // diverging
        p = bestFormat._ && hop.call(bestFormat._, _prop) ? bestFormat._[_prop] : p;
      }

      // ii. Set the [[<prop>]] internal property of dateTimeFormat to p.
      internal['[[' + _prop + ']]'] = p;
    }
  }
  var pattern = void 0; // Assigned a value below

  // 31. Let hr12 be the result of calling the GetOption abstract operation with
  //     arguments options, "hour12", "boolean", undefined, and undefined.
  var hr12 = GetOption(options, 'hour12', 'boolean' /*, undefined, undefined*/);

  // 32. If dateTimeFormat has an internal property [[hour]], then
  if (internal['[[hour]]']) {
    // a. If hr12 is undefined, then let hr12 be the result of calling the [[Get]]
    //    internal method of dataLocaleData with argument "hour12".
    hr12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;

    // b. Set the [[hour12]] internal property of dateTimeFormat to hr12.
    internal['[[hour12]]'] = hr12;

    // c. If hr12 is true, then
    if (hr12 === true) {
      // i. Let hourNo0 be the result of calling the [[Get]] internal method of
      //    dataLocaleData with argument "hourNo0".
      var hourNo0 = dataLocaleData.hourNo0;

      // ii. Set the [[hourNo0]] internal property of dateTimeFormat to hourNo0.
      internal['[[hourNo0]]'] = hourNo0;

      // iii. Let pattern be the result of calling the [[Get]] internal method of
      //      bestFormat with argument "pattern12".
      pattern = bestFormat.pattern12;
    }

    // d. Else
    else
      // i. Let pattern be the result of calling the [[Get]] internal method of
      //    bestFormat with argument "pattern".
      pattern = bestFormat.pattern;
  }

  // 33. Else
  else
    // a. Let pattern be the result of calling the [[Get]] internal method of
    //    bestFormat with argument "pattern".
    pattern = bestFormat.pattern;

  // 34. Set the [[pattern]] internal property of dateTimeFormat to pattern.
  internal['[[pattern]]'] = pattern;

  // 35. Set the [[boundFormat]] internal property of dateTimeFormat to undefined.
  internal['[[boundFormat]]'] = undefined;

  // 36. Set the [[initializedDateTimeFormat]] internal property of dateTimeFormat to
  //     true.
  internal['[[initializedDateTimeFormat]]'] = true;

  // In ES3, we need to pre-bind the format() function
  if (es3) dateTimeFormat.format = GetFormatDateTime.call(dateTimeFormat);

  // Restore the RegExp properties
  regexpRestore();

  // Return the newly initialised object
  return dateTimeFormat;
}

/**
 * Several DateTimeFormat algorithms use values from the following table, which provides
 * property names and allowable values for the components of date and time formats:
 */
var dateTimeComponents = {
  weekday: ["narrow", "short", "long"],
  era: ["narrow", "short", "long"],
  year: ["2-digit", "numeric"],
  month: ["2-digit", "numeric", "narrow", "short", "long"],
  day: ["2-digit", "numeric"],
  hour: ["2-digit", "numeric"],
  minute: ["2-digit", "numeric"],
  second: ["2-digit", "numeric"],
  timeZoneName: ["short", "long"]
};

/**
 * When the ToDateTimeOptions abstract operation is called with arguments options,
 * required, and defaults, the following steps are taken:
 */
function ToDateTimeFormats(formats) {
  if (Object.prototype.toString.call(formats) === '[object Array]') {
    return formats;
  }
  return createDateTimeFormats(formats);
}

/**
 * When the ToDateTimeOptions abstract operation is called with arguments options,
 * required, and defaults, the following steps are taken:
 */
function ToDateTimeOptions(options, required, defaults) {
  // 1. If options is undefined, then let options be null, else let options be
  //    ToObject(options).
  if (options === undefined) options = null;else {
    // (#12) options needs to be a Record, but it also needs to inherit properties
    var opt2 = toObject(options);
    options = new Record();
    for (var k in opt2) {
      options[k] = opt2[k];
    }
  }

  // 2. Let create be the standard built-in function object defined in ES5, 15.2.3.5.
  var create = objCreate;

  // 3. Let options be the result of calling the [[Call]] internal method of create with
  //    undefined as the this value and an argument list containing the single item
  //    options.
  options = create(options);

  // 4. Let needDefaults be true.
  var needDefaults = true;

  // 5. If required is "date" or "any", then
  if (required === 'date' || required === 'any') {
    // a. For each of the property names "weekday", "year", "month", "day":
    // i. If the result of calling the [[Get]] internal method of options with the
    //    property name is not undefined, then let needDefaults be false.
    if (options.weekday !== undefined || options.year !== undefined || options.month !== undefined || options.day !== undefined) needDefaults = false;
  }

  // 6. If required is "time" or "any", then
  if (required === 'time' || required === 'any') {
    // a. For each of the property names "hour", "minute", "second":
    // i. If the result of calling the [[Get]] internal method of options with the
    //    property name is not undefined, then let needDefaults be false.
    if (options.hour !== undefined || options.minute !== undefined || options.second !== undefined) needDefaults = false;
  }

  // 7. If needDefaults is true and defaults is either "date" or "all", then
  if (needDefaults && (defaults === 'date' || defaults === 'all'))
    // a. For each of the property names "year", "month", "day":
    // i. Call the [[DefineOwnProperty]] internal method of options with the
    //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
    //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
    options.year = options.month = options.day = 'numeric';

  // 8. If needDefaults is true and defaults is either "time" or "all", then
  if (needDefaults && (defaults === 'time' || defaults === 'all'))
    // a. For each of the property names "hour", "minute", "second":
    // i. Call the [[DefineOwnProperty]] internal method of options with the
    //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
    //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
    options.hour = options.minute = options.second = 'numeric';

  // 9. Return options.
  return options;
}

/**
 * When the BasicFormatMatcher abstract operation is called with two arguments options and
 * formats, the following steps are taken:
 */
function BasicFormatMatcher(options, formats) {
  // 1. Let removalPenalty be 120.
  var removalPenalty = 120;

  // 2. Let additionPenalty be 20.
  var additionPenalty = 20;

  // 3. Let longLessPenalty be 8.
  var longLessPenalty = 8;

  // 4. Let longMorePenalty be 6.
  var longMorePenalty = 6;

  // 5. Let shortLessPenalty be 6.
  var shortLessPenalty = 6;

  // 6. Let shortMorePenalty be 3.
  var shortMorePenalty = 3;

  // 7. Let bestScore be -Infinity.
  var bestScore = -Infinity;

  // 8. Let bestFormat be undefined.
  var bestFormat = void 0;

  // 9. Let i be 0.
  var i = 0;

  // 10. Assert: formats is an Array object.

  // 11. Let len be the result of calling the [[Get]] internal method of formats with argument "length".
  var len = formats.length;

  // 12. Repeat while i < len:
  while (i < len) {
    // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).
    var format = formats[i];

    // b. Let score be 0.
    var score = 0;

    // c. For each property shown in Table 3:
    for (var property in dateTimeComponents) {
      if (!hop.call(dateTimeComponents, property)) continue;

      // i. Let optionsProp be options.[[<property>]].
      var optionsProp = options['[[' + property + ']]'];

      // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format
      //     with argument property.
      // iii. If formatPropDesc is not undefined, then
      //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.
      var formatProp = hop.call(format, property) ? format[property] : undefined;

      // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by
      //     additionPenalty.
      if (optionsProp === undefined && formatProp !== undefined) score -= additionPenalty;

      // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by
      //    removalPenalty.
      else if (optionsProp !== undefined && formatProp === undefined) score -= removalPenalty;

      // vi. Else
      else {
        // 1. Let values be the array ["2-digit", "numeric", "narrow", "short",
        //    "long"].
        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];

        // 2. Let optionsPropIndex be the index of optionsProp within values.
        var optionsPropIndex = arrIndexOf.call(values, optionsProp);

        // 3. Let formatPropIndex be the index of formatProp within values.
        var formatPropIndex = arrIndexOf.call(values, formatProp);

        // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).
        var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);

        // 5. If delta = 2, decrease score by longMorePenalty.
        if (delta === 2) score -= longMorePenalty;

        // 6. Else if delta = 1, decrease score by shortMorePenalty.
        else if (delta === 1) score -= shortMorePenalty;

        // 7. Else if delta = -1, decrease score by shortLessPenalty.
        else if (delta === -1) score -= shortLessPenalty;

        // 8. Else if delta = -2, decrease score by longLessPenalty.
        else if (delta === -2) score -= longLessPenalty;
      }
    }

    // d. If score > bestScore, then
    if (score > bestScore) {
      // i. Let bestScore be score.
      bestScore = score;

      // ii. Let bestFormat be format.
      bestFormat = format;
    }

    // e. Increase i by 1.
    i++;
  }

  // 13. Return bestFormat.
  return bestFormat;
}

/**
 * When the BestFitFormatMatcher abstract operation is called with two arguments options
 * and formats, it performs implementation dependent steps, which should return a set of
 * component representations that a typical user of the selected locale would perceive as
 * at least as good as the one returned by BasicFormatMatcher.
 *
 * This polyfill defines the algorithm to be the same as BasicFormatMatcher,
 * with the addition of bonus points awarded where the requested format is of
 * the same data type as the potentially matching format.
 *
 * This algo relies on the concept of closest distance matching described here:
 * http://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons
 * Typically a “best match” is found using a closest distance match, such as:
 *
 * Symbols requesting a best choice for the locale are replaced.
 *      j → one of {H, k, h, K}; C → one of {a, b, B}
 * -> Covered by cldr.js matching process
 *
 * For fields with symbols representing the same type (year, month, day, etc):
 *     Most symbols have a small distance from each other.
 *         M ≅ L; E ≅ c; a ≅ b ≅ B; H ≅ k ≅ h ≅ K; ...
 *     -> Covered by cldr.js matching process
 *
 *     Width differences among fields, other than those marking text vs numeric, are given small distance from each other.
 *         MMM ≅ MMMM
 *         MM ≅ M
 *     Numeric and text fields are given a larger distance from each other.
 *         MMM ≈ MM
 *     Symbols representing substantial differences (week of year vs week of month) are given much larger a distances from each other.
 *         d ≋ D; ...
 *     Missing or extra fields cause a match to fail. (But see Missing Skeleton Fields).
 *
 *
 * For example,
 *
 *     { month: 'numeric', day: 'numeric' }
 *
 * should match
 *
 *     { month: '2-digit', day: '2-digit' }
 *
 * rather than
 *
 *     { month: 'short', day: 'numeric' }
 *
 * This makes sense because a user requesting a formatted date with numeric parts would
 * not expect to see the returned format containing narrow, short or long part names
 */
function BestFitFormatMatcher(options, formats) {
  /** Diverging: this block implements the hack for single property configuration, eg.:
   *
   *      `new Intl.DateTimeFormat('en', {day: 'numeric'})`
   *
   * should produce a single digit with the day of the month. This is needed because
   * CLDR `availableFormats` data structure doesn't cover these cases.
   */
  {
    var optionsPropNames = [];
    for (var property in dateTimeComponents) {
      if (!hop.call(dateTimeComponents, property)) continue;
      if (options['[[' + property + ']]'] !== undefined) {
        optionsPropNames.push(property);
      }
    }
    if (optionsPropNames.length === 1) {
      var _bestFormat = generateSyntheticFormat(optionsPropNames[0], options['[[' + optionsPropNames[0] + ']]']);
      if (_bestFormat) {
        return _bestFormat;
      }
    }
  }

  // 1. Let removalPenalty be 120.
  var removalPenalty = 120;

  // 2. Let additionPenalty be 20.
  var additionPenalty = 20;

  // 3. Let longLessPenalty be 8.
  var longLessPenalty = 8;

  // 4. Let longMorePenalty be 6.
  var longMorePenalty = 6;

  // 5. Let shortLessPenalty be 6.
  var shortLessPenalty = 6;

  // 6. Let shortMorePenalty be 3.
  var shortMorePenalty = 3;
  var patternPenalty = 2;
  var hour12Penalty = 1;

  // 7. Let bestScore be -Infinity.
  var bestScore = -Infinity;

  // 8. Let bestFormat be undefined.
  var bestFormat = void 0;

  // 9. Let i be 0.
  var i = 0;

  // 10. Assert: formats is an Array object.

  // 11. Let len be the result of calling the [[Get]] internal method of formats with argument "length".
  var len = formats.length;

  // 12. Repeat while i < len:
  while (i < len) {
    // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).
    var format = formats[i];

    // b. Let score be 0.
    var score = 0;

    // c. For each property shown in Table 3:
    for (var _property in dateTimeComponents) {
      if (!hop.call(dateTimeComponents, _property)) continue;

      // i. Let optionsProp be options.[[<property>]].
      var optionsProp = options['[[' + _property + ']]'];

      // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format
      //     with argument property.
      // iii. If formatPropDesc is not undefined, then
      //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.
      var formatProp = hop.call(format, _property) ? format[_property] : undefined;

      // Diverging: using the default properties produced by the pattern/skeleton
      // to match it with user options, and apply a penalty
      var patternProp = hop.call(format._, _property) ? format._[_property] : undefined;
      if (optionsProp !== patternProp) {
        score -= patternPenalty;
      }

      // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by
      //     additionPenalty.
      if (optionsProp === undefined && formatProp !== undefined) score -= additionPenalty;

      // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by
      //    removalPenalty.
      else if (optionsProp !== undefined && formatProp === undefined) score -= removalPenalty;

      // vi. Else
      else {
        // 1. Let values be the array ["2-digit", "numeric", "narrow", "short",
        //    "long"].
        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];

        // 2. Let optionsPropIndex be the index of optionsProp within values.
        var optionsPropIndex = arrIndexOf.call(values, optionsProp);

        // 3. Let formatPropIndex be the index of formatProp within values.
        var formatPropIndex = arrIndexOf.call(values, formatProp);

        // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).
        var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);
        {
          // diverging from spec
          // When the bestFit argument is true, subtract additional penalty where data types are not the same
          if (formatPropIndex <= 1 && optionsPropIndex >= 2 || formatPropIndex >= 2 && optionsPropIndex <= 1) {
            // 5. If delta = 2, decrease score by longMorePenalty.
            if (delta > 0) score -= longMorePenalty;else if (delta < 0) score -= longLessPenalty;
          } else {
            // 5. If delta = 2, decrease score by longMorePenalty.
            if (delta > 1) score -= shortMorePenalty;else if (delta < -1) score -= shortLessPenalty;
          }
        }
      }
    }
    {
      // diverging to also take into consideration differences between 12 or 24 hours
      // which is special for the best fit only.
      if (format._.hour12 !== options.hour12) {
        score -= hour12Penalty;
      }
    }

    // d. If score > bestScore, then
    if (score > bestScore) {
      // i. Let bestScore be score.
      bestScore = score;
      // ii. Let bestFormat be format.
      bestFormat = format;
    }

    // e. Increase i by 1.
    i++;
  }

  // 13. Return bestFormat.
  return bestFormat;
}

/* 12.2.3 */
internals.DateTimeFormat = {
  '[[availableLocales]]': [],
  '[[relevantExtensionKeys]]': ['ca', 'nu'],
  '[[localeData]]': {}
};

/**
 * When the supportedLocalesOf method of Intl.DateTimeFormat is called, the
 * following steps are taken:
 */
/* 12.2.2 */
defineProperty(Intl.DateTimeFormat, 'supportedLocalesOf', {
  configurable: true,
  writable: true,
  value: fnBind.call(function (locales) {
    // Bound functions only have the `this` value altered if being used as a constructor,
    // this lets us imitate a native function that has no constructor
    if (!hop.call(this, '[[availableLocales]]')) throw new TypeError('supportedLocalesOf() is not a constructor');

    // Create an object whose props can be used to restore the values of RegExp props
    var regexpRestore = createRegExpRestore(),
      // 1. If options is not provided, then let options be undefined.
      options = arguments[1],
      // 2. Let availableLocales be the value of the [[availableLocales]] internal
      //    property of the standard built-in object that is the initial value of
      //    Intl.NumberFormat.

      availableLocales = this['[[availableLocales]]'],
      // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
      //    abstract operation (defined in 9.2.1) with argument locales.
      requestedLocales = CanonicalizeLocaleList(locales);

    // Restore the RegExp properties
    regexpRestore();

    // 4. Return the result of calling the SupportedLocales abstract operation
    //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,
    //    and options.
    return SupportedLocales(availableLocales, requestedLocales, options);
  }, internals.NumberFormat)
});

/**
 * This named accessor property returns a function that formats a number
 * according to the effective locale and the formatting options of this
 * DateTimeFormat object.
 */
/* 12.3.2 */
defineProperty(Intl.DateTimeFormat.prototype, 'format', {
  configurable: true,
  get: GetFormatDateTime
});
function GetFormatDateTime() {
  var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

  // Satisfy test 12.3_b
  if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for format() is not an initialized Intl.DateTimeFormat object.');

  // The value of the [[Get]] attribute is a function that takes the following
  // steps:

  // 1. If the [[boundFormat]] internal property of this DateTimeFormat object
  //    is undefined, then:
  if (internal['[[boundFormat]]'] === undefined) {
    // a. Let F be a Function object, with internal properties set as
    //    specified for built-in functions in ES5, 15, or successor, and the
    //    length property set to 0, that takes the argument date and
    //    performs the following steps:
    var F = function F() {
      var date = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];

      //   i. If date is not provided or is undefined, then let x be the
      //      result as if by the expression Date.now() where Date.now is
      //      the standard built-in function defined in ES5, 15.9.4.4.
      //  ii. Else let x be ToNumber(date).
      // iii. Return the result of calling the FormatDateTime abstract
      //      operation (defined below) with arguments this and x.
      var x = date === undefined ? Date.now() : toNumber(date);
      return FormatDateTime(this, x);
    };
    // b. Let bind be the standard built-in function object defined in ES5,
    //    15.3.4.5.
    // c. Let bf be the result of calling the [[Call]] internal method of
    //    bind with F as the this value and an argument list containing
    //    the single item this.
    var bf = fnBind.call(F, this);
    // d. Set the [[boundFormat]] internal property of this NumberFormat
    //    object to bf.
    internal['[[boundFormat]]'] = bf;
  }
  // Return the value of the [[boundFormat]] internal property of this
  // NumberFormat object.
  return internal['[[boundFormat]]'];
}
function formatToParts$1() {
  var date = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];
  var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);
  if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for formatToParts() is not an initialized Intl.DateTimeFormat object.');
  var x = date === undefined ? Date.now() : toNumber(date);
  return FormatToPartsDateTime(this, x);
}
Object.defineProperty(Intl.DateTimeFormat.prototype, 'formatToParts', {
  enumerable: false,
  writable: true,
  configurable: true,
  value: formatToParts$1
});
function CreateDateTimeParts(dateTimeFormat, x) {
  // 1. If x is not a finite Number, then throw a RangeError exception.
  if (!isFinite(x)) throw new RangeError('Invalid valid date passed to format');
  var internal = dateTimeFormat.__getInternalProperties(secret);

  // Creating restore point for properties on the RegExp object... please wait
  /* let regexpRestore = */
  createRegExpRestore(); // ###TODO: review this

  // 2. Let locale be the value of the [[locale]] internal property of dateTimeFormat.
  var locale = internal['[[locale]]'];

  // 3. Let nf be the result of creating a new NumberFormat object as if by the
  // expression new Intl.NumberFormat([locale], {useGrouping: false}) where
  // Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
  var nf = new Intl.NumberFormat([locale], {
    useGrouping: false
  });

  // 4. Let nf2 be the result of creating a new NumberFormat object as if by the
  // expression new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping:
  // false}) where Intl.NumberFormat is the standard built-in constructor defined in
  // 11.1.3.
  var nf2 = new Intl.NumberFormat([locale], {
    minimumIntegerDigits: 2,
    useGrouping: false
  });

  // 5. Let tm be the result of calling the ToLocalTime abstract operation (defined
  // below) with x, the value of the [[calendar]] internal property of dateTimeFormat,
  // and the value of the [[timeZone]] internal property of dateTimeFormat.
  var tm = ToLocalTime(x, internal['[[calendar]]'], internal['[[timeZone]]']);

  // 6. Let result be the value of the [[pattern]] internal property of dateTimeFormat.
  var pattern = internal['[[pattern]]'];

  // 7.
  var result = new List();

  // 8.
  var index = 0;

  // 9.
  var beginIndex = pattern.indexOf('{');

  // 10.
  var endIndex = 0;

  // Need the locale minus any extensions
  var dataLocale = internal['[[dataLocale]]'];

  // Need the calendar data from CLDR
  var localeData = internals.DateTimeFormat['[[localeData]]'][dataLocale].calendars;
  var ca = internal['[[calendar]]'];

  // 11.
  while (beginIndex !== -1) {
    var fv = void 0;
    // a.
    endIndex = pattern.indexOf('}', beginIndex);
    // b.
    if (endIndex === -1) {
      throw new Error('Unclosed pattern');
    }
    // c.
    if (beginIndex > index) {
      arrPush.call(result, {
        type: 'literal',
        value: pattern.substring(index, beginIndex)
      });
    }
    // d.
    var p = pattern.substring(beginIndex + 1, endIndex);
    // e.
    if (dateTimeComponents.hasOwnProperty(p)) {
      //   i. Let f be the value of the [[<p>]] internal property of dateTimeFormat.
      var f = internal['[[' + p + ']]'];
      //  ii. Let v be the value of tm.[[<p>]].
      var v = tm['[[' + p + ']]'];
      // iii. If p is "year" and v ≤ 0, then let v be 1 - v.
      if (p === 'year' && v <= 0) {
        v = 1 - v;
      }
      //  iv. If p is "month", then increase v by 1.
      else if (p === 'month') {
        v++;
      }
      //   v. If p is "hour" and the value of the [[hour12]] internal property of
      //      dateTimeFormat is true, then
      else if (p === 'hour' && internal['[[hour12]]'] === true) {
        // 1. Let v be v modulo 12.
        v = v % 12;
        // 2. If v is 0 and the value of the [[hourNo0]] internal property of
        //    dateTimeFormat is true, then let v be 12.
        if (v === 0 && internal['[[hourNo0]]'] === true) {
          v = 12;
        }
      }

      //  vi. If f is "numeric", then
      if (f === 'numeric') {
        // 1. Let fv be the result of calling the FormatNumber abstract operation
        //    (defined in 11.3.2) with arguments nf and v.
        fv = FormatNumber(nf, v);
      }
      // vii. Else if f is "2-digit", then
      else if (f === '2-digit') {
        // 1. Let fv be the result of calling the FormatNumber abstract operation
        //    with arguments nf2 and v.
        fv = FormatNumber(nf2, v);
        // 2. If the length of fv is greater than 2, let fv be the substring of fv
        //    containing the last two characters.
        if (fv.length > 2) {
          fv = fv.slice(-2);
        }
      }
      // viii. Else if f is "narrow", "short", or "long", then let fv be a String
      //     value representing f in the desired form; the String value depends upon
      //     the implementation and the effective locale and calendar of
      //     dateTimeFormat. If p is "month", then the String value may also depend
      //     on whether dateTimeFormat has a [[day]] internal property. If p is
      //     "timeZoneName", then the String value may also depend on the value of
      //     the [[inDST]] field of tm.
      else if (f in dateWidths) {
        switch (p) {
          case 'month':
            fv = resolveDateString(localeData, ca, 'months', f, tm['[[' + p + ']]']);
            break;
          case 'weekday':
            try {
              fv = resolveDateString(localeData, ca, 'days', f, tm['[[' + p + ']]']);
              // fv = resolveDateString(ca.days, f)[tm['[['+ p +']]']];
            } catch (e) {
              throw new Error('Could not find weekday data for locale ' + locale);
            }
            break;
          case 'timeZoneName':
            fv = ''; // ###TODO
            break;
          case 'era':
            try {
              fv = resolveDateString(localeData, ca, 'eras', f, tm['[[' + p + ']]']);
            } catch (e) {
              throw new Error('Could not find era data for locale ' + locale);
            }
            break;
          default:
            fv = tm['[[' + p + ']]'];
        }
      }
      // ix
      arrPush.call(result, {
        type: p,
        value: fv
      });
      // f.
    } else if (p === 'ampm') {
      // i.
      var _v = tm['[[hour]]'];
      // ii./iii.
      fv = resolveDateString(localeData, ca, 'dayPeriods', _v > 11 ? 'pm' : 'am', null);
      // iv.
      arrPush.call(result, {
        type: 'dayPeriod',
        value: fv
      });
      // g.
    } else {
      arrPush.call(result, {
        type: 'literal',
        value: pattern.substring(beginIndex, endIndex + 1)
      });
    }
    // h.
    index = endIndex + 1;
    // i.
    beginIndex = pattern.indexOf('{', index);
  }
  // 12.
  if (endIndex < pattern.length - 1) {
    arrPush.call(result, {
      type: 'literal',
      value: pattern.substr(endIndex + 1)
    });
  }
  // 13.
  return result;
}

/**
 * When the FormatDateTime abstract operation is called with arguments dateTimeFormat
 * (which must be an object initialized as a DateTimeFormat) and x (which must be a Number
 * value), it returns a String value representing x (interpreted as a time value as
 * specified in ES5, 15.9.1.1) according to the effective locale and the formatting
 * options of dateTimeFormat.
 */
function FormatDateTime(dateTimeFormat, x) {
  var parts = CreateDateTimeParts(dateTimeFormat, x);
  var result = '';
  for (var i = 0; parts.length > i; i++) {
    var part = parts[i];
    result += part.value;
  }
  return result;
}
function FormatToPartsDateTime(dateTimeFormat, x) {
  var parts = CreateDateTimeParts(dateTimeFormat, x);
  var result = [];
  for (var i = 0; parts.length > i; i++) {
    var part = parts[i];
    result.push({
      type: part.type,
      value: part.value
    });
  }
  return result;
}

/**
 * When the ToLocalTime abstract operation is called with arguments date, calendar, and
 * timeZone, the following steps are taken:
 */
function ToLocalTime(date, calendar, timeZone) {
  // 1. Apply calendrical calculations on date for the given calendar and time zone to
  //    produce weekday, era, year, month, day, hour, minute, second, and inDST values.
  //    The calculations should use best available information about the specified
  //    calendar and time zone. If the calendar is "gregory", then the calculations must
  //    match the algorithms specified in ES5, 15.9.1, except that calculations are not
  //    bound by the restrictions on the use of best available information on time zones
  //    for local time zone adjustment and daylight saving time adjustment imposed by
  //    ES5, 15.9.1.7 and 15.9.1.8.
  // ###TODO###
  var d = new Date(date),
    m = 'get' + (timeZone || '');

  // 2. Return a Record with fields [[weekday]], [[era]], [[year]], [[month]], [[day]],
  //    [[hour]], [[minute]], [[second]], and [[inDST]], each with the corresponding
  //    calculated value.
  return new Record({
    '[[weekday]]': d[m + 'Day'](),
    '[[era]]': +(d[m + 'FullYear']() >= 0),
    '[[year]]': d[m + 'FullYear'](),
    '[[month]]': d[m + 'Month'](),
    '[[day]]': d[m + 'Date'](),
    '[[hour]]': d[m + 'Hours'](),
    '[[minute]]': d[m + 'Minutes'](),
    '[[second]]': d[m + 'Seconds'](),
    '[[inDST]]': false // ###TODO###
  });
}

/**
 * The function returns a new object whose properties and attributes are set as if
 * constructed by an object literal assigning to each of the following properties the
 * value of the corresponding internal property of this DateTimeFormat object (see 12.4):
 * locale, calendar, numberingSystem, timeZone, hour12, weekday, era, year, month, day,
 * hour, minute, second, and timeZoneName. Properties whose corresponding internal
 * properties are not present are not assigned.
 */
/* 12.3.3 */
defineProperty(Intl.DateTimeFormat.prototype, 'resolvedOptions', {
  writable: true,
  configurable: true,
  value: function value() {
    var prop = void 0,
      descs = new Record(),
      props = ['locale', 'calendar', 'numberingSystem', 'timeZone', 'hour12', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName'],
      internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    // Satisfy test 12.3_b
    if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.DateTimeFormat object.');
    for (var i = 0, max = props.length; i < max; i++) {
      if (hop.call(internal, prop = '[[' + props[i] + ']]')) descs[props[i]] = {
        value: internal[prop],
        writable: true,
        configurable: true,
        enumerable: true
      };
    }
    return objCreate({}, descs);
  }
});
var ls = Intl.__localeSensitiveProtos = {
  Number: {},
  Date: {}
};

/**
 * When the toLocaleString method is called with optional arguments locales and options,
 * the following steps are taken:
 */
/* 13.2.1 */
ls.Number.toLocaleString = function () {
  // Satisfy test 13.2.1_1
  if (Object.prototype.toString.call(this) !== '[object Number]') throw new TypeError('`this` value must be a number for Number.prototype.toLocaleString()');

  // 1. Let x be this Number value (as defined in ES5, 15.7.4).
  // 2. If locales is not provided, then let locales be undefined.
  // 3. If options is not provided, then let options be undefined.
  // 4. Let numberFormat be the result of creating a new object as if by the
  //    expression new Intl.NumberFormat(locales, options) where
  //    Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
  // 5. Return the result of calling the FormatNumber abstract operation
  //    (defined in 11.3.2) with arguments numberFormat and x.
  return FormatNumber(new NumberFormatConstructor(arguments[0], arguments[1]), this);
};

/**
 * When the toLocaleString method is called with optional arguments locales and options,
 * the following steps are taken:
 */
/* 13.3.1 */
ls.Date.toLocaleString = function () {
  // Satisfy test 13.3.0_1
  if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleString()');

  // 1. Let x be this time value (as defined in ES5, 15.9.5).
  var x = +this;

  // 2. If x is NaN, then return "Invalid Date".
  if (isNaN(x)) return 'Invalid Date';

  // 3. If locales is not provided, then let locales be undefined.
  var locales = arguments[0];

  // 4. If options is not provided, then let options be undefined.
  var options = arguments[1];

  // 5. Let options be the result of calling the ToDateTimeOptions abstract
  //    operation (defined in 12.1.1) with arguments options, "any", and "all".
  options = ToDateTimeOptions(options, 'any', 'all');

  // 6. Let dateTimeFormat be the result of creating a new object as if by the
  //    expression new Intl.DateTimeFormat(locales, options) where
  //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
  var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

  // 7. Return the result of calling the FormatDateTime abstract operation (defined
  //    in 12.3.2) with arguments dateTimeFormat and x.
  return FormatDateTime(dateTimeFormat, x);
};

/**
 * When the toLocaleDateString method is called with optional arguments locales and
 * options, the following steps are taken:
 */
/* 13.3.2 */
ls.Date.toLocaleDateString = function () {
  // Satisfy test 13.3.0_1
  if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleDateString()');

  // 1. Let x be this time value (as defined in ES5, 15.9.5).
  var x = +this;

  // 2. If x is NaN, then return "Invalid Date".
  if (isNaN(x)) return 'Invalid Date';

  // 3. If locales is not provided, then let locales be undefined.
  var locales = arguments[0],
    // 4. If options is not provided, then let options be undefined.
    options = arguments[1];

  // 5. Let options be the result of calling the ToDateTimeOptions abstract
  //    operation (defined in 12.1.1) with arguments options, "date", and "date".
  options = ToDateTimeOptions(options, 'date', 'date');

  // 6. Let dateTimeFormat be the result of creating a new object as if by the
  //    expression new Intl.DateTimeFormat(locales, options) where
  //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
  var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

  // 7. Return the result of calling the FormatDateTime abstract operation (defined
  //    in 12.3.2) with arguments dateTimeFormat and x.
  return FormatDateTime(dateTimeFormat, x);
};

/**
 * When the toLocaleTimeString method is called with optional arguments locales and
 * options, the following steps are taken:
 */
/* 13.3.3 */
ls.Date.toLocaleTimeString = function () {
  // Satisfy test 13.3.0_1
  if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleTimeString()');

  // 1. Let x be this time value (as defined in ES5, 15.9.5).
  var x = +this;

  // 2. If x is NaN, then return "Invalid Date".
  if (isNaN(x)) return 'Invalid Date';

  // 3. If locales is not provided, then let locales be undefined.
  var locales = arguments[0];

  // 4. If options is not provided, then let options be undefined.
  var options = arguments[1];

  // 5. Let options be the result of calling the ToDateTimeOptions abstract
  //    operation (defined in 12.1.1) with arguments options, "time", and "time".
  options = ToDateTimeOptions(options, 'time', 'time');

  // 6. Let dateTimeFormat be the result of creating a new object as if by the
  //    expression new Intl.DateTimeFormat(locales, options) where
  //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
  var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

  // 7. Return the result of calling the FormatDateTime abstract operation (defined
  //    in 12.3.2) with arguments dateTimeFormat and x.
  return FormatDateTime(dateTimeFormat, x);
};
defineProperty(Intl, '__applyLocaleSensitivePrototypes', {
  writable: true,
  configurable: true,
  value: function value() {
    defineProperty(Number.prototype, 'toLocaleString', {
      writable: true,
      configurable: true,
      value: ls.Number.toLocaleString
    });
    // Need this here for IE 8, to avoid the _DontEnum_ bug
    defineProperty(Date.prototype, 'toLocaleString', {
      writable: true,
      configurable: true,
      value: ls.Date.toLocaleString
    });
    for (var k in ls.Date) {
      if (hop.call(ls.Date, k)) defineProperty(Date.prototype, k, {
        writable: true,
        configurable: true,
        value: ls.Date[k]
      });
    }
  }
});

/**
 * Can't really ship a single script with data for hundreds of locales, so we provide
 * this __addLocaleData method as a means for the developer to add the data on an
 * as-needed basis
 */
defineProperty(Intl, '__addLocaleData', {
  value: function value(data) {
    if (!IsStructurallyValidLanguageTag(data.locale)) throw new Error("Object passed doesn't identify itself with a valid language tag");
    addLocaleData(data, data.locale);
  }
});
function addLocaleData(data, tag) {
  // Both NumberFormat and DateTimeFormat require number data, so throw if it isn't present
  if (!data.number) throw new Error("Object passed doesn't contain locale data for Intl.NumberFormat");
  var locale = void 0,
    locales = [tag],
    parts = tag.split('-');

  // Create fallbacks for locale data with scripts, e.g. Latn, Hans, Vaii, etc
  if (parts.length > 2 && parts[1].length === 4) arrPush.call(locales, parts[0] + '-' + parts[2]);
  while (locale = arrShift.call(locales)) {
    // Add to NumberFormat internal properties as per 11.2.3
    arrPush.call(internals.NumberFormat['[[availableLocales]]'], locale);
    internals.NumberFormat['[[localeData]]'][locale] = data.number;

    // ...and DateTimeFormat internal properties as per 12.2.3
    if (data.date) {
      data.date.nu = data.number.nu;
      arrPush.call(internals.DateTimeFormat['[[availableLocales]]'], locale);
      internals.DateTimeFormat['[[localeData]]'][locale] = data.date;
    }
  }

  // If this is the first set of locale data added, make it the default
  if (defaultLocale === undefined) setDefaultLocale(tag);
}
defineProperty(Intl, '__disableRegExpRestore', {
  value: function value() {
    internals.disableRegExpRestore = true;
  }
});
module.exports = Intl;

/***/ }),

/***/ "./node_modules/seedrandom/index.js":
/*!******************************************!*\
  !*** ./node_modules/seedrandom/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// A library of seedable RNGs implemented in Javascript.
//
// Usage:
//
// var seedrandom = require('seedrandom');
// var random = seedrandom(1); // or any seed.
// var x = random();       // 0 <= x < 1.  Every bit is random.
// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.

// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.
// Period: ~2^116
// Reported to pass all BigCrush tests.
var alea = __webpack_require__(/*! ./lib/alea */ "./node_modules/seedrandom/lib/alea.js");

// xor128, a pure xor-shift generator by George Marsaglia.
// Period: 2^128-1.
// Reported to fail: MatrixRank and LinearComp.
var xor128 = __webpack_require__(/*! ./lib/xor128 */ "./node_modules/seedrandom/lib/xor128.js");

// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.
// Period: 2^192-2^32
// Reported to fail: CollisionOver, SimpPoker, and LinearComp.
var xorwow = __webpack_require__(/*! ./lib/xorwow */ "./node_modules/seedrandom/lib/xorwow.js");

// xorshift7, by François Panneton and Pierre L'ecuyer, takes
// a different approach: it adds robustness by allowing more shifts
// than Marsaglia's original three.  It is a 7-shift generator
// with 256 bits, that passes BigCrush with no systmatic failures.
// Period 2^256-1.
// No systematic BigCrush failures reported.
var xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ "./node_modules/seedrandom/lib/xorshift7.js");

// xor4096, by Richard Brent, is a 4096-bit xor-shift with a
// very long period that also adds a Weyl generator. It also passes
// BigCrush with no systematic failures.  Its long period may
// be useful if you have many generators and need to avoid
// collisions.
// Period: 2^4128-2^32.
// No systematic BigCrush failures reported.
var xor4096 = __webpack_require__(/*! ./lib/xor4096 */ "./node_modules/seedrandom/lib/xor4096.js");

// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random
// number generator derived from ChaCha, a modern stream cipher.
// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf
// Period: ~2^127
// No systematic BigCrush failures reported.
var tychei = __webpack_require__(/*! ./lib/tychei */ "./node_modules/seedrandom/lib/tychei.js");

// The original ARC4-based prng included in this library.
// Period: ~2^1600
var sr = __webpack_require__(/*! ./seedrandom */ "./node_modules/seedrandom/seedrandom.js");
sr.alea = alea;
sr.xor128 = xor128;
sr.xorwow = xorwow;
sr.xorshift7 = xorshift7;
sr.xor4096 = xor4096;
sr.tychei = tychei;
module.exports = sr;

/***/ }),

/***/ "./node_modules/seedrandom/lib/alea.js":
/*!*********************************************!*\
  !*** ./node_modules/seedrandom/lib/alea.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010
// http://baagoe.com/en/RandomMusings/javascript/
// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror
// Original work is under MIT license -

// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

(function (global, module, define) {
  function Alea(seed) {
    var me = this,
      mash = Mash();
    me.next = function () {
      var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32
      me.s0 = me.s1;
      me.s1 = me.s2;
      return me.s2 = t - (me.c = t | 0);
    };

    // Apply the seeding algorithm from Baagoe.
    me.c = 1;
    me.s0 = mash(' ');
    me.s1 = mash(' ');
    me.s2 = mash(' ');
    me.s0 -= mash(seed);
    if (me.s0 < 0) {
      me.s0 += 1;
    }
    me.s1 -= mash(seed);
    if (me.s1 < 0) {
      me.s1 += 1;
    }
    me.s2 -= mash(seed);
    if (me.s2 < 0) {
      me.s2 += 1;
    }
    mash = null;
  }
  function copy(f, t) {
    t.c = f.c;
    t.s0 = f.s0;
    t.s1 = f.s1;
    t.s2 = f.s2;
    return t;
  }
  function impl(seed, opts) {
    var xg = new Alea(seed),
      state = opts && opts.state,
      prng = xg.next;
    prng.int32 = function () {
      return xg.next() * 0x100000000 | 0;
    };
    prng.double = function () {
      return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53
    };
    prng.quick = prng;
    if (state) {
      if (typeof state == 'object') copy(state, xg);
      prng.state = function () {
        return copy(xg, {});
      };
    }
    return prng;
  }
  function Mash() {
    var n = 0xefc8249d;
    var mash = function mash(data) {
      data = String(data);
      for (var i = 0; i < data.length; i++) {
        n += data.charCodeAt(i);
        var h = 0.02519603282416938 * n;
        n = h >>> 0;
        h -= n;
        h *= n;
        n = h >>> 0;
        h -= n;
        n += h * 0x100000000; // 2^32
      }
      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32
    };
    return mash;
  }
  if (module && module.exports) {
    module.exports = impl;
  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return impl;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    this.alea = impl;
  }
})(this,  true && module,
// present in node.js
__webpack_require__.amdD // present with an AMD loader
);

/***/ }),

/***/ "./node_modules/seedrandom/lib/tychei.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/tychei.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "Tyche-i" prng algorithm by
// Samuel Neves and Filipe Araujo.
// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf

(function (global, module, define) {
  function XorGen(seed) {
    var me = this,
      strseed = '';

    // Set up generator function.
    me.next = function () {
      var b = me.b,
        c = me.c,
        d = me.d,
        a = me.a;
      b = b << 25 ^ b >>> 7 ^ c;
      c = c - d | 0;
      d = d << 24 ^ d >>> 8 ^ a;
      a = a - b | 0;
      me.b = b = b << 20 ^ b >>> 12 ^ c;
      me.c = c = c - d | 0;
      me.d = d << 16 ^ c >>> 16 ^ a;
      return me.a = a - b | 0;
    };

    /* The following is non-inverted tyche, which has better internal
     * bit diffusion, but which is about 25% slower than tyche-i in JS.
    me.next = function() {
      var a = me.a, b = me.b, c = me.c, d = me.d;
      a = (me.a + me.b | 0) >>> 0;
      d = me.d ^ a; d = d << 16 ^ d >>> 16;
      c = me.c + d | 0;
      b = me.b ^ c; b = b << 12 ^ d >>> 20;
      me.a = a = a + b | 0;
      d = d ^ a; me.d = d = d << 8 ^ d >>> 24;
      me.c = c = c + d | 0;
      b = b ^ c;
      return me.b = (b << 7 ^ b >>> 25);
    }
    */

    me.a = 0;
    me.b = 0;
    me.c = 2654435769 | 0;
    me.d = 1367130551;
    if (seed === Math.floor(seed)) {
      // Integer seed.
      me.a = seed / 0x100000000 | 0;
      me.b = seed | 0;
    } else {
      // String seed.
      strseed += seed;
    }

    // Mix in string seed, then discard an initial batch of 64 values.
    for (var k = 0; k < strseed.length + 20; k++) {
      me.b ^= strseed.charCodeAt(k) | 0;
      me.next();
    }
  }
  function copy(f, t) {
    t.a = f.a;
    t.b = f.b;
    t.c = f.c;
    t.d = f.d;
    return t;
  }
  ;
  function impl(seed, opts) {
    var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function prng() {
        return (xg.next() >>> 0) / 0x100000000;
      };
    prng.double = function () {
      do {
        var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
      } while (result === 0);
      return result;
    };
    prng.int32 = xg.next;
    prng.quick = prng;
    if (state) {
      if (typeof state == 'object') copy(state, xg);
      prng.state = function () {
        return copy(xg, {});
      };
    }
    return prng;
  }
  if (module && module.exports) {
    module.exports = impl;
  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return impl;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    this.tychei = impl;
  }
})(this,  true && module,
// present in node.js
__webpack_require__.amdD // present with an AMD loader
);

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor128.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xor128.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xor128" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper

(function (global, module, define) {
  function XorGen(seed) {
    var me = this,
      strseed = '';
    me.x = 0;
    me.y = 0;
    me.z = 0;
    me.w = 0;

    // Set up generator function.
    me.next = function () {
      var t = me.x ^ me.x << 11;
      me.x = me.y;
      me.y = me.z;
      me.z = me.w;
      return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;
    };
    if (seed === (seed | 0)) {
      // Integer seed.
      me.x = seed;
    } else {
      // String seed.
      strseed += seed;
    }

    // Mix in string seed, then discard an initial batch of 64 values.
    for (var k = 0; k < strseed.length + 64; k++) {
      me.x ^= strseed.charCodeAt(k) | 0;
      me.next();
    }
  }
  function copy(f, t) {
    t.x = f.x;
    t.y = f.y;
    t.z = f.z;
    t.w = f.w;
    return t;
  }
  function impl(seed, opts) {
    var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function prng() {
        return (xg.next() >>> 0) / 0x100000000;
      };
    prng.double = function () {
      do {
        var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
      } while (result === 0);
      return result;
    };
    prng.int32 = xg.next;
    prng.quick = prng;
    if (state) {
      if (typeof state == 'object') copy(state, xg);
      prng.state = function () {
        return copy(xg, {});
      };
    }
    return prng;
  }
  if (module && module.exports) {
    module.exports = impl;
  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return impl;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    this.xor128 = impl;
  }
})(this,  true && module,
// present in node.js
__webpack_require__.amdD // present with an AMD loader
);

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor4096.js":
/*!************************************************!*\
  !*** ./node_modules/seedrandom/lib/xor4096.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.
//
// This fast non-cryptographic random number generator is designed for
// use in Monte-Carlo algorithms. It combines a long-period xorshift
// generator with a Weyl generator, and it passes all common batteries
// of stasticial tests for randomness while consuming only a few nanoseconds
// for each prng generated.  For background on the generator, see Brent's
// paper: "Some long-period random number generators using shifts and xors."
// http://arxiv.org/pdf/1004.3115v1.pdf
//
// Usage:
//
// var xor4096 = require('xor4096');
// random = xor4096(1);                        // Seed with int32 or string.
// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.
// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.
//
// For nonzero numeric keys, this impelementation provides a sequence
// identical to that by Brent's xorgens 3 implementaion in C.  This
// implementation also provides for initalizing the generator with
// string seeds, or for saving and restoring the state of the generator.
//
// On Chrome, this prng benchmarks about 2.1 times slower than
// Javascript's built-in Math.random().

(function (global, module, define) {
  function XorGen(seed) {
    var me = this;

    // Set up generator function.
    me.next = function () {
      var w = me.w,
        X = me.X,
        i = me.i,
        t,
        v;
      // Update Weyl generator.
      me.w = w = w + 0x61c88647 | 0;
      // Update xor generator.
      v = X[i + 34 & 127];
      t = X[i = i + 1 & 127];
      v ^= v << 13;
      t ^= t << 17;
      v ^= v >>> 15;
      t ^= t >>> 12;
      // Update Xor generator array state.
      v = X[i] = v ^ t;
      me.i = i;
      // Result is the combination.
      return v + (w ^ w >>> 16) | 0;
    };
    function init(me, seed) {
      var t,
        v,
        i,
        j,
        w,
        X = [],
        limit = 128;
      if (seed === (seed | 0)) {
        // Numeric seeds initialize v, which is used to generates X.
        v = seed;
        seed = null;
      } else {
        // String seeds are mixed into v and X one character at a time.
        seed = seed + '\0';
        v = 0;
        limit = Math.max(limit, seed.length);
      }
      // Initialize circular array and weyl value.
      for (i = 0, j = -32; j < limit; ++j) {
        // Put the unicode characters into the array, and shuffle them.
        if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);
        // After 32 shuffles, take v as the starting w value.
        if (j === 0) w = v;
        v ^= v << 10;
        v ^= v >>> 15;
        v ^= v << 4;
        v ^= v >>> 13;
        if (j >= 0) {
          w = w + 0x61c88647 | 0; // Weyl.
          t = X[j & 127] ^= v + w; // Combine xor and weyl to init array.
          i = 0 == t ? i + 1 : 0; // Count zeroes.
        }
      }
      // We have detected all zeroes; make the key nonzero.
      if (i >= 128) {
        X[(seed && seed.length || 0) & 127] = -1;
      }
      // Run the generator 512 times to further mix the state before using it.
      // Factoring this as a function slows the main generator, so it is just
      // unrolled here.  The weyl generator is not advanced while warming up.
      i = 127;
      for (j = 4 * 128; j > 0; --j) {
        v = X[i + 34 & 127];
        t = X[i = i + 1 & 127];
        v ^= v << 13;
        t ^= t << 17;
        v ^= v >>> 15;
        t ^= t >>> 12;
        X[i] = v ^ t;
      }
      // Storing state as object members is faster than using closure variables.
      me.w = w;
      me.X = X;
      me.i = i;
    }
    init(me, seed);
  }
  function copy(f, t) {
    t.i = f.i;
    t.w = f.w;
    t.X = f.X.slice();
    return t;
  }
  ;
  function impl(seed, opts) {
    if (seed == null) seed = +new Date();
    var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function prng() {
        return (xg.next() >>> 0) / 0x100000000;
      };
    prng.double = function () {
      do {
        var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
      } while (result === 0);
      return result;
    };
    prng.int32 = xg.next;
    prng.quick = prng;
    if (state) {
      if (state.X) copy(state, xg);
      prng.state = function () {
        return copy(xg, {});
      };
    }
    return prng;
  }
  if (module && module.exports) {
    module.exports = impl;
  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return impl;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    this.xor4096 = impl;
  }
})(this,
// window object or global
 true && module,
// present in node.js
__webpack_require__.amdD // present with an AMD loader
);

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorshift7.js":
/*!**************************************************!*\
  !*** ./node_modules/seedrandom/lib/xorshift7.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xorshift7" algorithm by
// François Panneton and Pierre L'ecuyer:
// "On the Xorgshift Random Number Generators"
// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf

(function (global, module, define) {
  function XorGen(seed) {
    var me = this;

    // Set up generator function.
    me.next = function () {
      // Update xor generator.
      var X = me.x,
        i = me.i,
        t,
        v,
        w;
      t = X[i];
      t ^= t >>> 7;
      v = t ^ t << 24;
      t = X[i + 1 & 7];
      v ^= t ^ t >>> 10;
      t = X[i + 3 & 7];
      v ^= t ^ t >>> 3;
      t = X[i + 4 & 7];
      v ^= t ^ t << 7;
      t = X[i + 7 & 7];
      t = t ^ t << 13;
      v ^= t ^ t << 9;
      X[i] = v;
      me.i = i + 1 & 7;
      return v;
    };
    function init(me, seed) {
      var j,
        w,
        X = [];
      if (seed === (seed | 0)) {
        // Seed state array using a 32-bit integer.
        w = X[0] = seed;
      } else {
        // Seed state using a string.
        seed = '' + seed;
        for (j = 0; j < seed.length; ++j) {
          X[j & 7] = X[j & 7] << 15 ^ seed.charCodeAt(j) + X[j + 1 & 7] << 13;
        }
      }
      // Enforce an array length of 8, not all zeroes.
      while (X.length < 8) X.push(0);
      for (j = 0; j < 8 && X[j] === 0; ++j);
      if (j == 8) w = X[7] = -1;else w = X[j];
      me.x = X;
      me.i = 0;

      // Discard an initial 256 values.
      for (j = 256; j > 0; --j) {
        me.next();
      }
    }
    init(me, seed);
  }
  function copy(f, t) {
    t.x = f.x.slice();
    t.i = f.i;
    return t;
  }
  function impl(seed, opts) {
    if (seed == null) seed = +new Date();
    var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function prng() {
        return (xg.next() >>> 0) / 0x100000000;
      };
    prng.double = function () {
      do {
        var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
      } while (result === 0);
      return result;
    };
    prng.int32 = xg.next;
    prng.quick = prng;
    if (state) {
      if (state.x) copy(state, xg);
      prng.state = function () {
        return copy(xg, {});
      };
    }
    return prng;
  }
  if (module && module.exports) {
    module.exports = impl;
  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return impl;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    this.xorshift7 = impl;
  }
})(this,  true && module,
// present in node.js
__webpack_require__.amdD // present with an AMD loader
);

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorwow.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xorwow.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xorwow" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper

(function (global, module, define) {
  function XorGen(seed) {
    var me = this,
      strseed = '';

    // Set up generator function.
    me.next = function () {
      var t = me.x ^ me.x >>> 2;
      me.x = me.y;
      me.y = me.z;
      me.z = me.w;
      me.w = me.v;
      return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;
    };
    me.x = 0;
    me.y = 0;
    me.z = 0;
    me.w = 0;
    me.v = 0;
    if (seed === (seed | 0)) {
      // Integer seed.
      me.x = seed;
    } else {
      // String seed.
      strseed += seed;
    }

    // Mix in string seed, then discard an initial batch of 64 values.
    for (var k = 0; k < strseed.length + 64; k++) {
      me.x ^= strseed.charCodeAt(k) | 0;
      if (k == strseed.length) {
        me.d = me.x << 10 ^ me.x >>> 4;
      }
      me.next();
    }
  }
  function copy(f, t) {
    t.x = f.x;
    t.y = f.y;
    t.z = f.z;
    t.w = f.w;
    t.v = f.v;
    t.d = f.d;
    return t;
  }
  function impl(seed, opts) {
    var xg = new XorGen(seed),
      state = opts && opts.state,
      prng = function prng() {
        return (xg.next() >>> 0) / 0x100000000;
      };
    prng.double = function () {
      do {
        var top = xg.next() >>> 11,
          bot = (xg.next() >>> 0) / 0x100000000,
          result = (top + bot) / (1 << 21);
      } while (result === 0);
      return result;
    };
    prng.int32 = xg.next;
    prng.quick = prng;
    if (state) {
      if (typeof state == 'object') copy(state, xg);
      prng.state = function () {
        return copy(xg, {});
      };
    }
    return prng;
  }
  if (module && module.exports) {
    module.exports = impl;
  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return impl;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {
    this.xorwow = impl;
  }
})(this,  true && module,
// present in node.js
__webpack_require__.amdD // present with an AMD loader
);

/***/ }),

/***/ "./node_modules/seedrandom/seedrandom.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/seedrandom.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
Copyright 2019 David Bau.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

(function (global, pool, math) {
  //
  // The following constants are related to IEEE 754 limits.
  //

  var width = 256,
    // each RC4 output is 0 <= x < 256
    chunks = 6,
    // at least six RC4 outputs for each double
    digits = 52,
    // there are 52 significant digits in a double
    rngname = 'random',
    // rngname: name for Math.random and Math.seedrandom
    startdenom = math.pow(width, chunks),
    significance = math.pow(2, digits),
    overflow = significance * 2,
    mask = width - 1,
    nodecrypto; // node.js crypto module, initialized at the bottom.

  //
  // seedrandom()
  // This is the seedrandom function described above.
  //
  function seedrandom(seed, options, callback) {
    var key = [];
    options = options == true ? {
      entropy: true
    } : options || {};

    // Flatten the seed string or build one from local entropy if needed.
    var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed, 3), key);

    // Use the seed to initialize an ARC4 generator.
    var arc4 = new ARC4(key);

    // This function returns a random double in [0, 1) that contains
    // randomness in every bit of the mantissa of the IEEE 754 value.
    var prng = function prng() {
      var n = arc4.g(chunks),
        // Start with a numerator n < 2 ^ 48
        d = startdenom,
        //   and denominator d = 2 ^ 48.
        x = 0; //   and no 'extra last byte'.
      while (n < significance) {
        // Fill up all significant digits by
        n = (n + x) * width; //   shifting numerator and
        d *= width; //   denominator and generating a
        x = arc4.g(1); //   new least-significant-byte.
      }
      while (n >= overflow) {
        // To avoid rounding up, before adding
        n /= 2; //   last byte, shift everything
        d /= 2; //   right using integer math until
        x >>>= 1; //   we have exactly the desired bits.
      }
      return (n + x) / d; // Form the number within [0, 1).
    };
    prng.int32 = function () {
      return arc4.g(4) | 0;
    };
    prng.quick = function () {
      return arc4.g(4) / 0x100000000;
    };
    prng.double = prng;

    // Mix the randomness into accumulated entropy.
    mixkey(tostring(arc4.S), pool);

    // Calling convention: what to return as a function of prng, seed, is_math.
    return (options.pass || callback || function (prng, seed, is_math_call, state) {
      if (state) {
        // Load the arc4 state from the given state if it has an S array.
        if (state.S) {
          copy(state, arc4);
        }
        // Only provide the .state method if requested via options.state.
        prng.state = function () {
          return copy(arc4, {});
        };
      }

      // If called as a method of Math (Math.seedrandom()), mutate
      // Math.random because that is how seedrandom.js has worked since v1.0.
      if (is_math_call) {
        math[rngname] = prng;
        return seed;
      }

      // Otherwise, it is a newer calling convention, so return the
      // prng directly.
      else return prng;
    })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);
  }

  //
  // ARC4
  //
  // An ARC4 implementation.  The constructor takes a key in the form of
  // an array of at most (width) integers that should be 0 <= x < (width).
  //
  // The g(count) method returns a pseudorandom integer that concatenates
  // the next (count) outputs from ARC4.  Its return value is a number x
  // that is in the range 0 <= x < (width ^ count).
  //
  function ARC4(key) {
    var t,
      keylen = key.length,
      me = this,
      i = 0,
      j = me.i = me.j = 0,
      s = me.S = [];

    // The empty key [] is treated as [0].
    if (!keylen) {
      key = [keylen++];
    }

    // Set up S using the standard key scheduling algorithm.
    while (i < width) {
      s[i] = i++;
    }
    for (i = 0; i < width; i++) {
      s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];
      s[j] = t;
    }

    // The "g" method returns the next (count) outputs as one number.
    (me.g = function (count) {
      // Using instance members instead of closure state nearly doubles speed.
      var t,
        r = 0,
        i = me.i,
        j = me.j,
        s = me.S;
      while (count--) {
        t = s[i = mask & i + 1];
        r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];
      }
      me.i = i;
      me.j = j;
      return r;
      // For robust unpredictability, the function call below automatically
      // discards an initial batch of values.  This is called RC4-drop[256].
      // See http://google.com/search?q=rsa+fluhrer+response&btnI
    })(width);
  }

  //
  // copy()
  // Copies internal state of ARC4 to or from a plain object.
  //
  function copy(f, t) {
    t.i = f.i;
    t.j = f.j;
    t.S = f.S.slice();
    return t;
  }
  ;

  //
  // flatten()
  // Converts an object tree to nested arrays of strings.
  //
  function flatten(obj, depth) {
    var result = [],
      typ = typeof obj,
      prop;
    if (depth && typ == 'object') {
      for (prop in obj) {
        try {
          result.push(flatten(obj[prop], depth - 1));
        } catch (e) {}
      }
    }
    return result.length ? result : typ == 'string' ? obj : obj + '\0';
  }

  //
  // mixkey()
  // Mixes a string seed into a key that is an array of integers, and
  // returns a shortened string seed that is equivalent to the result key.
  //
  function mixkey(seed, key) {
    var stringseed = seed + '',
      smear,
      j = 0;
    while (j < stringseed.length) {
      key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);
    }
    return tostring(key);
  }

  //
  // autoseed()
  // Returns an object for autoseeding, using window.crypto and Node crypto
  // module if available.
  //
  function autoseed() {
    try {
      var out;
      if (nodecrypto && (out = nodecrypto.randomBytes)) {
        // The use of 'out' to remember randomBytes makes tight minified code.
        out = out(width);
      } else {
        out = new Uint8Array(width);
        (global.crypto || global.msCrypto).getRandomValues(out);
      }
      return tostring(out);
    } catch (e) {
      var browser = global.navigator,
        plugins = browser && browser.plugins;
      return [+new Date(), global, plugins, global.screen, tostring(pool)];
    }
  }

  //
  // tostring()
  // Converts an array of charcodes to a string
  //
  function tostring(a) {
    return String.fromCharCode.apply(0, a);
  }

  //
  // When seedrandom.js is loaded, we immediately mix a few bits
  // from the built-in RNG into the entropy pool.  Because we do
  // not want to interfere with deterministic PRNG state later,
  // seedrandom will not call math.random on its own again after
  // initialization.
  //
  mixkey(math.random(), pool);

  //
  // Nodejs and AMD support: export the implementation as a module using
  // either convention.
  //
  if ( true && module.exports) {
    module.exports = seedrandom;
    // When in node.js, try using crypto package for autoseeding.
    try {
      nodecrypto = __webpack_require__(/*! crypto */ "?d4c0");
    } catch (ex) {}
  } else if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return seedrandom;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

  // End anonymous scope, and pass initial values.
})(
// global: `self` in browsers (including strict mode and web workers),
// otherwise `this` in Node and other environments
typeof self !== 'undefined' ? self : this, [],
// pool: entropy pool starts empty
Math // math: package containing random, pow, and seedrandom
);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/CursorBatching.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/CursorBatching.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CursorBatching)
/* harmony export */ });
/* harmony import */ var _CursorConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CursorConstants.js */ "./node_modules/@ably/spaces/dist/mjs/CursorConstants.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

class CursorBatching {
  constructor(outboundBatchInterval) {
    this.outboundBatchInterval = outboundBatchInterval;
    this.outgoingBuffer = [];
    // Set to `true` when a cursor position is in the buffer
    this.hasMovement = false;
    // Set to `true` when the buffer is actively being emptied
    this.isRunning = false;
    // Set to `true` if there is more than one user listening to cursors
    this.shouldSend = false;
    // Used for tracking offsets in the buffer
    this.bufferStartTimestamp = 0;
    this.batchTime = outboundBatchInterval;
  }
  pushCursorPosition(channel, cursor) {
    // Ignore the cursor update if there is no one listening
    if (!this.shouldSend) return;
    const timestamp = new Date().getTime();
    let offset;
    // First update in the buffer is always 0
    if (this.outgoingBuffer.length === 0) {
      offset = 0;
      this.bufferStartTimestamp = timestamp;
    } else {
      // Add the offset compared to the first update in the buffer
      offset = timestamp - this.bufferStartTimestamp;
    }
    this.hasMovement = true;
    this.pushToBuffer({
      cursor,
      offset
    });
    this.publishFromBuffer(channel, _CursorConstants_js__WEBPACK_IMPORTED_MODULE_0__.CURSOR_UPDATE);
  }
  setShouldSend(shouldSend) {
    this.shouldSend = shouldSend;
  }
  setBatchTime(batchTime) {
    this.batchTime = batchTime;
  }
  pushToBuffer(value) {
    this.outgoingBuffer.push(value);
  }
  publishFromBuffer(channel, eventName) {
    return __awaiter(this, void 0, void 0, function* () {
      if (!this.isRunning) {
        this.isRunning = true;
        yield this.batchToChannel(channel, eventName);
      }
    });
  }
  batchToChannel(channel, eventName) {
    return __awaiter(this, void 0, void 0, function* () {
      if (!this.hasMovement) {
        this.isRunning = false;
        return;
      }
      // Must be copied here to avoid a race condition where the buffer is cleared before the publish happens
      const bufferCopy = [...this.outgoingBuffer];
      channel.publish(eventName, bufferCopy);
      setTimeout(() => this.batchToChannel(channel, eventName), this.batchTime);
      this.outgoingBuffer = [];
      this.hasMovement = false;
      this.isRunning = true;
    });
  }
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/CursorConstants.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/CursorConstants.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CURSOR_UPDATE: () => (/* binding */ CURSOR_UPDATE)
/* harmony export */ });
const CURSOR_UPDATE = 'cursorUpdate';

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/CursorDispensing.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/CursorDispensing.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CursorDispensing)
/* harmony export */ });
class CursorDispensing {
  constructor(emitCursorUpdate) {
    this.emitCursorUpdate = emitCursorUpdate;
    this.buffer = {};
  }
  setEmitCursorUpdate(update) {
    this.emitCursorUpdate(update);
  }
  emitFromBatch() {
    for (let connectionId in this.buffer) {
      const buffer = this.buffer[connectionId];
      const update = buffer.shift();
      if (!update) continue;
      setTimeout(() => this.setEmitCursorUpdate(update.cursor), update.offset);
    }
    if (this.bufferHaveData()) {
      this.emitFromBatch();
    }
  }
  bufferHaveData() {
    return Object.entries(this.buffer).map(_ref => {
      let [, v] = _ref;
      return v;
    }).flat().length > 0;
  }
  processBatch(message) {
    const updates = message.data || [];
    updates.forEach(update => {
      const enhancedMsg = {
        cursor: {
          clientId: message.clientId,
          connectionId: message.connectionId,
          position: update.cursor.position,
          data: update.cursor.data
        },
        offset: update.offset
      };
      if (this.buffer[enhancedMsg.cursor.connectionId]) {
        this.buffer[enhancedMsg.cursor.connectionId].push(enhancedMsg);
      } else {
        this.buffer[enhancedMsg.cursor.connectionId] = [enhancedMsg];
      }
    });
    if (this.bufferHaveData()) {
      this.emitFromBatch();
    }
  }
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/CursorHistory.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/CursorHistory.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CursorHistory)
/* harmony export */ });
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
class CursorHistory {
  constructor() {}
  positionsMissing(connections) {
    return Object.keys(connections).some(connectionId => connections[connectionId] === null);
  }
  messageToUpdate(connectionId, clientId, update) {
    return {
      clientId,
      connectionId,
      position: update.position,
      data: update.data
    };
  }
  allCursorUpdates(connections, page) {
    return Object.fromEntries(Object.entries(connections).map(_ref => {
      let [connectionId, cursors] = _ref;
      var _a;
      const lastMessage = page.items.find(item => item.connectionId === connectionId);
      if (!lastMessage) return [connectionId, cursors];
      const {
        data = [],
        clientId
      } = lastMessage;
      const lastPositionSet = (_a = data[data.length - 1]) === null || _a === void 0 ? void 0 : _a.cursor;
      const lastUpdate = lastPositionSet ? {
        clientId,
        connectionId,
        position: lastPositionSet.position,
        data: lastPositionSet.data
      } : null;
      return [connectionId, lastUpdate];
    }));
  }
  getLastCursorUpdate(channel, paginationLimit) {
    return __awaiter(this, void 0, void 0, function* () {
      const members = yield channel.presence.get();
      if (members.length === 0) return {};
      let connections = members.reduce((acc, member) => Object.assign(Object.assign({}, acc), {
        [member.connectionId]: null
      }), {});
      const history = yield channel.history();
      let pageNo = 1;
      let page = yield history.current();
      connections = this.allCursorUpdates(connections, page);
      pageNo++;
      while (pageNo <= paginationLimit && this.positionsMissing(connections) && history.hasNext()) {
        page = yield history.next();
        connections = this.allCursorUpdates(connections, page);
        pageNo++;
      }
      return connections;
    });
  }
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Cursors.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Cursors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Cursors)
/* harmony export */ });
/* harmony import */ var _CursorBatching_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CursorBatching.js */ "./node_modules/@ably/spaces/dist/mjs/CursorBatching.js");
/* harmony import */ var _CursorDispensing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CursorDispensing.js */ "./node_modules/@ably/spaces/dist/mjs/CursorDispensing.js");
/* harmony import */ var _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities/EventEmitter.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/EventEmitter.js");
/* harmony import */ var _CursorHistory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CursorHistory.js */ "./node_modules/@ably/spaces/dist/mjs/CursorHistory.js");
/* harmony import */ var _CursorConstants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CursorConstants.js */ "./node_modules/@ably/spaces/dist/mjs/CursorConstants.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/@ably/spaces/dist/mjs/Errors.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};






const CURSORS_CHANNEL_TAG = '::$cursors';
/**
 * [Live cursors](https://ably.com/docs/spaces/cursors) enable you to track the cursors of members within a {@link Space | space} in realtime.
 *
 * Cursor events are emitted whenever a member moves their mouse within a space. In order to optimize the efficiency and frequency of updates, cursor position events are automatically batched. The batching interval may be customized in order to further optimize for increased performance versus the number of events published.
 *
 * Live cursor updates are not available as part of the {@link Space.subscribe | space state} and must be subscribed to using {@link Cursors.subscribe | `space.cursors.subscribe()`}.
 *
 */
class Cursors extends _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__["default"] {
  /** @internal */
  constructor(space) {
    super();
    this.space = space;
    this.emitterHasListeners = emitter => {
      const flattenEvents = obj => Object.entries(obj).map((_, v) => v).flat();
      return emitter.any.length > 0 || emitter.anyOnce.length > 0 || flattenEvents(emitter.events).length > 0 || flattenEvents(emitter.eventsOnce).length > 0;
    };
    this.options = this.space.options.cursors;
    this.channelName = "".concat(this.space.name).concat(CURSORS_CHANNEL_TAG);
    this.cursorHistory = new _CursorHistory_js__WEBPACK_IMPORTED_MODULE_3__["default"]();
    this.cursorBatching = new _CursorBatching_js__WEBPACK_IMPORTED_MODULE_0__["default"](this.options.outboundBatchInterval);
    const emitCursorUpdate = update => this.emit('update', update);
    this.cursorDispensing = new _CursorDispensing_js__WEBPACK_IMPORTED_MODULE_1__["default"](emitCursorUpdate);
  }
  /**
   * Set the position of a member's cursor and emit an {@link CursorUpdate | `update`} event.
   *
   * A position must contain an X-axis value and a Y-axis value to set the cursor position on a 2D plane. Data may optionally be passed containing additional information such as the color the cursor should be displayed as, or the ID of the element the member is dragging.
   *
   * A member must have been {@link Space.enter | entered} into the space to set their cursor position.
   *
   * @return {void}
   *
   * The following is an example of a member setting their cursor position by adding an event listener to obtain their cursor coordinates and then publishing their position using the `set()` method:
   *
   * ```javascript
   * window.addEventListener('mousemove', ({ clientX, clientY }) => {
   *   space.cursors.set({ position: { x: clientX, y: clientY }, data: { color: 'red' } });
   * });
   * ```
   *
   * @param cursor An object describing the cursor update that should be emitted.
   */
  set(cursor) {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      if (!self) {
        throw (0,_Errors_js__WEBPACK_IMPORTED_MODULE_5__.ERR_NOT_ENTERED_SPACE)();
      }
      const channel = this.getChannel();
      this.cursorBatching.pushCursorPosition(channel, cursor);
    });
  }
  getChannel() {
    var _a;
    return (_a = this.channel) !== null && _a !== void 0 ? _a : this.channel = this.initializeCursorsChannel();
  }
  initializeCursorsChannel() {
    const channel = this.space.client.channels.get(this.channelName);
    channel.presence.subscribe(this.onPresenceUpdate.bind(this));
    channel.presence.enter();
    return channel;
  }
  onPresenceUpdate() {
    return __awaiter(this, void 0, void 0, function* () {
      const channel = this.getChannel();
      const cursorsMembers = yield channel.presence.get();
      this.cursorBatching.setShouldSend(cursorsMembers.length > 1);
      this.cursorBatching.setBatchTime(cursorsMembers.length * this.options.outboundBatchInterval);
    });
  }
  isUnsubscribed() {
    const channel = this.getChannel();
    const subscriptions = channel.subscriptions;
    return !this.emitterHasListeners(subscriptions);
  }
  subscribe(listenerOrEvents, listener) {
    try {
      super.on(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidArgumentError('Cursors.subscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
    if (this.isUnsubscribed()) {
      const channel = this.getChannel();
      channel.subscribe(_CursorConstants_js__WEBPACK_IMPORTED_MODULE_4__.CURSOR_UPDATE, message => {
        this.cursorDispensing.processBatch(message);
      });
    }
  }
  unsubscribe(listenerOrEvents, listener) {
    try {
      super.off(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__.InvalidArgumentError('Cursors.unsubscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_2__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
    const hasListeners = this.emitterHasListeners(this);
    if (!hasListeners) {
      const channel = this.getChannel();
      channel.unsubscribe();
    }
  }
  /**
   *
   * Retrieve the cursor position of the current member in a one-off call.
   *
   * The following is an example of retrieving a member's own cursor position:
   *
   * ```javascript
   * const selfPosition = await space.cursors.getSelf();
   * ```
   */
  getSelf() {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      if (!self) return null;
      const allCursors = yield this.getAll();
      return allCursors[self.connectionId];
    });
  }
  /**
   * Retrieve the cursor position of all members other than the member themselves in a one-off call.
   *
   * The following is an example of retrieving the cursor positions of all members, except the member themselves:
   *
   * ```javascript
   * const otherPositions = await space.cursors.getOthers();
   * ```
   */
  getOthers() {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      if (!self) return {};
      const allCursors = yield this.getAll();
      const allCursorsFiltered = allCursors;
      delete allCursorsFiltered[self.connectionId];
      return allCursorsFiltered;
    });
  }
  /**
   * Retrieve the cursor position of all members in a one-off call. This is useful for retrieving the initial position of members's cursors.
   *
   * The following is an example of retrieving the cursor positions for all members:
   *
   * ```javascript
   * const allCursors = await space.cursors.getAll();
   * ```
   */
  getAll() {
    return __awaiter(this, void 0, void 0, function* () {
      const channel = this.getChannel();
      return yield this.cursorHistory.getLastCursorUpdate(channel, this.options.paginationLimit);
    });
  }
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Errors.js":
/*!******************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Errors.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ERR_LOCK_INVALIDATED: () => (/* binding */ ERR_LOCK_INVALIDATED),
/* harmony export */   ERR_LOCK_IS_LOCKED: () => (/* binding */ ERR_LOCK_IS_LOCKED),
/* harmony export */   ERR_LOCK_REQUEST_EXISTS: () => (/* binding */ ERR_LOCK_REQUEST_EXISTS),
/* harmony export */   ERR_NOT_ENTERED_SPACE: () => (/* binding */ ERR_NOT_ENTERED_SPACE),
/* harmony export */   ERR_SPACE_NAME_MISSING: () => (/* binding */ ERR_SPACE_NAME_MISSING)
/* harmony export */ });
/* harmony import */ var ably__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ably */ "./node_modules/ably/build/ably-commonjs.js");

const ERR_SPACE_NAME_MISSING = () => new ably__WEBPACK_IMPORTED_MODULE_0__.ErrorInfo('must have a non-empty name for the space', 101000, 400);
const ERR_NOT_ENTERED_SPACE = () => new ably__WEBPACK_IMPORTED_MODULE_0__.ErrorInfo('must enter a space to perform this operation', 101001, 400);
const ERR_LOCK_REQUEST_EXISTS = () => new ably__WEBPACK_IMPORTED_MODULE_0__.ErrorInfo('lock request already exists', 101002, 400);
const ERR_LOCK_IS_LOCKED = () => new ably__WEBPACK_IMPORTED_MODULE_0__.ErrorInfo('lock is currently locked', 101003, 400);
const ERR_LOCK_INVALIDATED = () => new ably__WEBPACK_IMPORTED_MODULE_0__.ErrorInfo('lock was invalidated by a concurrent lock request which now holds the lock', 101004, 400);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Leavers.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Leavers.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class Leavers {
  constructor(offlineTimeout) {
    this.offlineTimeout = offlineTimeout;
    this.leavers = [];
  }
  getByConnectionId(connectionId) {
    return this.leavers.find(leaver => leaver.member.connectionId === connectionId);
  }
  getAll() {
    return this.leavers;
  }
  addLeaver(member, timeoutCallback) {
    // remove any existing leaver to prevent old timers from firing
    this.removeLeaver(member.connectionId);
    this.leavers.push({
      member,
      timeoutId: setTimeout(timeoutCallback, this.offlineTimeout)
    });
  }
  removeLeaver(connectionId) {
    const leaverIndex = this.leavers.findIndex(leaver => leaver.member.connectionId === connectionId);
    if (leaverIndex >= 0) {
      clearTimeout(this.leavers[leaverIndex].timeoutId);
      this.leavers.splice(leaverIndex, 1);
    }
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Leavers);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Locations.js":
/*!*********************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Locations.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Locations)
/* harmony export */ });
/* harmony import */ var _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities/EventEmitter.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/EventEmitter.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/@ably/spaces/dist/mjs/Errors.js");
/* harmony import */ var _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SpaceUpdate.js */ "./node_modules/@ably/spaces/dist/mjs/SpaceUpdate.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};



/**
 * [Member locations](https://ably.com/docs/spaces/locations) enable you to track where members are within a {@link Space | space}, to see which part of your application they’re interacting with. A location could be the form field they have selected, the cell they’re currently editing in a spreadsheet, or the slide they’re viewing within a slide deck. Multiple members can be present in the same location.
 *
 * Location events are emitted whenever a member changes their location, such as by clicking on a new cell or slide. This enables UI components to be highlighted with the active member's profile data to visually display their location.
 *
 */
class Locations extends _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
  /** @internal */
  constructor(space, presenceUpdate) {
    super();
    this.space = space;
    this.presenceUpdate = presenceUpdate;
    this.lastLocationUpdate = {};
  }
  /** @internal */
  processPresenceMessage(message) {
    return __awaiter(this, void 0, void 0, function* () {
      // Only an update action is currently a valid location update.
      if (message.action !== 'update') return;
      // Emit updates only if they are different than the last held update.
      if (!message.data.locationUpdate.id || this.lastLocationUpdate[message.connectionId] === message.data.locationUpdate.id) {
        return;
      }
      const update = message.data.locationUpdate;
      const {
        previous
      } = update;
      const member = yield this.space.members.getByConnectionId(message.connectionId);
      if (member) {
        this.emit('update', {
          member,
          currentLocation: member.location,
          previousLocation: previous
        });
        this.lastLocationUpdate[message.connectionId] = message.data.locationUpdate.id;
      }
    });
  }
  /**
   * Set the location of a member an emit an {@link LocationsEvents.UpdateEvent | `update`} event.
   *
   * A `location` can be any JSON-serializable object, such as a slide number or element ID.
   *
   * A member must have been {@link Space.enter | entered} into the space to set their location.
   *
   * The following is an example of a member setting their location to a specific slide number, and element on that slide:
   *
   * ```javascript
   * await space.locations.set({ slide: '3', component: 'slide-title' });
   * ```
   *
   * @param location The member's new location. Can be any JSON-serializable object.
   */
  set(location) {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      if (!self) {
        throw (0,_Errors_js__WEBPACK_IMPORTED_MODULE_1__.ERR_NOT_ENTERED_SPACE)();
      }
      const update = new _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_2__["default"]({
        self,
        extras: this.space.locks.getLockExtras(self.connectionId)
      });
      yield this.presenceUpdate(update.updateLocation(location));
    });
  }
  subscribe(listenerOrEvents, listener) {
    try {
      super.on(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError('Locations.subscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
  unsubscribe(listenerOrEvents, listener) {
    try {
      super.off(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError('Locations.unsubscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
  /**
   * Retrieve the location of the current member in a one-off call.
   *
   * The following is an example of retrieving a member's own location:
   *
   * ```javascript
   * const myLocation = await space.locations.getSelf();
   * ```
   */
  getSelf() {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      return self ? self.location : null;
    });
  }
  /**
   * Retrieve the locations of all members other than the member themselves in a one-off call.
   *
   * The following is an example of retrieving the locations of all members, except the member themselves:
   *
   * ```javascript
   * const otherLocations = await space.locations.getOthers()
   * ```
   */
  getOthers() {
    return __awaiter(this, void 0, void 0, function* () {
      const members = yield this.space.members.getOthers();
      return members.reduce((acc, member) => {
        acc[member.connectionId] = member.location;
        return acc;
      }, {});
    });
  }
  /**
   * Retrieve the location of all members in a one-off call.
   *
   * The following is an example of retrieving the locations of all members:
   *
   * ```javascript
   * const allLocations = await space.locations.getAll();
   * ```
   */
  getAll() {
    return __awaiter(this, void 0, void 0, function* () {
      const members = yield this.space.members.getAll();
      return members.reduce((acc, member) => {
        acc[member.connectionId] = member.location;
        return acc;
      }, {});
    });
  }
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Locks.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Locks.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Locks)
/* harmony export */ });
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/@ably/spaces/dist/mjs/Errors.js");
/* harmony import */ var _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities/EventEmitter.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/EventEmitter.js");
/* harmony import */ var _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SpaceUpdate.js */ "./node_modules/@ably/spaces/dist/mjs/SpaceUpdate.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};



/**
 * [Component locking](https://ably.com/docs/spaces/locking) enables members to optimistically lock stateful UI components before editing them. This reduces the chances of conflicting changes being made to the same component by different members. A component could be a cell in a spreadsheet that a member is updating, or an input field on a form they’re filling in.
 *
 * Once a lock has been acquired by a member, the component that it relates to can be updated in the UI to visually indicate to other members that it is locked and and which member has the lock. The component can then be updated once the editing member has released the lock to indicate that it is now unlocked.
 *
 * Each lock is identified by a unique string ID, and only a single member may hold a lock with a given string at any one time. A lock will exist in one of three {@link LockStatus | states} and may only transition between states in specific circumstances.
 *
 * The following lock state transitions may occur:
 *
 * - None → `pending`: a member calls {@link acquire | `acquire()` } to request a lock.
 * - `pending` → `locked`: the requesting member holds the lock.
 * - `pending` → `unlocked`: the requesting member does not hold the lock, since another member already holds it.
 * - `locked` → `unlocked`: the lock was either explicitly {@link release | released} by the member, or their request was invalidated by a concurrent request which took precedence.
 * - `unlocked` → `locked`: the requesting member reacquired a lock they previously held.
 *
 * Only lock transitions that result in a `locked` or `unlocked` status will emit a lock {@link LocksEventMap.update | update} event.
 *
 * > **Note**
 * >
 * > Optimistic locking means that there is a chance that two members may begin editing the same UI component before it is confirmed which member holds the lock. On average, the time taken to reconcile which member holds a lock is in the hundreds of milliseconds. Your application needs to handle the member that successfully obtained the lock, as well as the member that had their request invalidated.
 *
 */
class Locks extends _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__["default"] {
  /** @internal */
  constructor(space, presenceUpdate) {
    super();
    this.space = space;
    this.presenceUpdate = presenceUpdate;
    this.locks = new Map();
  }
  /**
   * Query whether a lock is currently locked, and if locked, return which member holds the lock. A lock is identifiable by its unique string ID.
   *
   * The following is an example of checking whether a lock identifier is currently locked:
   *
   * ```javascript
   * const isLocked = space.locks.get(id) !== undefined;
   * ```
   * The following is an example of checking which member holds the lock:
   *
   * ```javascript
   * const { member } = space.locks.get(id);
   * ```
   * The following is an example of viewing the attributes assigned to the lock by the member holding it:
   *
   * ```javascript
   * const { request } = space.locks.get(id);
   * const viewLock = request.attributes.get(key);
   * ```
   *
   * If the lock is not currently held by a member, `get()` will return `undefined`.
   *
   * @param id A unique identifier which specifies the lock to query.
   */
  get(id) {
    const locks = this.locks.get(id);
    if (!locks) return;
    for (const lock of locks.values()) {
      if (lock.status === 'locked') {
        // Return a copy instead of a reference to prevent mutations
        return Object.assign({}, lock);
      }
    }
  }
  // This will be async in the future, when pending requests are no longer processed
  // in the library.
  /**
   * Retrieve all locks that are currently held in a one-off call. This is a local call that retrieves the latest locks retained in memory by the SDK.
   *
   * The following is an example of retrieving an array of all currently held locks:
   *
   * ```javascript
   * const allLocks = await space.locks.getAll();
   * ```
   */
  getAll() {
    return __awaiter(this, void 0, void 0, function* () {
      const allLocks = [];
      for (const locks of this.locks.values()) {
        for (const lock of locks.values()) {
          if (lock.status === 'locked') {
            // Return a copy instead of a reference to prevent mutations
            allLocks.push(Object.assign({}, lock));
          }
        }
      }
      return allLocks;
    });
  }
  /**
   * Retrieve all locks that are currently held by the current member in a one-off call. This is a local call that retrieves the latest locks retained in memory by the SDK.
   *
   * The following is an example of retrieving all locks held by the member:
   *
   * ```javascript
   * const locks = await space.locks.getSelf();
   * ```
   */
  getSelf() {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      if (!self) return [];
      return this.getLocksForConnectionId(self.connectionId).filter(lock => lock.status === 'locked');
    });
  }
  /**
   * Retrieve all locks that are currently held by members except the member itself, in a one-off call. This is a local call that retrieves the latest locks retained in memory by the SDK.
   *
   * The following is an example of retrieving all locks held by other members:
   *
   * ```javascript
   * const locks = await space.locks.getOthers();
   * ```
   */
  getOthers() {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      const allLocks = yield this.getAll();
      if (!self) return allLocks;
      return allLocks.filter(lock => lock.member.connectionId !== self.connectionId);
    });
  }
  /**
   * Attempt to acquire a lock with a given unique ID. Additional `attributes` may be passed when trying to acquire a lock that can contain a set of arbitrary key-value pairs. An example of using `attributes` is to store the component ID the lock relates to so that it can be easily updated in the UI with a visual indication of its lock status.
   *
   * A member must have been {@link Space.enter | entered } into the space to acquire a lock.
   *
   * The following is an example of attempting to acquire a lock:
   *
   * ```javascript
   * const acquireLock = await space.locks.acquire(id);
   * ```
   *
   * The following is an example of passing a set of `attributes` when trying to acquire a lock:
   *
   * ```javascript
   * const lockAttributes = { 'component': 'cell-d3' };
   * const acquireLock = await space.locks.acquire(id, { lockAttributes });
   * ```
   *
   * Once a member requests a lock by calling `acquire()`, the lock is temporarily in the {@link LockStatuses.Pending | pending state }. An event will be emitted based on whether the lock request was successful (a status of {@link LockStatuses.Locked | `locked`}), or invalidated (a status of {@link LockStatuses.Unlocked | `unlocked`}).
   *
   * An error will be thrown if a lock request with a status of {@link LockStatuses.Pending | `pending`} or {@link LockStatuses.Locked | `locked`} already exists, returning a rejected promise.
   *
   * @param id A unique identifier which specifies the lock to acquire.
   * @param opts An object whose {@link LockOptions.attributes | `attributes`} property specifies additional metadata to associate with the lock.
   */
  acquire(id, opts) {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      if (!self) {
        throw (0,_Errors_js__WEBPACK_IMPORTED_MODULE_0__.ERR_NOT_ENTERED_SPACE)();
      }
      // check there isn't an existing PENDING or LOCKED request for the current
      // member, since we do not support nested locks
      let lock = this.getLock(id, self.connectionId);
      if (lock && lock.status !== 'unlocked') {
        throw (0,_Errors_js__WEBPACK_IMPORTED_MODULE_0__.ERR_LOCK_REQUEST_EXISTS)();
      }
      // initialise a new PENDING request
      lock = {
        id,
        status: 'pending',
        timestamp: Date.now(),
        member: self
      };
      if (opts) {
        lock.attributes = opts.attributes;
      }
      this.setLock(lock);
      // reflect the change in the member's presence data
      yield this.updatePresence(self);
      return lock;
    });
  }
  /**
   * Release a lock once a member has finished editing the related component. For example, call `release()` once a user clicks outside of the component, such as clicking on another cell within a spreadsheet. Any UI indications that the previous cell was locked can then be cleared.
   *
   * The following is an example of releasing a lock:
   *
   * ```javascript
   * await space.locks.release(id);
   * ```
   * Releasing a lock will emit a lock event with an {@link LockStatuses.Unlocked | `unlocked `} status.
   *
   * > **Note**
   * >
   * > When a member is {@link MembersEventMap.remove | removed } from a space, their locks are automatically released.
   *
   * @param id A unique identifier which specifies the lock to release.
   */
  release(id) {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.space.members.getSelf();
      if (!self) {
        throw (0,_Errors_js__WEBPACK_IMPORTED_MODULE_0__.ERR_NOT_ENTERED_SPACE)();
      }
      const lock = this.getLock(id, self.connectionId);
      if (!lock) return;
      this.setLock(Object.assign(Object.assign({}, lock), {
        status: 'unlocked',
        reason: undefined
      }));
      // Send presence update with the updated lock, but delete afterwards so when the
      // message is processed an update event is fired
      this.updatePresence(self);
      this.deleteLock(id, self.connectionId);
    });
  }
  subscribe(listenerOrEvents, listener) {
    try {
      super.on(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError('Locks.subscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
  unsubscribe(listenerOrEvents, listener) {
    try {
      super.off(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError('Locks.unsubscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
  /** @internal */
  processPresenceMessage(message) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
      const member = yield this.space.members.getByConnectionId(message.connectionId);
      if (!member) return;
      if (message.action === 'leave' || !Array.isArray((_a = message === null || message === void 0 ? void 0 : message.extras) === null || _a === void 0 ? void 0 : _a.locks)) {
        // the member has left, or they have no locks in presence, so release any
        // existing locks for that member
        for (const locks of this.locks.values()) {
          const lock = locks.get(member.connectionId);
          if (lock) {
            const updatedLock = Object.assign(Object.assign({}, lock), {
              status: 'unlocked',
              reason: undefined
            });
            this.setLock(updatedLock);
            this.emit('update', updatedLock);
            locks.delete(member.connectionId);
          }
        }
        return;
      }
      message.extras.locks.forEach(lock => {
        const existing = this.getLock(lock.id, member.connectionId);
        // special-case the handling of PENDING requests, which will eventually
        // be done by the Ably system, at which point this can be removed
        if (lock.status === 'pending' && (!existing || existing.status === 'pending')) {
          this.processPending(member, lock);
        }
        if (!existing || existing.status !== lock.status) {
          this.emit('update', Object.assign(Object.assign({}, lock), {
            member
          }));
        }
        // TODO this lock that comes from the PresenceMessage has no type checking
        this.setLock(Object.assign(Object.assign({}, lock), {
          member
        }));
      });
      // handle locks which have been unlocked and longer need to be held locally
      for (const locks of this.locks.values()) {
        for (const lock of locks.values()) {
          if (lock.status === 'unlocked') {
            this.deleteLock(lock.id, lock.member.connectionId);
          }
        }
      }
    });
  }
  // process a PENDING lock request by determining whether it should be
  // considered LOCKED or UNLOCKED with a reason, potentially invalidating
  // existing LOCKED requests.
  //
  // TODO: remove this once the Ably system processes PENDING requests
  //       internally using this same logic.
  processPending(member, pendingLock) {
    // if the requested lock ID is not currently locked, then mark the PENDING
    // lock request as LOCKED
    const lock = this.get(pendingLock.id);
    if (!lock) {
      pendingLock.status = 'locked';
      return;
    }
    // check if the PENDING lock should invalidate the existing LOCKED request.
    //
    // This is necessary because presence data is eventually consistent, so
    // there's no guarantee that all members see presence messages in the same
    // order, which could lead to members not agreeing which members hold which
    // locks.
    //
    // For example, if two members both request the same lock at roughly the
    // same time, and both members see their own request in presence before
    // seeing the other's request, then they will each consider themselves to
    // hold the lock.
    //
    // To minimise the impact of this propagation issue, a further check is
    // made allowing a PENDING request to invalidate an existing LOCKED request
    // if the PENDING request has a timestamp which predates the LOCKED
    // request, or, if the timestamps are the same, if the PENDING request has
    // a connectionId which sorts lexicographically before the connectionId of
    // the LOCKED request.
    if (pendingLock.timestamp < lock.timestamp || pendingLock.timestamp == lock.timestamp && member.connectionId < lock.member.connectionId) {
      pendingLock.status = 'locked';
      const updatedLock = Object.assign(Object.assign({}, lock), {
        status: 'unlocked',
        reason: (0,_Errors_js__WEBPACK_IMPORTED_MODULE_0__.ERR_LOCK_INVALIDATED)()
      });
      this.setLock(updatedLock);
      this.emit('update', updatedLock);
      return;
    }
    // the lock is LOCKED and the PENDING request did not invalidate it, so
    // mark the PENDING request as UNLOCKED with a reason.
    pendingLock.status = 'unlocked';
    pendingLock.reason = (0,_Errors_js__WEBPACK_IMPORTED_MODULE_0__.ERR_LOCK_IS_LOCKED)();
  }
  updatePresence(self) {
    const update = new _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_2__["default"]({
      self,
      extras: this.getLockExtras(self.connectionId)
    });
    return this.presenceUpdate(update.noop());
  }
  /** @internal */
  getLock(id, connectionId) {
    const locks = this.locks.get(id);
    if (!locks) return;
    return locks.get(connectionId);
  }
  setLock(lock) {
    let locks = this.locks.get(lock.id);
    if (!locks) {
      locks = new Map();
      this.locks.set(lock.id, locks);
    }
    locks.set(lock.member.connectionId, lock);
  }
  deleteLock(id, connectionId) {
    const locks = this.locks.get(id);
    if (!locks) return;
    return locks.delete(connectionId);
  }
  getLocksForConnectionId(connectionId) {
    const requests = [];
    for (const locks of this.locks.values()) {
      const lock = locks.get(connectionId);
      if (lock) {
        requests.push(Object.assign({}, lock));
      }
    }
    return requests;
  }
  /** @internal */
  getLockExtras(connectionId) {
    const locks = this.getLocksForConnectionId(connectionId);
    if (locks.length === 0) return;
    return {
      locks
    };
  }
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Members.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Members.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities/EventEmitter.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/EventEmitter.js");
/* harmony import */ var _Leavers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Leavers.js */ "./node_modules/@ably/spaces/dist/mjs/Leavers.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};


/**
 * [Avatar stacks](https://ably.com/docs/spaces/avatar) are the most common way of showing the online status of members in an application by displaying an avatar for each member. {@link MembersEventMap | Events} are emitted whenever a member enters or leaves a space, or updates their profile data. Additional information can also be provided, such as a profile picture and email address.
 *
 */
class Members extends _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__["default"] {
  /** @internal */
  constructor(space) {
    super();
    this.space = space;
    this.lastMemberUpdate = {};
    this.leavers = new _Leavers_js__WEBPACK_IMPORTED_MODULE_1__["default"](this.space.options.offlineTimeout);
  }
  /** @internal */
  processPresenceMessage(message) {
    return __awaiter(this, void 0, void 0, function* () {
      const {
        action,
        connectionId
      } = message;
      const isLeaver = !!this.leavers.getByConnectionId(connectionId);
      const member = this.createMember(message);
      if (action === 'leave') {
        this.leavers.addLeaver(member, () => this.onMemberOffline(member));
        this.emit('leave', member);
        this.emit('update', member);
      } else if (isLeaver) {
        this.leavers.removeLeaver(connectionId);
      }
      if (action === 'enter') {
        this.emit('enter', member);
        this.emit('update', member);
      }
      // Emit profileData updates only if they are different then the last held update.
      // A locationUpdate is handled in Locations.
      if (message.data.profileUpdate.id && this.lastMemberUpdate[connectionId] !== message.data.profileUpdate.id) {
        this.lastMemberUpdate[message.connectionId] = message.data.profileUpdate.id;
        this.emit('updateProfile', member);
        this.emit('update', member);
      }
    });
  }
  /**
   * Retrieve the current member's own member object in a one-off call.
   *
   * The following is an example of retrieving a member's own member object:
   *
   * ```javascript
   * const myMemberInfo = await space.members.getSelf();
   * ```
   */
  getSelf() {
    return __awaiter(this, void 0, void 0, function* () {
      return this.space.connectionId ? yield this.getByConnectionId(this.space.connectionId) : null;
    });
  }
  /**
   * Retrieve the member objects of all members within the space in a one-off call.
   *
   * The following is an example of retrieving all members:
   *
   * ```javascript
   * const allMembers = await space.members.getAll();
   * ```
   */
  getAll() {
    return __awaiter(this, void 0, void 0, function* () {
      const presenceMembers = yield this.space.channel.presence.get();
      const members = presenceMembers.map(m => this.createMember(m));
      return members.concat(this.leavers.getAll().map(l => l.member));
    });
  }
  /**
   * Retrieve the member objects of all members within the space other than the member themselves, in a one-off call.
   *
   * The following is an example of retrieving all members other than the member themselves:
   *
   * ```javascript
   * const othersMemberInfo = await space.members.getOthers();
   * ```
   */
  getOthers() {
    return __awaiter(this, void 0, void 0, function* () {
      const members = yield this.getAll();
      return members.filter(m => m.connectionId !== this.space.connectionId);
    });
  }
  subscribe(listenerOrEvents, listener) {
    try {
      super.on(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError('Members.subscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
  unsubscribe(listenerOrEvents, listener) {
    try {
      super.off(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.InvalidArgumentError('Members.unsubscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_0__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
  /** @internal */
  getByConnectionId(connectionId) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
      const members = yield this.getAll();
      return (_a = members.find(m => m.connectionId === connectionId)) !== null && _a !== void 0 ? _a : null;
    });
  }
  createMember(message) {
    return {
      clientId: message.clientId,
      connectionId: message.connectionId,
      isConnected: message.action !== 'leave',
      profileData: message.data.profileUpdate.current,
      location: message.data.locationUpdate.current,
      lastEvent: {
        name: message.action,
        timestamp: message.timestamp
      }
    };
  }
  onMemberOffline(member) {
    return __awaiter(this, void 0, void 0, function* () {
      this.leavers.removeLeaver(member.connectionId);
      this.emit('remove', member);
      this.emit('update', member);
      if (member.location) {
        this.space.locations.emit('update', {
          previousLocation: member.location,
          currentLocation: null,
          member: Object.assign(Object.assign({}, member), {
            location: null
          })
        });
      }
      this.space.emit('update', {
        members: yield this.getAll()
      });
    });
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Members);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Space.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Space.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ably__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ably */ "./node_modules/ably/build/ably-commonjs.js");
/* harmony import */ var _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities/EventEmitter.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/EventEmitter.js");
/* harmony import */ var _Locations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Locations.js */ "./node_modules/@ably/spaces/dist/mjs/Locations.js");
/* harmony import */ var _Cursors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Cursors.js */ "./node_modules/@ably/spaces/dist/mjs/Cursors.js");
/* harmony import */ var _Members_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Members.js */ "./node_modules/@ably/spaces/dist/mjs/Members.js");
/* harmony import */ var _Locks_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Locks.js */ "./node_modules/@ably/spaces/dist/mjs/Locks.js");
/* harmony import */ var _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SpaceUpdate.js */ "./node_modules/@ably/spaces/dist/mjs/SpaceUpdate.js");
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/@ably/spaces/dist/mjs/Errors.js");
/* harmony import */ var _utilities_is_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities/is.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/is.js");
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./version.js */ "./node_modules/@ably/spaces/dist/mjs/version.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};










const SPACE_CHANNEL_TAG = '::$space';
const SPACE_OPTIONS_DEFAULTS = {
  offlineTimeout: 120000,
  cursors: {
    outboundBatchInterval: 25,
    paginationLimit: 5
  }
};
/**
 * A [space](https://ably.com/docs/spaces/space) is a virtual area of your application in which realtime collaboration between users can take place. You can have any number of virtual spaces within an application, with a single space being anything from a web page, a sheet within a spreadsheet, an individual slide in a slideshow, or the entire slideshow itself.
 *
 * The following features can be implemented within a space:
 *
 * - Avatar stack, via the {@link members | `members`} property
 * - Member location, via the {@link locations | `locations`} property
 * - Live cursors, via the {@link cursors | `cursors`} property
 * - Component locking, via the {@link locks | `locks`} property
 *
 * A `Space` instance consists of a state object that represents the realtime status of all members in a given virtual space. This includes a list of which members are currently online or have recently left and each member’s location within the application. The position of members’ cursors are excluded from the space state due to their high frequency of updates. In the beta release, which UI components members have locked are also excluded from the space state.
 *
 */
class Space extends _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__["default"] {
  /** @internal */
  constructor(name, client, options) {
    super();
    this.presenceUpdate = _ref => {
      let {
        data,
        extras
      } = _ref;
      if (!extras) {
        return this.channel.presence.update(data);
      }
      return this.channel.presence.update(ably__WEBPACK_IMPORTED_MODULE_0__.Realtime.PresenceMessage.fromValues({
        data,
        extras
      }));
    };
    this.presenceEnter = _ref2 => {
      let {
        data,
        extras
      } = _ref2;
      if (!extras) {
        return this.channel.presence.enter(data);
      }
      return this.channel.presence.enter(ably__WEBPACK_IMPORTED_MODULE_0__.Realtime.PresenceMessage.fromValues({
        data,
        extras
      }));
    };
    this.presenceLeave = _ref3 => {
      let {
        data,
        extras
      } = _ref3;
      if (!extras) {
        return this.channel.presence.leave(data);
      }
      return this.channel.presence.leave(ably__WEBPACK_IMPORTED_MODULE_0__.Realtime.PresenceMessage.fromValues({
        data,
        extras
      }));
    };
    this.client = client;
    this.options = this.setOptions(options);
    this.connectionId = this.client.connection.id;
    this.name = name;
    this.channelName = "".concat(name).concat(SPACE_CHANNEL_TAG);
    this.channel = this.client.channels.get(this.channelName, {
      params: {
        agent: "spaces/".concat(_version_js__WEBPACK_IMPORTED_MODULE_9__.VERSION)
      }
    });
    this.onPresenceUpdate = this.onPresenceUpdate.bind(this);
    this.channel.presence.subscribe(this.onPresenceUpdate);
    this.locations = new _Locations_js__WEBPACK_IMPORTED_MODULE_2__["default"](this, this.presenceUpdate);
    this.cursors = new _Cursors_js__WEBPACK_IMPORTED_MODULE_3__["default"](this);
    this.members = new _Members_js__WEBPACK_IMPORTED_MODULE_4__["default"](this);
    this.locks = new _Locks_js__WEBPACK_IMPORTED_MODULE_5__["default"](this, this.presenceUpdate);
  }
  setOptions(options) {
    var _a, _b, _c, _d, _e;
    const {
      offlineTimeout,
      cursors: {
        outboundBatchInterval,
        paginationLimit
      }
    } = SPACE_OPTIONS_DEFAULTS;
    return {
      offlineTimeout: (_a = options === null || options === void 0 ? void 0 : options.offlineTimeout) !== null && _a !== void 0 ? _a : offlineTimeout,
      cursors: {
        outboundBatchInterval: (_c = (_b = options === null || options === void 0 ? void 0 : options.cursors) === null || _b === void 0 ? void 0 : _b.outboundBatchInterval) !== null && _c !== void 0 ? _c : outboundBatchInterval,
        paginationLimit: (_e = (_d = options === null || options === void 0 ? void 0 : options.cursors) === null || _d === void 0 ? void 0 : _d.paginationLimit) !== null && _e !== void 0 ? _e : paginationLimit
      }
    };
  }
  onPresenceUpdate(message) {
    return __awaiter(this, void 0, void 0, function* () {
      yield this.members.processPresenceMessage(message);
      yield this.locations.processPresenceMessage(message);
      yield this.locks.processPresenceMessage(message);
      this.emit('update', {
        members: yield this.members.getAll()
      });
    });
  }
  /**
   * Enter a space to register a client as a member and emit an {@link MembersEventMap.enter | `enter`} event to all subscribers.
   *
   * `profileData` can optionally be passed when entering a space. This data can be any arbitrary JSON-serializable object which will be attached to the {@link SpaceMember | member object}.
   *
   * Being entered into a space is required for members to:
   *
   * - {@link updateProfileData | Update their profile data.}
   * - {@link Locations.set | Set their location.}
   * - {@link Cursors.set | Set their cursor position.}
   *
   * The following is an example of entering a space and setting profile data:
   *
   * ```javascript
   * await space.enter({
   *   username: 'Claire Oranges',
   *   avatar: 'https://slides-internal.com/users/coranges.png',
   * });
   * ```
   *
   * @param profileData The data to associate with a member, such as a preferred username or profile picture.
   */
  enter() {
    let profileData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    return __awaiter(this, void 0, void 0, function* () {
      return new Promise(resolve => {
        const presence = this.channel.presence;
        const presenceListener = presenceMessage => __awaiter(this, void 0, void 0, function* () {
          if (!(presenceMessage.clientId == this.client.auth.clientId && presenceMessage.connectionId == this.client.connection.id)) {
            return;
          }
          presence.unsubscribe(presenceListener);
          const presenceMessages = yield presence.get();
          presenceMessages.forEach(msg => this.locks.processPresenceMessage(msg));
          const members = yield this.members.getAll();
          resolve(members);
        });
        presence.subscribe(['enter', 'present'], presenceListener);
        const update = new _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_6__["default"]({
          self: null,
          extras: null
        });
        this.presenceEnter(update.updateProfileData(profileData));
      });
    });
  }
  updateProfileData(profileDataOrUpdateFn) {
    return __awaiter(this, void 0, void 0, function* () {
      const self = yield this.members.getSelf();
      if (!(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_8__.isObject)(profileDataOrUpdateFn) && !(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_8__.isFunction)(profileDataOrUpdateFn)) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError('Space.updateProfileData(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.inspect)([profileDataOrUpdateFn]));
      }
      let update = new _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_6__["default"]({
        self,
        extras: self ? this.locks.getLockExtras(self.connectionId) : null
      });
      if (!self) {
        const data = update.updateProfileData((0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_8__.isFunction)(profileDataOrUpdateFn) ? profileDataOrUpdateFn(null) : profileDataOrUpdateFn);
        yield this.presenceEnter(data);
        return;
      } else {
        const data = update.updateProfileData((0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_8__.isFunction)(profileDataOrUpdateFn) ? profileDataOrUpdateFn(self.profileData) : profileDataOrUpdateFn);
        return this.presenceUpdate(data);
      }
    });
  }
  /**
   * Leave a space and emit a {@link MembersEventMap.leave | `leave`} event to all subscribers. `profileData` can optionally be updated when leaving the space.
   *
   * The member may not immediately be removed from the space, depending on the {@link SpaceOptions.offlineTimeout | offlineTimeout} configured.
   *
   * Members will implicitly leave a space after 15 seconds if they abruptly disconnect. If experiencing network disruption, and they reconnect within 15 seconds, then they will remain part of the space and no `leave` event will be emitted.
   *
   * @param profileData The updated profile data to associate with a member.
   */
  leave() {
    let profileData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    return __awaiter(this, arguments, void 0, function* () {
      const self = yield this.members.getSelf();
      if (!self) {
        throw (0,_Errors_js__WEBPACK_IMPORTED_MODULE_7__.ERR_NOT_ENTERED_SPACE)();
      }
      const update = new _SpaceUpdate_js__WEBPACK_IMPORTED_MODULE_6__["default"]({
        self,
        extras: this.locks.getLockExtras(self.connectionId)
      });
      let data;
      // Use arguments so it's possible to deliberately nullify profileData on leave
      if (arguments.length > 0) {
        data = update.updateProfileData(profileData);
      } else {
        data = update.noop();
      }
      yield this.presenceLeave(data);
    });
  }
  /**
   * Retrieve the current state of a space in a one-off call. Returns an array of all `member` objects currently in the space. This is a local call and retrieves the membership of the space retained in memory by the SDK.
   *
   * The following is an example of retrieving space state:
   *
   * ```javascript
   * const spaceState = await space.getState();
   * ```
   */
  getState() {
    return __awaiter(this, void 0, void 0, function* () {
      const members = yield this.members.getAll();
      return {
        members
      };
    });
  }
  subscribe(listenerOrEvents, listener) {
    try {
      super.on(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError('Space.subscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
  unsubscribe(listenerOrEvents, listener) {
    try {
      super.off(listenerOrEvents, listener);
    } catch (e) {
      if (e instanceof _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError) {
        throw new _utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.InvalidArgumentError('Space.unsubscribe(): Invalid arguments: ' + (0,_utilities_EventEmitter_js__WEBPACK_IMPORTED_MODULE_1__.inspect)([listenerOrEvents, listener]));
      } else {
        throw e;
      }
    }
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Space);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/SpaceUpdate.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/SpaceUpdate.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid */ "./node_modules/@ably/spaces/node_modules/nanoid/index.browser.js");

class SpaceUpdate {
  constructor(_ref) {
    let {
      self,
      extras
    } = _ref;
    this.self = self;
    this.extras = extras;
  }
  profileUpdate(id, current) {
    return {
      id,
      current
    };
  }
  profileNoChange() {
    return this.profileUpdate(null, this.self ? this.self.profileData : null);
  }
  locationUpdate(id, current, previous) {
    return {
      id,
      current,
      previous
    };
  }
  locationNoChange() {
    const location = this.self ? this.self.location : null;
    return this.locationUpdate(null, location, null);
  }
  updateProfileData(current) {
    return {
      data: {
        profileUpdate: this.profileUpdate((0,nanoid__WEBPACK_IMPORTED_MODULE_0__.nanoid)(), current),
        locationUpdate: this.locationNoChange()
      },
      extras: this.extras
    };
  }
  updateLocation(location, previousLocation) {
    var _a;
    return {
      data: {
        profileUpdate: this.profileNoChange(),
        locationUpdate: this.locationUpdate((0,nanoid__WEBPACK_IMPORTED_MODULE_0__.nanoid)(), location, previousLocation ? previousLocation : (_a = this.self) === null || _a === void 0 ? void 0 : _a.location)
      },
      extras: this.extras
    };
  }
  noop() {
    return {
      data: {
        profileUpdate: this.profileNoChange(),
        locationUpdate: this.locationNoChange()
      },
      extras: this.extras
    };
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SpaceUpdate);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/Spaces.js":
/*!******************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/Spaces.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Errors.js */ "./node_modules/@ably/spaces/dist/mjs/Errors.js");
/* harmony import */ var _Space_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Space.js */ "./node_modules/@ably/spaces/dist/mjs/Space.js");
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./version.js */ "./node_modules/@ably/spaces/dist/mjs/version.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};



/**
 * The `Spaces` class is the entry point to the Spaces SDK. Use its {@link get | `get()`} method to access an individual {@link Space | `Space`}.
 *
 * To create an instance of `Spaces`, you first need to create an instance of an [Ably realtime client](https://ably.com/docs/getting-started/setup). You then pass this instance to the {@link constructor | Spaces constructor}.
 */
class Spaces {
  /**
   * Create a new instance of the Spaces SDK by passing an instance of the [Ably promise-based realtime client](https://ably.com/docs/getting-started/setup). A [`clientId`](https://ably.com/docs/auth/identified-clients) is required.
   *
   * An Ably API key is needed to authenticate. [Basic authentication](https://ably.com/docs/auth/basic) may be used for convenience, however Ably strongly recommends you use [token authentication](https://ably.com/docs/auth/token) in a production environment.
   *
   * @param client An instance of the Ably prmise-based realtime client.
   */
  constructor(client) {
    this.spaces = {};
    /**
     * Version of the Spaces library.
     */
    this.version = _version_js__WEBPACK_IMPORTED_MODULE_2__.VERSION;
    this.client = client;
    this.connection = client.connection;
    this.addAgent(this.client['options']);
    this.client.time();
  }
  addAgent(options) {
    var _a;
    const agent = {
      spaces: this.version
    };
    options.agents = Object.assign(Object.assign({}, (_a = options.agents) !== null && _a !== void 0 ? _a : options.agents), agent);
  }
  /**
   *
   * Create or retrieve an existing [space](https://ably.com/docs/spaces/space) from the `Spaces` collection. A space is uniquely identified by its unicode string name.
   *
   * The following is an example of creating a space:
   *
   * ```javascript
   * const space = await spaces.get('board-presentation');
   * ```
   *
   * A set of {@link SpaceOptions | options} may be passed when creating a space to customize a space.
   *
   * The following is an example of setting custom `SpaceOptions`:
   *
   * ```javascript
   * const space = await spaces.get('board-presentation', {
   * 	offlineTimeout: 180_000,
   * 	cursors: { paginationLimit: 10 }
   * });
   * ```
   *
   * @param name The name of the space to create or retrieve.
   * @param options Additional options to customize the behavior of the space.
   */
  get(name, options) {
    return __awaiter(this, void 0, void 0, function* () {
      if (typeof name !== 'string' || name.length === 0) {
        throw (0,_Errors_js__WEBPACK_IMPORTED_MODULE_0__.ERR_SPACE_NAME_MISSING)();
      }
      if (this.connection.state !== 'connected') {
        yield this.connection.once('connected');
      }
      if (this.spaces[name]) return this.spaces[name];
      const space = new _Space_js__WEBPACK_IMPORTED_MODULE_1__["default"](name, this.client, options);
      this.spaces[name] = space;
      return space;
    });
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Spaces);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Spaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Spaces.js */ "./node_modules/@ably/spaces/dist/mjs/Spaces.js");

// Can be changed to * when we update to TS5
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_Spaces_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpaceContext.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/contexts/SpaceContext.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SpaceContext: () => (/* binding */ SpaceContext),
/* harmony export */   SpaceProvider: () => (/* binding */ SpaceProvider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _useSpaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../useSpaces.js */ "./node_modules/@ably/spaces/dist/mjs/react/useSpaces.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};


const SpaceContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(undefined);
const SpaceProvider = _ref => {
  let {
    name,
    options,
    children
  } = _ref;
  const [space, setSpace] = react__WEBPACK_IMPORTED_MODULE_0__.useState(undefined);
  const spaces = (0,_useSpaces_js__WEBPACK_IMPORTED_MODULE_1__.useSpaces)();
  const optionsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(options);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    optionsRef.current = options;
  }, [options]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    let ignore = false;
    const init = () => __awaiter(void 0, void 0, void 0, function* () {
      if (!spaces) {
        throw new Error('Could not find spaces client in context. ' + 'Make sure your spaces hooks are called inside an <SpacesProvider>');
      }
      const spaceInstance = yield spaces.get(name, optionsRef.current);
      if (spaceInstance && !space && !ignore) {
        setSpace(spaceInstance);
      }
    });
    init();
    return () => {
      ignore = true;
    };
  }, [name, spaces]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(SpaceContext.Provider, {
    value: space
  }, children);
};

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpacesContext.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/contexts/SpacesContext.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SpacesContext: () => (/* binding */ SpacesContext),
/* harmony export */   SpacesProvider: () => (/* binding */ SpacesProvider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");

const SpacesContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(undefined);
const SpacesProvider = _ref => {
  let {
    client: spaces,
    children
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(SpacesContext.Provider, {
    value: spaces
  }, children);
};

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SpaceProvider: () => (/* reexport safe */ _contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__.SpaceProvider),
/* harmony export */   SpacesProvider: () => (/* reexport safe */ _contexts_SpacesContext_js__WEBPACK_IMPORTED_MODULE_0__.SpacesProvider),
/* harmony export */   useCursors: () => (/* reexport safe */ _useCursors_js__WEBPACK_IMPORTED_MODULE_8__.useCursors),
/* harmony export */   useLocations: () => (/* reexport safe */ _useLocations_js__WEBPACK_IMPORTED_MODULE_5__.useLocations),
/* harmony export */   useLock: () => (/* reexport safe */ _useLock_js__WEBPACK_IMPORTED_MODULE_7__.useLock),
/* harmony export */   useLocks: () => (/* reexport safe */ _useLocks_js__WEBPACK_IMPORTED_MODULE_6__.useLocks),
/* harmony export */   useMembers: () => (/* reexport safe */ _useMembers_js__WEBPACK_IMPORTED_MODULE_4__.useMembers),
/* harmony export */   useSpace: () => (/* reexport safe */ _useSpace_js__WEBPACK_IMPORTED_MODULE_3__.useSpace),
/* harmony export */   useSpaces: () => (/* reexport safe */ _useSpaces_js__WEBPACK_IMPORTED_MODULE_2__.useSpaces)
/* harmony export */ });
/* harmony import */ var _contexts_SpacesContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contexts/SpacesContext.js */ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpacesContext.js");
/* harmony import */ var _contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contexts/SpaceContext.js */ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpaceContext.js");
/* harmony import */ var _useSpaces_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useSpaces.js */ "./node_modules/@ably/spaces/dist/mjs/react/useSpaces.js");
/* harmony import */ var _useSpace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useSpace.js */ "./node_modules/@ably/spaces/dist/mjs/react/useSpace.js");
/* harmony import */ var _useMembers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useMembers.js */ "./node_modules/@ably/spaces/dist/mjs/react/useMembers.js");
/* harmony import */ var _useLocations_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./useLocations.js */ "./node_modules/@ably/spaces/dist/mjs/react/useLocations.js");
/* harmony import */ var _useLocks_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./useLocks.js */ "./node_modules/@ably/spaces/dist/mjs/react/useLocks.js");
/* harmony import */ var _useLock_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useLock.js */ "./node_modules/@ably/spaces/dist/mjs/react/useLock.js");
/* harmony import */ var _useCursors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./useCursors.js */ "./node_modules/@ably/spaces/dist/mjs/react/useCursors.js");










/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useChannelState.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useChannelState.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useChannelState: () => (/* binding */ useChannelState)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _useEventListener_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useEventListener.js */ "./node_modules/@ably/spaces/dist/mjs/react/useEventListener.js");


const failedStateEvents = ['suspended', 'failed', 'detached'];
const successStateEvents = ['attached'];
/**
 * todo use `ably/react` hooks instead
 */
const useChannelState = emitter => {
  const [channelError, setChannelError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  (0,_useEventListener_js__WEBPACK_IMPORTED_MODULE_1__.useEventListener)(emitter, stateChange => {
    if (stateChange.reason) {
      setChannelError(stateChange.reason);
    }
  }, failedStateEvents);
  (0,_useEventListener_js__WEBPACK_IMPORTED_MODULE_1__.useEventListener)(emitter, () => {
    setChannelError(null);
  }, successStateEvents);
  return channelError;
};

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useConnectionState.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useConnectionState.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useConnectionState: () => (/* binding */ useConnectionState)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _useEventListener_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useEventListener.js */ "./node_modules/@ably/spaces/dist/mjs/react/useEventListener.js");


const failedStateEvents = ['suspended', 'failed', 'disconnected'];
const successStateEvents = ['connected', 'closed'];
const useConnectionState = emitter => {
  const [connectionError, setConnectionError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  (0,_useEventListener_js__WEBPACK_IMPORTED_MODULE_1__.useEventListener)(emitter, stateChange => {
    if (stateChange.reason) {
      setConnectionError(stateChange.reason);
    }
  }, failedStateEvents);
  (0,_useEventListener_js__WEBPACK_IMPORTED_MODULE_1__.useEventListener)(emitter, () => {
    setConnectionError(null);
  }, successStateEvents);
  return connectionError;
};

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useCursors.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useCursors.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCursors: () => (/* binding */ useCursors)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contexts/SpaceContext.js */ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpaceContext.js");
/* harmony import */ var _useMembers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useMembers.js */ "./node_modules/@ably/spaces/dist/mjs/react/useMembers.js");
/* harmony import */ var _useChannelState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useChannelState.js */ "./node_modules/@ably/spaces/dist/mjs/react/useChannelState.js");
/* harmony import */ var _useConnectionState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useConnectionState.js */ "./node_modules/@ably/spaces/dist/mjs/react/useConnectionState.js");
/* harmony import */ var _utilities_is_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utilities/is.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/is.js");






function useCursors(callbackOrOptions, optionsOrNothing) {
  const space = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__.SpaceContext);
  const [cursors, setCursors] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const {
    members
  } = (0,_useMembers_js__WEBPACK_IMPORTED_MODULE_2__.useMembers)();
  const channelError = (0,_useChannelState_js__WEBPACK_IMPORTED_MODULE_3__.useChannelState)(space === null || space === void 0 ? void 0 : space.cursors.channel);
  const connectionError = (0,_useConnectionState_js__WEBPACK_IMPORTED_MODULE_4__.useConnectionState)();
  const connectionIdToMember = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    return members.reduce((acc, member) => {
      acc[member.connectionId] = member;
      return acc;
    }, {});
  }, [members]);
  const callback = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_5__.isFunction)(callbackOrOptions) ? callbackOrOptions : undefined;
  const options = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_5__.isFunction)(callbackOrOptions) ? optionsOrNothing : callbackOrOptions;
  const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
  const optionsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(options);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    callbackRef.current = callback;
    optionsRef.current = options;
  }, [callback, options]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!space || !connectionIdToMember) return;
    const listener = cursorUpdate => {
      var _a, _b, _c;
      if (!((_a = optionsRef.current) === null || _a === void 0 ? void 0 : _a.skip)) (_b = callbackRef.current) === null || _b === void 0 ? void 0 : _b.call(callbackRef, cursorUpdate);
      const {
        connectionId
      } = cursorUpdate;
      if (connectionId === (space === null || space === void 0 ? void 0 : space.connectionId) || !((_c = optionsRef.current) === null || _c === void 0 ? void 0 : _c.returnCursors)) return;
      setCursors(currentCursors => Object.assign(Object.assign({}, currentCursors), {
        [connectionId]: {
          member: connectionIdToMember[connectionId],
          cursorUpdate
        }
      }));
    };
    space.cursors.subscribe('update', listener);
    return () => {
      space.cursors.unsubscribe('update', listener);
    };
  }, [space, connectionIdToMember]);
  return {
    space,
    connectionError,
    channelError,
    set: space === null || space === void 0 ? void 0 : space.cursors.set.bind(space === null || space === void 0 ? void 0 : space.cursors),
    cursors
  };
}


/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useEventListener.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useEventListener.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useEventListener: () => (/* binding */ useEventListener)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");

/**
 * todo use `ably/react` hooks instead
 */
const useEventListener = (emitter, listener, event) => {
  const listenerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(listener);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    listenerRef.current = listener;
  }, [listener]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const callback = stateChange => {
      var _a;
      (_a = listenerRef.current) === null || _a === void 0 ? void 0 : _a.call(listenerRef, stateChange);
    };
    if (event) {
      emitter === null || emitter === void 0 ? void 0 : emitter.on(event, callback);
    } else {
      emitter === null || emitter === void 0 ? void 0 : emitter.on(callback);
    }
    return () => {
      if (event) {
        emitter === null || emitter === void 0 ? void 0 : emitter.off(event, callback);
      } else {
        emitter === null || emitter === void 0 ? void 0 : emitter.off(callback);
      }
    };
  }, [emitter, event]);
};

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useLocations.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useLocations.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useLocations: () => (/* binding */ useLocations)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contexts/SpaceContext.js */ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpaceContext.js");
/* harmony import */ var _utilities_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities/is.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/is.js");



/*
 * Registers a subscription on the `Space.locations` object
 */
function useLocations(eventOrCallback, callbackOrOptions, optionsOrNothing) {
  const space = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__.SpaceContext);
  const locations = space === null || space === void 0 ? void 0 : space.locations;
  const callback = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isString)(eventOrCallback) || (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(eventOrCallback) ? callbackOrOptions : eventOrCallback;
  const options = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunction)(callbackOrOptions) ? optionsOrNothing : callbackOrOptions;
  const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    callbackRef.current = callback;
  }, [callback]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (callbackRef.current && locations && !(options === null || options === void 0 ? void 0 : options.skip)) {
      const listener = params => {
        var _a;
        (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, params);
      };
      if (!(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunction)(eventOrCallback) && eventOrCallback) {
        locations.subscribe(eventOrCallback, listener);
      } else {
        locations.subscribe(listener);
      }
      return () => {
        if (!(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunction)(eventOrCallback) && eventOrCallback) {
          locations.unsubscribe(eventOrCallback, listener);
        } else {
          locations.unsubscribe(listener);
        }
      };
    }
  }, [locations, options === null || options === void 0 ? void 0 : options.skip]);
  return {
    space,
    update: locations === null || locations === void 0 ? void 0 : locations.set.bind(locations)
  };
}


/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useLock.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useLock.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useLock: () => (/* binding */ useLock)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contexts/SpaceContext.js */ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpaceContext.js");


/*
 * Returns the status of a lock and, if it has been acquired, the member holding the lock
 */
function useLock(lockId) {
  const space = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__.SpaceContext);
  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [member, setMember] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const initialized = status !== null;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!space) return;
    const handler = lock => {
      if (lock.id !== lockId) return;
      if (lock.status === 'unlocked') {
        setStatus(null);
        setMember(null);
      } else {
        setStatus(lock.status);
        setMember(lock.member);
      }
    };
    space.locks.subscribe('update', handler);
    return () => {
      space === null || space === void 0 ? void 0 : space.locks.unsubscribe('update', handler);
    };
  }, [space, lockId]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (initialized || !space) return;
    const lock = space === null || space === void 0 ? void 0 : space.locks.get(lockId);
    if (lock) {
      setMember(lock.member);
      setStatus(lock.status);
    }
  }, [initialized, space]);
  return {
    status,
    member
  };
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useLocks.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useLocks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useLocks: () => (/* binding */ useLocks)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _utilities_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/is.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/is.js");
/* harmony import */ var _useSpace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useSpace.js */ "./node_modules/@ably/spaces/dist/mjs/react/useSpace.js");



function useLocks(eventOrCallback, callbackOrOptions, optionsOrNothing) {
  const spaceContext = (0,_useSpace_js__WEBPACK_IMPORTED_MODULE_2__.useSpace)();
  const {
    space
  } = spaceContext;
  const callback = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(eventOrCallback) || (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(eventOrCallback) ? callbackOrOptions : eventOrCallback;
  const options = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(callbackOrOptions) ? optionsOrNothing : callbackOrOptions;
  const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    callbackRef.current = callback;
  }, [callback]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (callbackRef.current && (space === null || space === void 0 ? void 0 : space.locks) && !(options === null || options === void 0 ? void 0 : options.skip)) {
      const listener = params => {
        var _a;
        (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, params);
      };
      if (!(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(eventOrCallback) && eventOrCallback) {
        space === null || space === void 0 ? void 0 : space.locks.subscribe(eventOrCallback, listener);
      } else {
        space === null || space === void 0 ? void 0 : space.locks.subscribe(listener);
      }
      return () => {
        if (!(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(eventOrCallback) && eventOrCallback) {
          space === null || space === void 0 ? void 0 : space.locks.unsubscribe(eventOrCallback, listener);
        } else {
          space === null || space === void 0 ? void 0 : space.locks.unsubscribe(listener);
        }
      };
    }
  }, [space === null || space === void 0 ? void 0 : space.locks, options === null || options === void 0 ? void 0 : options.skip]);
  return spaceContext;
}


/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useMembers.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useMembers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useMembers: () => (/* binding */ useMembers)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _useSpace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useSpace.js */ "./node_modules/@ably/spaces/dist/mjs/react/useSpace.js");
/* harmony import */ var _utilities_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities/is.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/is.js");
var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};



function useMembers(eventOrCallback, callbackOrOptions, optionsOrNothing) {
  const {
    space,
    connectionError,
    channelError
  } = (0,_useSpace_js__WEBPACK_IMPORTED_MODULE_1__.useSpace)();
  const [members, setMembers] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [others, setOthers] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [self, setSelf] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const callback = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isString)(eventOrCallback) || (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(eventOrCallback) ? callbackOrOptions : eventOrCallback;
  const options = (0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunction)(callbackOrOptions) ? optionsOrNothing : callbackOrOptions;
  const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    callbackRef.current = callback;
  }, [callback]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (callbackRef.current && (space === null || space === void 0 ? void 0 : space.members) && !(options === null || options === void 0 ? void 0 : options.skip)) {
      const listener = params => {
        var _a;
        (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, params);
      };
      if (!(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunction)(eventOrCallback) && eventOrCallback) {
        space === null || space === void 0 ? void 0 : space.members.subscribe(eventOrCallback, listener);
      } else {
        space === null || space === void 0 ? void 0 : space.members.subscribe(listener);
      }
      return () => {
        if (!(0,_utilities_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunction)(eventOrCallback) && eventOrCallback) {
          space === null || space === void 0 ? void 0 : space.members.unsubscribe(eventOrCallback, listener);
        } else {
          space === null || space === void 0 ? void 0 : space.members.unsubscribe(listener);
        }
      };
    }
  }, [space === null || space === void 0 ? void 0 : space.members, options === null || options === void 0 ? void 0 : options.skip]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!space) return;
    let ignore = false;
    const updateState = (updatedSelf, updatedMembers) => {
      if (ignore) return;
      setSelf(updatedSelf);
      setMembers([...updatedMembers]);
      setOthers(updatedMembers.filter(member => member.connectionId !== (updatedSelf === null || updatedSelf === void 0 ? void 0 : updatedSelf.connectionId)));
    };
    const handler = _ref => {
      let {
        members: updatedMembers
      } = _ref;
      return __awaiter(this, void 0, void 0, function* () {
        const updatedSelf = yield space.members.getSelf();
        updateState(updatedSelf, updatedMembers);
      });
    };
    const init = () => __awaiter(this, void 0, void 0, function* () {
      const initSelf = yield space.members.getSelf();
      const initMembers = yield space.members.getAll();
      updateState(initSelf, initMembers);
      space.subscribe('update', handler);
    });
    init();
    return () => {
      ignore = true;
      space.unsubscribe('update', handler);
    };
  }, [space]);
  return {
    space,
    members,
    others,
    self,
    connectionError,
    channelError
  };
}


/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useSpace.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useSpace.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useSpace: () => (/* binding */ useSpace)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contexts/SpaceContext.js */ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpaceContext.js");
/* harmony import */ var _useChannelState_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useChannelState.js */ "./node_modules/@ably/spaces/dist/mjs/react/useChannelState.js");
/* harmony import */ var _useConnectionState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useConnectionState.js */ "./node_modules/@ably/spaces/dist/mjs/react/useConnectionState.js");




const useSpace = (callback, options) => {
  const space = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_contexts_SpaceContext_js__WEBPACK_IMPORTED_MODULE_1__.SpaceContext);
  const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);
  const channelError = (0,_useChannelState_js__WEBPACK_IMPORTED_MODULE_2__.useChannelState)(space === null || space === void 0 ? void 0 : space.channel);
  const connectionError = (0,_useConnectionState_js__WEBPACK_IMPORTED_MODULE_3__.useConnectionState)();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    callbackRef.current = callback;
  }, [callback]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (callbackRef.current && space && !(options === null || options === void 0 ? void 0 : options.skip)) {
      const listener = params => {
        var _a;
        (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, params);
      };
      space.subscribe('update', listener);
      return () => space.unsubscribe('update', listener);
    }
  }, [space, options === null || options === void 0 ? void 0 : options.skip]);
  return {
    space,
    enter: space === null || space === void 0 ? void 0 : space.enter.bind(space),
    leave: space === null || space === void 0 ? void 0 : space.leave.bind(space),
    updateProfileData: space === null || space === void 0 ? void 0 : space.updateProfileData.bind(space),
    connectionError,
    channelError
  };
};

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/react/useSpaces.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/react/useSpaces.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useSpaces: () => (/* binding */ useSpaces)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _contexts_SpacesContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contexts/SpacesContext.js */ "./node_modules/@ably/spaces/dist/mjs/react/contexts/SpacesContext.js");


const useSpaces = () => {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_contexts_SpacesContext_js__WEBPACK_IMPORTED_MODULE_1__.SpacesContext);
};

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/utilities/EventEmitter.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/utilities/EventEmitter.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvalidArgumentError: () => (/* binding */ InvalidArgumentError),
/* harmony export */   "default": () => (/* binding */ EventEmitter),
/* harmony export */   inspect: () => (/* binding */ inspect),
/* harmony export */   removeListener: () => (/* binding */ removeListener)
/* harmony export */ });
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ "./node_modules/@ably/spaces/dist/mjs/utilities/is.js");

function callListener(eventThis, listener, arg) {
  try {
    listener.apply(eventThis, [arg]);
  } catch (e) {
    console.error('EventEmitter.emit()', 'Unexpected listener exception: ' + e + '; stack = ' + (e && e.stack));
  }
}
/**
 * Remove listeners that match listener
 * @param targetListeners is an array of listener arrays or event objects with arrays of listeners
 * @param listener the listener callback to remove
 * @param eventFilter (optional) event name instructing the function to only remove listeners for the specified event
 */
function removeListener(targetListeners, listener, eventFilter) {
  let listeners;
  let index;
  let eventName;
  for (let targetListenersIndex = 0; targetListenersIndex < targetListeners.length; targetListenersIndex++) {
    listeners = targetListeners[targetListenersIndex];
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(eventFilter) && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(listeners)) {
      listeners = listeners[eventFilter];
    }
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(listeners)) {
      while ((index = listeners.indexOf(listener)) !== -1) {
        listeners.splice(index, 1);
      }
      /* If events object has an event name key with no listeners then
                 remove the key to stop the list growing indefinitely */
      const parentCollection = targetListeners[targetListenersIndex];
      if (eventFilter && listeners.length === 0 && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(parentCollection)) {
        delete parentCollection[eventFilter];
      }
    } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(listeners)) {
      for (eventName in listeners) {
        if (Object.prototype.hasOwnProperty.call(listeners, eventName) && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(listeners[eventName])) {
          removeListener([listeners], listener, eventName);
        }
      }
    }
  }
}
// Equivalent of Platform.config.inspect from ably-js for browser/RN
function inspect(args) {
  return JSON.stringify(args);
}
class InvalidArgumentError extends Error {
  constructor() {
    super(...arguments);
  }
}
/**
 * `EventEmitter` represents an object which is capable of emitting one or more events, which are identified by their name. It provides methods which allow you to listen for these events. It serves as the base class for all of the event-emitting classes in the Spaces SDK.
 *
 * @typeParam T An object type, the names of whose properties are the names of the events that an instance of this class can emit.
 */
class EventEmitter {
  /**
   * @internal
   * @typeParam T An object type, the names of whose properties are the names of the events that the constructed object can emit.
   */
  constructor() {
    this.any = [];
    this.events = Object.create(null);
    this.anyOnce = [];
    this.eventsOnce = Object.create(null);
  }
  on(listenerOrEvents, listener) {
    // .on(() => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listenerOrEvents)) {
      this.any.push(listenerOrEvents);
      return;
    }
    // .on("eventName", () => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(listenerOrEvents) && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listener)) {
      const listeners = this.events[listenerOrEvents] || (this.events[listenerOrEvents] = []);
      listeners.push(listener);
      return;
    }
    // .on(["eventName"], () => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(listenerOrEvents) && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listener)) {
      listenerOrEvents.forEach(eventName => {
        this.on(eventName, listener);
      });
      return;
    }
    throw new InvalidArgumentError('EventEmitter.on(): Invalid arguments: ' + inspect([listenerOrEvents, listener]));
  }
  off(listenerOrEvents, listener) {
    // .off()
    // don't use arguments.length === 0 here as don't won't handle
    // cases like .off(undefined) which is a valid call
    if (!listenerOrEvents && !listener) {
      this.any = [];
      this.events = Object.create(null);
      this.anyOnce = [];
      this.eventsOnce = Object.create(null);
      return;
    }
    // .off(() => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listenerOrEvents)) {
      removeListener([this.any, this.events, this.anyOnce, this.eventsOnce], listenerOrEvents);
      return;
    }
    // .off("eventName", () => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(listenerOrEvents) && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listener)) {
      removeListener([this.events, this.eventsOnce], listener, listenerOrEvents);
      return;
    }
    // .off("eventName")
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(listenerOrEvents)) {
      delete this.events[listenerOrEvents];
      delete this.eventsOnce[listenerOrEvents];
      return;
    }
    // .off(["eventName"], () => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(listenerOrEvents) && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listener)) {
      listenerOrEvents.forEach(eventName => {
        this.off(eventName, listener);
      });
      return;
    }
    // .off(["eventName"])
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(listenerOrEvents)) {
      listenerOrEvents.forEach(eventName => {
        this.off(eventName);
      });
      return;
    }
    throw new InvalidArgumentError('EventEmitter.off(): invalid arguments:' + inspect([listenerOrEvents, listener]));
  }
  /**
   * Get the array of listeners for a given event. Excludes `once` events.
   * @param event An event name.
   * @return An array of events, or `null` if there are none.
   *
   * @typeParam K A type which allows a name of the properties of {@link T}. TypeScript will infer this type based on the {@link event} argument.
   */
  listeners(event) {
    var _a;
    if (event) {
      const listeners = [...((_a = this.events[event]) !== null && _a !== void 0 ? _a : [])];
      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(this.eventsOnce[event])) {
        Array.prototype.push.apply(listeners, this.eventsOnce[event]);
      }
      return listeners.length ? listeners : null;
    }
    return this.any.length ? this.any : null;
  }
  /**
   * @internal
   *
   * Emit an event
   * @param event An event name.
   * @param arg The arguments to pass to the listener.
   */
  emit(event, arg) {
    const eventThis = {
      event
    };
    const listeners = [];
    if (this.anyOnce.length > 0) {
      Array.prototype.push.apply(listeners, this.anyOnce);
      this.anyOnce = [];
    }
    if (this.any.length > 0) {
      Array.prototype.push.apply(listeners, this.any);
    }
    const eventsOnceListeners = this.eventsOnce[event];
    if (eventsOnceListeners) {
      Array.prototype.push.apply(listeners, eventsOnceListeners);
      delete this.eventsOnce[event];
    }
    const eventsListeners = this.events[event];
    if (eventsListeners) {
      Array.prototype.push.apply(listeners, eventsListeners);
    }
    listeners.forEach(function (listener) {
      callListener(eventThis, listener, arg);
    });
  }
  once(listenerOrEvent, listener) {
    // .once("eventName", () => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(listenerOrEvent) && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listener)) {
      const listeners = this.eventsOnce[listenerOrEvent] || (this.eventsOnce[listenerOrEvent] = []);
      listeners.push(listener);
      return;
    }
    // .once(() => {})
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(listenerOrEvent)) {
      this.anyOnce.push(listenerOrEvent);
      return;
    }
    throw new InvalidArgumentError('EventEmitter.once(): invalid arguments:' + inspect([listenerOrEvent, listener]));
  }
  /**
   * @internal
   *
   * Listen for a single occurrence of a state event and fire immediately if currentState matches targetState
   * @param targetState the name of the state event to listen to
   * @param currentState the name of the current state of this object
   * @param listener the listener to be called
   * @param listenerArg the argument to pass to the listener
   */
  whenState(targetState, currentState, listener, listenerArg) {
    const eventThis = {
      event: targetState
    };
    if (typeof targetState !== 'string' || typeof currentState !== 'string') {
      throw new InvalidArgumentError('whenState requires a valid event String argument');
    }
    if (typeof listener !== 'function' && Promise) {
      return new Promise(resolve => {
        EventEmitter.prototype.whenState.apply(this, [targetState, currentState, resolve, listenerArg]);
      });
    }
    if (targetState === currentState) {
      callListener(eventThis, listener, listenerArg);
    } else {
      this.once(targetState, listener);
    }
  }
}

/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/utilities/is.js":
/*!************************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/utilities/is.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isArray: () => (/* binding */ isArray),
/* harmony export */   isFunction: () => (/* binding */ isFunction),
/* harmony export */   isObject: () => (/* binding */ isObject),
/* harmony export */   isString: () => (/* binding */ isString)
/* harmony export */ });
function typeOf(arg) {
  return Object.prototype.toString.call(arg).slice(8, -1);
}
// Equivalent of Util.isObject from ably-js
function isObject(arg) {
  return typeOf(arg) === 'Object';
}
function isFunction(arg) {
  return ['Function', 'AsyncFunction', 'GeneratorFunction', 'Proxy'].includes(typeOf(arg));
}
function isString(arg) {
  return typeOf(arg) === 'String';
}
function isArray(arg) {
  return Array.isArray(arg);
}


/***/ }),

/***/ "./node_modules/@ably/spaces/dist/mjs/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ably/spaces/dist/mjs/version.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VERSION: () => (/* binding */ VERSION)
/* harmony export */ });
// Manually update when bumping version
const VERSION = '0.3.1';


/***/ }),

/***/ "./node_modules/@ably/spaces/node_modules/nanoid/index.browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ably/spaces/node_modules/nanoid/index.browser.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   customAlphabet: () => (/* binding */ customAlphabet),
/* harmony export */   customRandom: () => (/* binding */ customRandom),
/* harmony export */   nanoid: () => (/* binding */ nanoid),
/* harmony export */   random: () => (/* binding */ random),
/* harmony export */   urlAlphabet: () => (/* reexport safe */ _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__.urlAlphabet)
/* harmony export */ });
/* harmony import */ var _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url-alphabet/index.js */ "./node_modules/@ably/spaces/node_modules/nanoid/url-alphabet/index.js");

let random = bytes => crypto.getRandomValues(new Uint8Array(bytes));
let customRandom = (alphabet, defaultSize, getRandom) => {
  let mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;
  let step = -~(1.6 * mask * defaultSize / alphabet.length);
  return function () {
    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;
    let id = '';
    while (true) {
      let bytes = getRandom(step);
      let j = step;
      while (j--) {
        id += alphabet[bytes[j] & mask] || '';
        if (id.length === size) return id;
      }
    }
  };
};
let customAlphabet = function customAlphabet(alphabet) {
  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 21;
  return customRandom(alphabet, size, random);
};
let nanoid = function nanoid() {
  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;
  return crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
    byte &= 63;
    if (byte < 36) {
      id += byte.toString(36);
    } else if (byte < 62) {
      id += (byte - 26).toString(36).toUpperCase();
    } else if (byte > 62) {
      id += '-';
    } else {
      id += '_';
    }
    return id;
  }, '');
};


/***/ }),

/***/ "./node_modules/@ably/spaces/node_modules/nanoid/url-alphabet/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ably/spaces/node_modules/nanoid/url-alphabet/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   urlAlphabet: () => (/* binding */ urlAlphabet)
/* harmony export */ });
let urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';


/***/ }),

/***/ "./node_modules/random-words/index.js":
/*!********************************************!*\
  !*** ./node_modules/random-words/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   count: () => (/* binding */ count),
/* harmony export */   generate: () => (/* binding */ generate),
/* harmony export */   wordList: () => (/* binding */ wordList)
/* harmony export */ });
/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ "./node_modules/seedrandom/index.js");
const _excluded = ["minLength", "maxLength"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }


// Export the word list as it is often useful
const wordList = ["ability", "able", "aboard", "about", "above", "accept", "accident", "according", "account", "accurate", "acres", "across", "act", "action", "active", "activity", "actual", "actually", "add", "addition", "additional", "adjective", "adult", "adventure", "advice", "affect", "afraid", "after", "afternoon", "again", "against", "age", "ago", "agree", "ahead", "aid", "air", "airplane", "alike", "alive", "all", "allow", "almost", "alone", "along", "aloud", "alphabet", "already", "also", "although", "am", "among", "amount", "ancient", "angle", "angry", "animal", "announced", "another", "answer", "ants", "any", "anybody", "anyone", "anything", "anyway", "anywhere", "apart", "apartment", "appearance", "apple", "applied", "appropriate", "are", "area", "arm", "army", "around", "arrange", "arrangement", "arrive", "arrow", "art", "article", "as", "aside", "ask", "asleep", "at", "ate", "atmosphere", "atom", "atomic", "attached", "attack", "attempt", "attention", "audience", "author", "automobile", "available", "average", "avoid", "aware", "away", "baby", "back", "bad", "badly", "bag", "balance", "ball", "balloon", "band", "bank", "bar", "bare", "bark", "barn", "base", "baseball", "basic", "basis", "basket", "bat", "battle", "be", "bean", "bear", "beat", "beautiful", "beauty", "became", "because", "become", "becoming", "bee", "been", "before", "began", "beginning", "begun", "behavior", "behind", "being", "believed", "bell", "belong", "below", "belt", "bend", "beneath", "bent", "beside", "best", "bet", "better", "between", "beyond", "bicycle", "bigger", "biggest", "bill", "birds", "birth", "birthday", "bit", "bite", "black", "blank", "blanket", "blew", "blind", "block", "blood", "blow", "blue", "board", "boat", "body", "bone", "book", "border", "born", "both", "bottle", "bottom", "bound", "bow", "bowl", "box", "boy", "brain", "branch", "brass", "brave", "bread", "break", "breakfast", "breath", "breathe", "breathing", "breeze", "brick", "bridge", "brief", "bright", "bring", "broad", "broke", "broken", "brother", "brought", "brown", "brush", "buffalo", "build", "building", "built", "buried", "burn", "burst", "bus", "bush", "business", "busy", "but", "butter", "buy", "by", "cabin", "cage", "cake", "call", "calm", "came", "camera", "camp", "can", "canal", "cannot", "cap", "capital", "captain", "captured", "car", "carbon", "card", "care", "careful", "carefully", "carried", "carry", "case", "cast", "castle", "cat", "catch", "cattle", "caught", "cause", "cave", "cell", "cent", "center", "central", "century", "certain", "certainly", "chain", "chair", "chamber", "chance", "change", "changing", "chapter", "character", "characteristic", "charge", "chart", "check", "cheese", "chemical", "chest", "chicken", "chief", "child", "children", "choice", "choose", "chose", "chosen", "church", "circle", "circus", "citizen", "city", "class", "classroom", "claws", "clay", "clean", "clear", "clearly", "climate", "climb", "clock", "close", "closely", "closer", "cloth", "clothes", "clothing", "cloud", "club", "coach", "coal", "coast", "coat", "coffee", "cold", "collect", "college", "colony", "color", "column", "combination", "combine", "come", "comfortable", "coming", "command", "common", "community", "company", "compare", "compass", "complete", "completely", "complex", "composed", "composition", "compound", "concerned", "condition", "congress", "connected", "consider", "consist", "consonant", "constantly", "construction", "contain", "continent", "continued", "contrast", "control", "conversation", "cook", "cookies", "cool", "copper", "copy", "corn", "corner", "correct", "correctly", "cost", "cotton", "could", "count", "country", "couple", "courage", "course", "court", "cover", "cow", "cowboy", "crack", "cream", "create", "creature", "crew", "crop", "cross", "crowd", "cry", "cup", "curious", "current", "curve", "customs", "cut", "cutting", "daily", "damage", "dance", "danger", "dangerous", "dark", "darkness", "date", "daughter", "dawn", "day", "dead", "deal", "dear", "death", "decide", "declared", "deep", "deeply", "deer", "definition", "degree", "depend", "depth", "describe", "desert", "design", "desk", "detail", "determine", "develop", "development", "diagram", "diameter", "did", "die", "differ", "difference", "different", "difficult", "difficulty", "dig", "dinner", "direct", "direction", "directly", "dirt", "dirty", "disappear", "discover", "discovery", "discuss", "discussion", "disease", "dish", "distance", "distant", "divide", "division", "do", "doctor", "does", "dog", "doing", "doll", "dollar", "done", "donkey", "door", "dot", "double", "doubt", "down", "dozen", "draw", "drawn", "dream", "dress", "drew", "dried", "drink", "drive", "driven", "driver", "driving", "drop", "dropped", "drove", "dry", "duck", "due", "dug", "dull", "during", "dust", "duty", "each", "eager", "ear", "earlier", "early", "earn", "earth", "easier", "easily", "east", "easy", "eat", "eaten", "edge", "education", "effect", "effort", "egg", "eight", "either", "electric", "electricity", "element", "elephant", "eleven", "else", "empty", "end", "enemy", "energy", "engine", "engineer", "enjoy", "enough", "enter", "entire", "entirely", "environment", "equal", "equally", "equator", "equipment", "escape", "especially", "essential", "establish", "even", "evening", "event", "eventually", "ever", "every", "everybody", "everyone", "everything", "everywhere", "evidence", "exact", "exactly", "examine", "example", "excellent", "except", "exchange", "excited", "excitement", "exciting", "exclaimed", "exercise", "exist", "expect", "experience", "experiment", "explain", "explanation", "explore", "express", "expression", "extra", "eye", "face", "facing", "fact", "factor", "factory", "failed", "fair", "fairly", "fall", "fallen", "familiar", "family", "famous", "far", "farm", "farmer", "farther", "fast", "fastened", "faster", "fat", "father", "favorite", "fear", "feathers", "feature", "fed", "feed", "feel", "feet", "fell", "fellow", "felt", "fence", "few", "fewer", "field", "fierce", "fifteen", "fifth", "fifty", "fight", "fighting", "figure", "fill", "film", "final", "finally", "find", "fine", "finest", "finger", "finish", "fire", "fireplace", "firm", "first", "fish", "five", "fix", "flag", "flame", "flat", "flew", "flies", "flight", "floating", "floor", "flow", "flower", "fly", "fog", "folks", "follow", "food", "foot", "football", "for", "force", "foreign", "forest", "forget", "forgot", "forgotten", "form", "former", "fort", "forth", "forty", "forward", "fought", "found", "four", "fourth", "fox", "frame", "free", "freedom", "frequently", "fresh", "friend", "friendly", "frighten", "frog", "from", "front", "frozen", "fruit", "fuel", "full", "fully", "fun", "function", "funny", "fur", "furniture", "further", "future", "gain", "game", "garage", "garden", "gas", "gasoline", "gate", "gather", "gave", "general", "generally", "gentle", "gently", "get", "getting", "giant", "gift", "girl", "give", "given", "giving", "glad", "glass", "globe", "go", "goes", "gold", "golden", "gone", "good", "goose", "got", "government", "grabbed", "grade", "gradually", "grain", "grandfather", "grandmother", "graph", "grass", "gravity", "gray", "great", "greater", "greatest", "greatly", "green", "grew", "ground", "group", "grow", "grown", "growth", "guard", "guess", "guide", "gulf", "gun", "habit", "had", "hair", "half", "halfway", "hall", "hand", "handle", "handsome", "hang", "happen", "happened", "happily", "happy", "harbor", "hard", "harder", "hardly", "has", "hat", "have", "having", "hay", "he", "headed", "heading", "health", "heard", "hearing", "heart", "heat", "heavy", "height", "held", "hello", "help", "helpful", "her", "herd", "here", "herself", "hidden", "hide", "high", "higher", "highest", "highway", "hill", "him", "himself", "his", "history", "hit", "hold", "hole", "hollow", "home", "honor", "hope", "horn", "horse", "hospital", "hot", "hour", "house", "how", "however", "huge", "human", "hundred", "hung", "hungry", "hunt", "hunter", "hurried", "hurry", "hurt", "husband", "ice", "idea", "identity", "if", "ill", "image", "imagine", "immediately", "importance", "important", "impossible", "improve", "in", "inch", "include", "including", "income", "increase", "indeed", "independent", "indicate", "individual", "industrial", "industry", "influence", "information", "inside", "instance", "instant", "instead", "instrument", "interest", "interior", "into", "introduced", "invented", "involved", "iron", "is", "island", "it", "its", "itself", "jack", "jar", "jet", "job", "join", "joined", "journey", "joy", "judge", "jump", "jungle", "just", "keep", "kept", "key", "kids", "kill", "kind", "kitchen", "knew", "knife", "know", "knowledge", "known", "label", "labor", "lack", "lady", "laid", "lake", "lamp", "land", "language", "large", "larger", "largest", "last", "late", "later", "laugh", "law", "lay", "layers", "lead", "leader", "leaf", "learn", "least", "leather", "leave", "leaving", "led", "left", "leg", "length", "lesson", "let", "letter", "level", "library", "lie", "life", "lift", "light", "like", "likely", "limited", "line", "lion", "lips", "liquid", "list", "listen", "little", "live", "living", "load", "local", "locate", "location", "log", "lonely", "long", "longer", "look", "loose", "lose", "loss", "lost", "lot", "loud", "love", "lovely", "low", "lower", "luck", "lucky", "lunch", "lungs", "lying", "machine", "machinery", "mad", "made", "magic", "magnet", "mail", "main", "mainly", "major", "make", "making", "man", "managed", "manner", "manufacturing", "many", "map", "mark", "market", "married", "mass", "massage", "master", "material", "mathematics", "matter", "may", "maybe", "me", "meal", "mean", "means", "meant", "measure", "meat", "medicine", "meet", "melted", "member", "memory", "men", "mental", "merely", "met", "metal", "method", "mice", "middle", "might", "mighty", "mile", "military", "milk", "mill", "mind", "mine", "minerals", "minute", "mirror", "missing", "mission", "mistake", "mix", "mixture", "model", "modern", "molecular", "moment", "money", "monkey", "month", "mood", "moon", "more", "morning", "most", "mostly", "mother", "motion", "motor", "mountain", "mouse", "mouth", "move", "movement", "movie", "moving", "mud", "muscle", "music", "musical", "must", "my", "myself", "mysterious", "nails", "name", "nation", "national", "native", "natural", "naturally", "nature", "near", "nearby", "nearer", "nearest", "nearly", "necessary", "neck", "needed", "needle", "needs", "negative", "neighbor", "neighborhood", "nervous", "nest", "never", "new", "news", "newspaper", "next", "nice", "night", "nine", "no", "nobody", "nodded", "noise", "none", "noon", "nor", "north", "nose", "not", "note", "noted", "nothing", "notice", "noun", "now", "number", "numeral", "nuts", "object", "observe", "obtain", "occasionally", "occur", "ocean", "of", "off", "offer", "office", "officer", "official", "oil", "old", "older", "oldest", "on", "once", "one", "only", "onto", "open", "operation", "opinion", "opportunity", "opposite", "or", "orange", "orbit", "order", "ordinary", "organization", "organized", "origin", "original", "other", "ought", "our", "ourselves", "out", "outer", "outline", "outside", "over", "own", "owner", "oxygen", "pack", "package", "page", "paid", "pain", "paint", "pair", "palace", "pale", "pan", "paper", "paragraph", "parallel", "parent", "park", "part", "particles", "particular", "particularly", "partly", "parts", "party", "pass", "passage", "past", "path", "pattern", "pay", "peace", "pen", "pencil", "people", "per", "percent", "perfect", "perfectly", "perhaps", "period", "person", "personal", "pet", "phrase", "physical", "piano", "pick", "picture", "pictured", "pie", "piece", "pig", "pile", "pilot", "pine", "pink", "pipe", "pitch", "place", "plain", "plan", "plane", "planet", "planned", "planning", "plant", "plastic", "plate", "plates", "play", "pleasant", "please", "pleasure", "plenty", "plural", "plus", "pocket", "poem", "poet", "poetry", "point", "pole", "police", "policeman", "political", "pond", "pony", "pool", "poor", "popular", "population", "porch", "port", "position", "positive", "possible", "possibly", "post", "pot", "potatoes", "pound", "pour", "powder", "power", "powerful", "practical", "practice", "prepare", "present", "president", "press", "pressure", "pretty", "prevent", "previous", "price", "pride", "primitive", "principal", "principle", "printed", "private", "prize", "probably", "problem", "process", "produce", "product", "production", "program", "progress", "promised", "proper", "properly", "property", "protection", "proud", "prove", "provide", "public", "pull", "pupil", "pure", "purple", "purpose", "push", "put", "putting", "quarter", "queen", "question", "quick", "quickly", "quiet", "quietly", "quite", "rabbit", "race", "radio", "railroad", "rain", "raise", "ran", "ranch", "range", "rapidly", "rate", "rather", "raw", "rays", "reach", "read", "reader", "ready", "real", "realize", "rear", "reason", "recall", "receive", "recent", "recently", "recognize", "record", "red", "refer", "refused", "region", "regular", "related", "relationship", "religious", "remain", "remarkable", "remember", "remove", "repeat", "replace", "replied", "report", "represent", "require", "research", "respect", "rest", "result", "return", "review", "rhyme", "rhythm", "rice", "rich", "ride", "riding", "right", "ring", "rise", "rising", "river", "road", "roar", "rock", "rocket", "rocky", "rod", "roll", "roof", "room", "root", "rope", "rose", "rough", "round", "route", "row", "rubbed", "rubber", "rule", "ruler", "run", "running", "rush", "sad", "saddle", "safe", "safety", "said", "sail", "sale", "salmon", "salt", "same", "sand", "sang", "sat", "satellites", "satisfied", "save", "saved", "saw", "say", "scale", "scared", "scene", "school", "science", "scientific", "scientist", "score", "screen", "sea", "search", "season", "seat", "second", "secret", "section", "see", "seed", "seeing", "seems", "seen", "seldom", "select", "selection", "sell", "send", "sense", "sent", "sentence", "separate", "series", "serious", "serve", "service", "sets", "setting", "settle", "settlers", "seven", "several", "shade", "shadow", "shake", "shaking", "shall", "shallow", "shape", "share", "sharp", "she", "sheep", "sheet", "shelf", "shells", "shelter", "shine", "shinning", "ship", "shirt", "shoe", "shoot", "shop", "shore", "short", "shorter", "shot", "should", "shoulder", "shout", "show", "shown", "shut", "sick", "sides", "sight", "sign", "signal", "silence", "silent", "silk", "silly", "silver", "similar", "simple", "simplest", "simply", "since", "sing", "single", "sink", "sister", "sit", "sitting", "situation", "six", "size", "skill", "skin", "sky", "slabs", "slave", "sleep", "slept", "slide", "slight", "slightly", "slip", "slipped", "slope", "slow", "slowly", "small", "smaller", "smallest", "smell", "smile", "smoke", "smooth", "snake", "snow", "so", "soap", "social", "society", "soft", "softly", "soil", "solar", "sold", "soldier", "solid", "solution", "solve", "some", "somebody", "somehow", "someone", "something", "sometime", "somewhere", "son", "song", "soon", "sort", "sound", "source", "south", "southern", "space", "speak", "special", "species", "specific", "speech", "speed", "spell", "spend", "spent", "spider", "spin", "spirit", "spite", "split", "spoken", "sport", "spread", "spring", "square", "stage", "stairs", "stand", "standard", "star", "stared", "start", "state", "statement", "station", "stay", "steady", "steam", "steel", "steep", "stems", "step", "stepped", "stick", "stiff", "still", "stock", "stomach", "stone", "stood", "stop", "stopped", "store", "storm", "story", "stove", "straight", "strange", "stranger", "straw", "stream", "street", "strength", "stretch", "strike", "string", "strip", "strong", "stronger", "struck", "structure", "struggle", "stuck", "student", "studied", "studying", "subject", "substance", "success", "successful", "such", "sudden", "suddenly", "sugar", "suggest", "suit", "sum", "summer", "sun", "sunlight", "supper", "supply", "support", "suppose", "sure", "surface", "surprise", "surrounded", "swam", "sweet", "swept", "swim", "swimming", "swing", "swung", "syllable", "symbol", "system", "table", "tail", "take", "taken", "tales", "talk", "tall", "tank", "tape", "task", "taste", "taught", "tax", "tea", "teach", "teacher", "team", "tears", "teeth", "telephone", "television", "tell", "temperature", "ten", "tent", "term", "terrible", "test", "than", "thank", "that", "thee", "them", "themselves", "then", "theory", "there", "therefore", "these", "they", "thick", "thin", "thing", "think", "third", "thirty", "this", "those", "thou", "though", "thought", "thousand", "thread", "three", "threw", "throat", "through", "throughout", "throw", "thrown", "thumb", "thus", "thy", "tide", "tie", "tight", "tightly", "till", "time", "tin", "tiny", "tip", "tired", "title", "to", "tobacco", "today", "together", "told", "tomorrow", "tone", "tongue", "tonight", "too", "took", "tool", "top", "topic", "torn", "total", "touch", "toward", "tower", "town", "toy", "trace", "track", "trade", "traffic", "trail", "train", "transportation", "trap", "travel", "treated", "tree", "triangle", "tribe", "trick", "tried", "trip", "troops", "tropical", "trouble", "truck", "trunk", "truth", "try", "tube", "tune", "turn", "twelve", "twenty", "twice", "two", "type", "typical", "uncle", "under", "underline", "understanding", "unhappy", "union", "unit", "universe", "unknown", "unless", "until", "unusual", "up", "upon", "upper", "upward", "us", "use", "useful", "using", "usual", "usually", "valley", "valuable", "value", "vapor", "variety", "various", "vast", "vegetable", "verb", "vertical", "very", "vessels", "victory", "view", "village", "visit", "visitor", "voice", "volume", "vote", "vowel", "voyage", "wagon", "wait", "walk", "wall", "want", "war", "warm", "warn", "was", "wash", "waste", "watch", "water", "wave", "way", "we", "weak", "wealth", "wear", "weather", "week", "weigh", "weight", "welcome", "well", "went", "were", "west", "western", "wet", "whale", "what", "whatever", "wheat", "wheel", "when", "whenever", "where", "wherever", "whether", "which", "while", "whispered", "whistle", "white", "who", "whole", "whom", "whose", "why", "wide", "widely", "wife", "wild", "will", "willing", "win", "wind", "window", "wing", "winter", "wire", "wise", "wish", "with", "within", "without", "wolf", "women", "won", "wonder", "wonderful", "wood", "wooden", "wool", "word", "wore", "work", "worker", "world", "worried", "worry", "worse", "worth", "would", "wrapped", "write", "writer", "writing", "written", "wrong", "wrote", "yard", "year", "yellow", "yes", "yesterday", "yet", "you", "young", "younger", "your", "yourself", "youth", "zero", "zebra", "zipper", "zoo", "zulu"];
const shortestWordSize = wordList.reduce((shortestWord, currentWord) => currentWord.length < shortestWord.length ? currentWord : shortestWord).length;
const longestWordSize = wordList.reduce((longestWord, currentWord) => currentWord.length > longestWord.length ? currentWord : longestWord).length;
function generate(options) {
  var _options;
  // initalize random number generator for words if options.seed is provided
  const random = (_options = options) !== null && _options !== void 0 && _options.seed ? new seedrandom__WEBPACK_IMPORTED_MODULE_0__(options.seed) : null;
  const _ref = options || {},
    {
      minLength,
      maxLength
    } = _ref,
    rest = _objectWithoutProperties(_ref, _excluded);
  function word() {
    let min = typeof minLength !== "number" ? shortestWordSize : limitWordSize(minLength);
    const max = typeof maxLength !== "number" ? longestWordSize : limitWordSize(maxLength);
    if (min > max) min = max;
    let rightSize = false;
    let wordUsed;
    while (!rightSize) {
      wordUsed = generateRandomWord();
      rightSize = wordUsed.length <= max && wordUsed.length >= min;
    }
    return wordUsed;
  }
  function generateRandomWord() {
    return wordList[randInt(wordList.length)];
  }

  // limits the size of words to the minimum and maximum possible
  function limitWordSize(wordSize) {
    if (wordSize < shortestWordSize) wordSize = shortestWordSize;
    if (wordSize > longestWordSize) wordSize = longestWordSize;
    return wordSize;
  }

  // random int as seeded by options.seed if applicable, or Math.random() otherwise
  function randInt(lessThan) {
    const r = random ? random() : Math.random();
    return Math.floor(r * lessThan);
  }

  // No arguments = generate one word
  if (options === undefined) {
    return word();
  }

  // Just a number = return that many words
  if (typeof options === "number") {
    options = {
      exactly: options
    };
  } else if (Object.keys(rest).length === 0) {
    return word();
  }

  // options supported: exactly, min, max, join
  if (options.exactly) {
    options.min = options.exactly;
    options.max = options.exactly;
  }

  // not a number = one word par string
  if (typeof options.wordsPerString !== "number") {
    options.wordsPerString = 1;
  }

  //not a function = returns the raw word
  if (typeof options.formatter !== "function") {
    options.formatter = word => word;
  }

  //not a string = separator is a space
  if (typeof options.separator !== "string") {
    options.separator = " ";
  }
  const total = options.min + randInt(options.max + 1 - options.min);
  let results = [];
  let token = "";
  let relativeIndex = 0;
  for (let i = 0; i < total * options.wordsPerString; i++) {
    if (relativeIndex === options.wordsPerString - 1) {
      token += options.formatter(word(), relativeIndex);
    } else {
      token += options.formatter(word(), relativeIndex) + options.separator;
    }
    relativeIndex++;
    if ((i + 1) % options.wordsPerString === 0) {
      results.push(token);
      token = "";
      relativeIndex = 0;
    }
  }
  if (typeof options.join === "string") {
    results = results.join(options.join);
  }
  return results;
}
function count(options) {
  let {
    minLength,
    maxLength
  } = options || {};
  if (typeof minLength !== "number") {
    minLength = shortestWordSize;
  }
  if (typeof maxLength !== "number") {
    maxLength = longestWordSize;
  }
  return wordList.filter(word => word.length >= minLength && word.length <= maxLength).length;
}

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_core-js_fn_array_includes_js-node_modules_intl_index_js-node_modules_abl-bc6f29.006f21083be2d6e317b2.js.map